name: CI

on:
  pull_request:
    branches:
      - master
      - develop
  push:
    branches:
      - '*'
    tags:
      - "v*.*.*"

concurrency:
  group: ${{format('{0}:{1}', github.repository, github.ref)}}
  cancel-in-progress: true

env:
  GIT_FETCH_JOBS: 8
  NET_RETRY_COUNT: 5
  DEFAULT_BUILD_VARIANT: debug,release

jobs:
  cpp-matrix:
    runs-on: ubuntu-latest
    name: Generate Test Matrix
    outputs:
      matrix: ${{ steps.cpp-matrix.outputs.matrix }}
    steps:
      - name: Clone cpp-actions
        uses: actions/checkout@v3

      - name: Generate Test Matrix
        uses: ./cpp-matrix
        id: cpp-matrix
        with:
          standards: '>=11'
          trace-commands: true

  build:
    needs: cpp-matrix

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.cpp-matrix.outputs.matrix) }}

    defaults:
      run:
        shell: bash

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}
    container: ${{matrix.container}}
    timeout-minutes: 30
    permissions:
      contents: write

    steps:
      - name: Clone cpp-actions
        uses: actions/checkout@v3

      # Set up the compiler before package-install in case one of the packages needs a compiler
      - name: Setup C++
        uses: ./setup-cpp
        id: setup-cpp
        with:
          compiler: ${{ matrix.compiler }}
          version: ${{ matrix.version }}
          trace-commands: 'true'

      - name: Install packages
        uses: ./package-install
        id: package-install
        with:
          vcpkg: fmt
          apt-get: ${{ join(matrix.install, ' ') }} ${{ matrix.container && 'sudo software-properties-common wget curl apt-transport-https make apt-file unzip libssl-dev build-essential autotools-dev autoconf automake g++ libc++-helpers python ruby cpio gcc-multilib g++-multilib pkgconf python3 ccache libpython-dev python3-distutils python3-pip git cmake' }}
          apt-get-ignore-missing: ${{ matrix.container && 'true' }}
          cc: ${{ steps.setup-cpp.outputs.cc || matrix.cc }}
          ccflags: ${{ matrix.ccflags }}
          cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx }}
          cxxflags: ${{ matrix.cxxflags }}
          trace-commands: true

      - name: Clone Boost.Variant2
        uses: ./boost-clone
        id: boost-clone
        with:
          branch: master
          modules: variant2
          modules-scan-paths: 'test'
          modules-exclude-paths: ''
          trace-commands: true

      - name: Test Boost.Variant2
        uses: ./b2-workflow
        with:
          source-dir: ${{ steps.boost-clone.outputs.boost-dir }}
          modules: variant2
          toolset: ${{ matrix.b2-toolset }}
          cxxstd: ${{ matrix.cxxstd }}
          cxx: ${{ (startsWith(matrix.cxx, 'clang') && (steps.setup-cpp.outputs.cxx || matrix.cxx)) || '' }}
          address-model: ${{ (matrix.x86 && '32') || '64' }}
          ubsan: ${{ matrix.ubsan }}

      - name: CMake Workflow
        uses: ./cmake-workflow
        with:
          cmake-version: '>=3.20'
          source-dir: tests
          generator: ${{ matrix.generator }}
          toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }}
          build-type: ${{ matrix.build-type }}
          run-tests: true
          install-prefix: $GITHUB_WORKSPACE/.local
          cxxstd: ${{ matrix.cxxstd }}
          cc: ${{ steps.setup-cpp.outputs.cc || matrix.cc }}
          ccflags: ${{ matrix.ccflags }}
          cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx }}
          cxxflags: ${{ matrix.cxxflags }}
          extra-args: -D BOOST_SRC_DIR="${{ steps.boost-clone.outputs.boost-dir }}"
          ref-source-dir: .
          trace-commands: true

  docs:
    needs: build
    if: ${{ github.event_name == 'push' && (contains(fromJSON('["master", "develop"]'), github.ref_name) || startsWith(github.ref, 'refs/tags/')) }}
    defaults:
      run:
        shell: bash

    name: Docs and Release
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    permissions:
      contents: write

    steps:
      - name: Clone cpp-actions
        uses: actions/checkout@v3
        with:
          fetch-depth: 100

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Antora
        working-directory: docs
        run: |
          npm install

      - name: Recreate symlinks
        working-directory: docs
        run: |
          rm supplemental-ui/js/vendor/tabs.js
          rm supplemental-ui/css/vendor/tabs.css
          cp node_modules/@asciidoctor/tabs/dist/css/tabs.css supplemental-ui/css/vendor/
          cp node_modules/@asciidoctor/tabs/dist/js/tabs.js supplemental-ui/js/vendor/

      - name: Generate Site
        working-directory: docs
        run: |
          npx antora antora-playbook.yml

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build/site

      - name: Create release notes
        uses: ./create-changelog
        with:
          output-path: CHANGELOG.md
          trace-commands: true

      - name: Remove existing master release
        if: github.ref_name != 'develop'
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: ${{ github.ref_name || github.ref }}-release
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true

      - name: Create Release
        if: github.ref_name != 'develop'
        uses: softprops/action-gh-release@v1
        with:
          files: LICENSE
          name: ${{ github.ref_name || github.ref }}
          tag_name: ${{ github.ref_name || github.ref }}${{ ((!startsWith(github.ref, 'refs/tags/')) && '-release') || '' }}
          body_path: CHANGELOG.md
          prerelease: false
          draft: false
          token: ${{ github.token }}

      - name: Delete draft master releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        if: github.ref_name != 'develop'
        with:
          keep_latest: 1
          delete_tag_pattern: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
