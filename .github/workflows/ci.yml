name: CI

on:
  pull_request:
    branches:
      - master
      - develop
  push:
    branches:
      - '*'
    tags:
      - "v*.*.*"

concurrency:
  group: ${{format('{0}:{1}', github.repository, github.ref)}}
  cancel-in-progress: true

env:
  GIT_FETCH_JOBS: 8
  NET_RETRY_COUNT: 5
  DEFAULT_BUILD_VARIANT: debug,release

jobs:
  build:
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          # Latest
          - { name: 'GCC 13 (Latest): C++17-20', toolset: gcc-13, cxx: g++-13, cc: gcc-13, cxxstd: "17,20", os: ubuntu-22.04 }
          - { name: 'Clang 16 (Latest): C++17-20', toolset: clang, cxx: clang++-16, cc: clang-16, cxxstd: "17,20", os: ubuntu-22.04 }
          - { name: 'MSVC 14.3 (Latest): C++17-20', toolset: msvc-14.3, cxxstd: "17,20", address-model: '32,64', os: windows-2022 }
          - { name: 'AppleClang: C++11-17', toolset: clang, cxxstd: "11,14,17", os: macos-11 }

          # Oldest
          - { name: 'GCC 4.8 (Oldest): C++11', toolset: gcc-4.8, cxx: g++-4.8, cc: gcc-4.8, cxxstd: "11", os: ubuntu-22.04, container: 'ubuntu:18.04' }
          - { name: 'Clang 3.8 (Oldest): C++11', toolset: clang, cxx: clang++-3.8, cc: clang-3.8, cxxstd: "11", os: ubuntu-22.04, container: 'ubuntu:16.04', install: [ clang-3.8 ] }
          - { name: 'MSVC 14.2 (Oldest): C++14-17', toolset: msvc-14.2, cxxstd: "14,17", address-model: '32,64', os: windows-2019 }

          # Special
          - { name: 'UBSan (GCC 13: C++17-20)', toolset: gcc-13, cxx: g++-13, cc: gcc-13, cxxstd: "17,20", ubsan: true, os: ubuntu-22.04 }
          - { name: 'Shared (GCC)', generator: 'Unix Makefiles', os: ubuntu-22.04, build_shared: true, build-type: Debug, cmake: true }
          - { name: 'Shared (VS 2019)', toolset: msvc-14.2, generator: 'Visual Studio 16 2019', address-model: '32,64', cxxstd: "17,20", os: windows-2019, build_shared: true, build-type: Debug }
          - { name: 'Shared (VS 2022)', toolset: msvc-14.3, generator: 'Visual Studio 17 2022', address-model: '32,64', cxxstd: "17,20", os: windows-2022, build_shared: true, build-type: Debug }
          - { name: 'Clang 12 + libc++: C++17-20', toolset: clang, cxx: clang++-12, cc: clang-12, cxxstd: "17,20", cxxflags: -stdlib=libc++, linkflags: -stdlib=libc++, os: ubuntu-20.04, install: [ clang-12, libc++-12-dev, libc++abi-12-dev ] }

          # GCC
          - { name: 'GCC 12: C++17-20', toolset: gcc-12, cxx: g++-12, cc: gcc-12, cxxstd: "17,20", os: ubuntu-22.04 }
          - { name: 'GCC 11: C++17-20', toolset: gcc-11, cxx: g++-11, cc: gcc-11, cxxstd: "17,20", os: ubuntu-22.04 }
          - { name: 'GCC 10: C++17', toolset: gcc-10, cxx: g++-10, cc: gcc-10, cxxstd: "17", os: ubuntu-22.04 }
          - { name: 'GCC 9: C++17', toolset: gcc-9, cxx: g++-9, cc: gcc-9, cxxstd: "17", os: ubuntu-22.04 }
          - { name: 'GCC 8: C++17', toolset: gcc-8, cxx: g++-8, cc: gcc-8, cxxstd: "17", os: ubuntu-20.04 }
          - { name: 'GCC 7: C++14-17', toolset: gcc-7, cxx: g++-7, cc: gcc-7, cxxstd: "14,17", os: ubuntu-20.04 }
          - { name: 'GCC 6: C++11-14', toolset: gcc-6, cxx: g++-6, cc: gcc-6, cxxstd: "11,14", os: ubuntu-22.04, container: 'ubuntu:18.04' }
          - { name: 'GCC 5: C++11-14', toolset: gcc-5, cxx: g++-5, cc: gcc-5, cxxstd: "11,14", os: ubuntu-22.04, container: 'ubuntu:18.04' }

          # Clang
          - { name: 'Clang 15: C++17-20',  toolset: clang, cxx: clang++-15, cc: clang-15, cxxstd: "17,20", os: ubuntu-22.04 }
          - { name: 'Clang 14: C++17-20',  toolset: clang, cxx: clang++-14, cc: clang-14, cxxstd: "17,20", os: ubuntu-22.04 }
          - { name: 'Clang 13: C++17-20',  toolset: clang, cxx: clang++-13, cc: clang-13, cxxstd: "17,20", os: ubuntu-22.04 }
          - { name: 'Clang 12: C++17-20',  toolset: clang, cxx: clang++-12, cc: clang-12, cxxstd: "17,20", os: ubuntu-22.04 }
          - { name: 'Clang 11: C++14-17',  toolset: clang, cxx: clang++-11, cc: clang-11, cxxstd: "14,17", os: ubuntu-20.04, install: [ clang-11 ] }
          - { name: 'Clang 10: C++14-17',  toolset: clang, cxx: clang++-10, cc: clang-10, cxxstd: "14,17", os: ubuntu-20.04, install: [ clang-10 ] }
          - { name: 'Clang 9: C++14-17',   toolset: clang, cxx: clang++-9, cc: clang-9, cxxstd: "14,17", os: ubuntu-22.04 }
          - { name: 'Clang 8: C++17',      toolset: clang, cxx: clang++-8, cc: clang-8, cxxstd: "17", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ clang-8, g++-7 ], gcc-toolchain: 7 }
          - { name: 'Clang 7: C++17',      toolset: clang, cxx: clang++-7, cc: clang-7, cxxstd: "17", os: ubuntu-22.04 }
          - { name: 'Clang 6.0: C++14-17', toolset: clang, cxx: clang++-6.0, cc: clang-6.0, cxxstd: "14,17", os: ubuntu-22.04 }
          - { name: 'Clang 5.0: C++11-14', toolset: clang, cxx: clang++-5.0, cc: clang-5.0, cxxstd: "11,14", os: ubuntu-22.04 }
          - { name: 'Clang 4.0: C++11-14', toolset: clang, cxx: clang++-4.0, cc: clang-4.0, cxxstd: "11,14", os: ubuntu-22.04 }

    name: ${{ matrix.name }}
    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}

    timeout-minutes: 30
    permissions:
      contents: write

    steps:
      - name: Clone cpp-actions
        uses: actions/checkout@v3

      # Set up the compiler before package-install in case one of the packages needs a compiler
      - name: Setup C++
        if: ${{ (startsWith(matrix.cxx, 'g++') || startsWith(matrix.cxx, 'clang++')) && !matrix.install}}
        uses: ./setup-cpp
        id: setup-cpp
        with:
          compiler: ${{ matrix.cxx }}
          trace-commands: 'true'

      - name: Install packages
        uses: ./package-install
        id: package-install
        with:
          vcpkg: fmt
          apt-get: ${{ join(matrix.install, ' ') }} ${{ matrix.container && 'sudo software-properties-common wget curl apt-transport-https make apt-file unzip libssl-dev build-essential autotools-dev autoconf automake g++ libc++-helpers python ruby cpio gcc-multilib g++-multilib pkgconf python3 ccache libpython-dev python3-distutils python3-pip git cmake' }}
          apt-get-ignore-missing: ${{ matrix.container && 'true' }}
          cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx }}
          cxxflags: ${{ matrix.cxxflags }}
          cc: ${{ steps.setup-cpp.outputs.cc || matrix.cc }}

      - name: Clone Boost.Variant2
        uses: ./boost-clone
        with:
          boost-dir: boost-root
          branch: master
          modules: variant2
          modules-scan-paths: ${{ ((matrix.cxx == 'g++-12') && 'test') && '' }}
          modules-exclude-paths: ${{ ((matrix.cxx != 'g++-12') && 'test') && '' }}
          trace-commands: true

      - name: Test Boost.Variant2
        if: ${{ matrix.cxx == 'g++-12' }}
        uses: ./b2-workflow
        with:
          source-dir: boost-root
          modules: variant2
          toolset: ${{ matrix.toolset }}
          # Only clang needs this input. Other jobs get it from the toolset.
          cxx: ${{ (startsWith(matrix.cxx, 'clang') && matrix.cxx) || '' }}
          cxxstd: ${{ matrix.cxxstd }}
          cxxflags: ${{ matrix.cxxflags }}
          linkflags: ${{ matrix.linkflags }}
          address-model: ${{ matrix.address-model }}
          ubsan: ${{ matrix.ubsan }}
          gcc-toolchain: ${{ matrix.gcc-toolchain }}

      - name: CMake Workflow
        uses: ./cmake-workflow
        with:
          cmake-version: '>=3.20'
          source-dir: tests
          generator: ${{ matrix.generator }}
          toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }}
          build-type: ${{ matrix.build-type }}
          run-tests: true
          install-prefix: $GITHUB_WORKSPACE/.local
          cxxstd: ${{ matrix.cxxstd }}
          cc: ${{ steps.setup-cpp.outputs.cc || matrix.cc }}
          cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx }}
          cxxflags: ${{ matrix.cxxflags }} ${{ matrix.ubsan && '-fsanitize=undefined' }}
          extra-args: -D BOOST_SRC_DIR=$GITHUB_WORKSPACE/boost-root
          ref-source-dir: .
          trace-commands: true

  docs:
    needs: build
    if: ${{ (github.event_name == 'push' && github.ref_name == 'master') || startsWith(github.ref, 'refs/tags/') }}
    defaults:
      run:
        shell: bash

    name: Docs and Release
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    permissions:
      contents: write

    steps:
      - name: Clone cpp-actions
        uses: actions/checkout@v3
        with:
          fetch-depth: 100

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Antora
        working-directory: docs
        run: |
          npm install

      - name: Recreate symlinks
        working-directory: docs
        run: |
          rm supplemental-ui/js/vendor/tabs.js
          rm supplemental-ui/css/vendor/tabs.css
          cp node_modules/@asciidoctor/tabs/dist/css/tabs.css supplemental-ui/css/vendor/
          cp node_modules/@asciidoctor/tabs/dist/js/tabs.js supplemental-ui/js/vendor/

      - name: Generate Site
        working-directory: docs
        run: |
          npx antora antora-playbook.yml

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build/site

      - name: Create release notes
        uses: ./create-changelog
        with:
          output-path: CHANGELOG.md
          trace-commands: true

      - name: Remove branch release
        if: ${{ github.event_name == 'push' && contains(fromJSON('["master", "develop"]'), github.ref_name) }}
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: ${{ github.ref_name || github.ref }}-release
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true

      - name: Create Release
        if: ${{ github.event_name == 'push' && (contains(fromJSON('["master", "develop"]'), github.ref_name) || startsWith(github.ref, 'refs/tags/')) }}
        uses: softprops/action-gh-release@v1
        with:
          files: LICENSE
          name: ${{ github.ref_name || github.ref }}
          tag_name: ${{ github.ref_name || github.ref }}${{ ((!startsWith(github.ref, 'refs/tags/')) && '-release') || '' }}
          body_path: CHANGELOG.md
          prerelease: false
          draft: false
          token: ${{ github.token }}

      - uses: dev-drprasad/delete-older-releases@v0.2.1
        if: ${{ github.event_name == 'push' && contains(fromJSON('["master", "develop"]'), github.ref_name) }}
        with:
          keep_latest: 1
          delete_tag_pattern: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
