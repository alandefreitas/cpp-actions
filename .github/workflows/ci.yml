name: CI

on:
  pull_request:
    branches:
      - master
      - develop
  push:
    branches:
      - '*'

concurrency:
  group: ${{format('{0}:{1}', github.repository, github.ref)}}
  cancel-in-progress: true

env:
  GIT_FETCH_JOBS: 8
  NET_RETRY_COUNT: 5
  DEFAULT_BUILD_VARIANT: debug,release

jobs:
  build:
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          # Latest
          - { name: 'GCC 11 (Latest): C++17-20', toolset: gcc-11, cxx: g++-11, cc: gcc-11, cxxstd: "17,20", os: ubuntu-22.04, install: [ g++-11 ], sources: [ "ppa:ubuntu-toolchain-r/test" ] }
          - { name: 'Clang 12 (Latest): C++17-20', toolset: clang, cxx: clang++-12, cc: clang-12, cxxstd: "17,20", os: ubuntu-22.04, install: [ clang-12 ] }
          - { name: 'MSVC 14.3 (Latest): C++17-20', toolset: msvc-14.3, cxxstd: "17,20", address-model: '32,64', os: windows-2022 }
          - { name: 'AppleClang (Latest): C++11-17', toolset: clang, cxxstd: "11,14,17", os: macos-11 }

          # Oldest
          - { name: 'GCC 4.8 (Oldest): C++11', toolset: gcc-4.8, cxx: g++-4.8, cc: gcc-4.8, cxxstd: "11", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ g++-4.8 ] }
          - { name: 'Clang 3.8 (Oldest): C++11', toolset: clang, cxx: clang++-3.8, cc: clang-3.8, cxxstd: "11", os: ubuntu-22.04, container: 'ubuntu:16.04', install: [ clang-3.8 ] }
          - { name: 'MSVC 14.2 (Oldest): C++14-17', toolset: msvc-14.2, cxxstd: "14,17", address-model: '32,64', os: windows-2019 }

          # Special
          - { name: 'UBSan (GCC 11: C++17-20)', toolset: gcc-11, cxx: g++-11, cc: gcc-11, cxxstd: "17,20", ubsan: true, os: ubuntu-22.04, install: [ g++-11 ], sources: [ "ppa:ubuntu-toolchain-r/test" ] }
          - { name: 'Shared (GCC)', generator: 'Unix Makefiles', os: ubuntu-22.04, build_shared: true, build_type: Debug, cmake: true }
          - { name: 'Shared (VS 2019)', toolset: msvc-14.2, generator: 'Visual Studio 16 2019', address-model: '32,64', cxxstd: "17,20", os: windows-2019, build_shared: true, build_type: Debug }
          - { name: 'Shared (VS 2022)', toolset: msvc-14.3, generator: 'Visual Studio 17 2022', address-model: '32,64', cxxstd: "17,20", os: windows-2022, build_shared: true, build_type: Debug }
          - { name: 'Clang 12 + libc++: C++17-20', toolset: clang, cxx: clang++-12, cc: clang-12, cxxstd: "17,20", cxxflags: -stdlib=libc++, linkflags: -stdlib=libc++, os: ubuntu-20.04, install: [ clang-12, libc++-12-dev, libc++abi-12-dev ] }

          # GCC
          - { name: 'GCC 10: C++17', toolset: gcc-10, cxx: g++-10, cc: gcc-10, cxxstd: "17", os: ubuntu-22.04, install: [ g++-10 ] }
          - { name: 'GCC 9: C++17', toolset: gcc-9, cxx: g++-9, cc: gcc-9, cxxstd: "17", os: ubuntu-22.04, install: [ g++-9 ] }
          - { name: 'GCC 8: C++17', toolset: gcc-8, cxx: g++-8, cc: gcc-8, cxxstd: "17", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ g++-8 ] }
          - { name: 'GCC 7: C++14-17', toolset: gcc-7, cxx: g++-7, cc: gcc-7, cxxstd: "14,17", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ g++-7 ] }
          - { name: 'GCC 6: C++11-14', toolset: gcc-6, cxx: g++-6, cc: gcc-6, cxxstd: "11,14", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ g++-6 ] }
          - { name: 'GCC 5: C++11-14', toolset: gcc-5, cxx: g++-5, cc: gcc-5, cxxstd: "11,14", os: ubuntu-22.04, container: 'ubuntu:16.04', install: [ g++-5 ] }
          - { name: 'GCC 4.9: C++11', toolset: gcc-4.9, cxx: g++-4.9, cc: gcc-4.9, cxxstd: "11", os: ubuntu-22.04, container: 'ubuntu:16.04', install: [ g++-4.9 ] }

          # Clang
          - { name: 'Clang 11: C++14-17', toolset: clang, cxx: clang++-11, cc: clang-11, cxxstd: "14,17", os: ubuntu-20.04, install: [ clang-11 ] }
          - { name: 'Clang 10: C++14-17', toolset: clang, cxx: clang++-10, cc: clang-10, cxxstd: "14,17", os: ubuntu-20.04, install: [ clang-10 ] }
          - { name: 'Clang 9: C++14-17', toolset: clang, cxx: clang++-9, cc: clang-9, cxxstd: "14,17", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ clang-9 ] }
          - { name: 'Clang 8: C++17', toolset: clang, cxx: clang++-8, cc: clang-8, cxxstd: "17", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ clang-8, g++-7 ], gcc_toolchain: 7 }
          - { name: 'Clang 7: C++17', toolset: clang, cxx: clang++-7, cc: clang-7, cxxstd: "17", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ clang-7 ] }
          - { name: 'Clang 6.0: C++14-17', toolset: clang, cxx: clang++-6.0, cc: clang-6.0, cxxstd: "14,17", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ clang-6.0 ] }
          - { name: 'Clang 5.0: C++11-14', toolset: clang, cxx: clang++-5.0, cc: clang-5.0, cxxstd: "11,14", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ clang-5.0 ] }
          - { name: 'Clang 4.0: C++11-14', toolset: clang, cxx: clang++-4.0, cc: clang-4.0, cxxstd: "11,14", os: ubuntu-22.04, container: 'ubuntu:18.04', install: [ clang-4.0 ] }

    name: ${{ matrix.name }}
    timeout-minutes: 120
    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}

    steps:
      - name: Clone Boost.URL
        uses: actions/checkout@v3

      - name: Install packages
        uses: ./package_install
        id: package-install
        with:
          vcpkg: fmt
          apt-get: ${{ join(matrix.install, ' ') }} ${{ matrix.container && 'sudo software-properties-common tzdata wget curl apt-transport-https make apt-file unzip libssl-dev build-essential autotools-dev autoconf automake g++ libc++-helpers python ruby cpio gcc-multilib g++-multilib pkgconf python3 ccache libpython-dev python3-distutils python3-pip git cmake' }}
          apt-get-ignore-missing: ${{ matrix.container && 'true' }}
          cxx: ${{ ( matrix.cxx && format('{0} {1}', matrix.cxx, matrix.cxxflags)) || '' }}
          cc: ${{ matrix.cc }}

      - name: Clone Boost.Variant2
        uses: ./boost_clone
        with:
          boost_dir: boost-root
          branch: master
          modules: variant2

      - name: Test Boost.Variant2
        if: ${{ matrix.cxx == 'g++-11' }}
        uses: ./b2_workflow
        with:
          source-dir: boost-root
          modules: variant2
          toolset: ${{ matrix.toolset }}
          cxx: ${{ (startsWith(matrix.cxx, 'clang') && matrix.cxx) || '' }}
          cxxstd: ${{ matrix.cxxstd }}
          cxxflags: ${{ matrix.cxxflags }}
          linkflags: ${{ matrix.linkflags }}
          address-model: ${{ matrix.address-model }}
          ubsan: ${{ matrix.ubsan }}
          gcc_toolchain: ${{ matrix.gcc_toolchain }}

      - name: CMake Workflow
        uses: ./cmake_workflow
        with:
          source-dir: tests
          generator: ${{ matrix.generator }}
          toolchain: ${{ steps.package-install.outputs.vcpkg_toolchain }}
          build-type: ${{ matrix.build_type }}
          run-tests: true
          install-prefix: $GITHUB_WORKSPACE/.local
          cxxstd: ${{ matrix.cxxstd }}
          cxx: ${{ matrix.cxx }}
          cxxflags: ${{ matrix.cxxflags }}
          cc: ${{ matrix.cc }}
          cmake-min-version: 3.15
          extra-args: -D BOOST_SRC_DIR=$GITHUB_WORKSPACE/boost-root
          ref-source-dir: .

  docs:
    needs: build
    if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') && github.event_name == 'push' }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: 'Docs', os: ubuntu-22.04 }

    name: ${{ matrix.name }}
    timeout-minutes: 120
    runs-on: ${{matrix.os}}
    permissions:
      contents: write

    steps:
      - name: Clone Boost.URL
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Antora
        working-directory: docs
        run: | 
          npm install

      - name: Recreate symlinks
        working-directory: docs
        run: |
          rm supplemental-ui/js/vendor/tabs.js
          rm supplemental-ui/css/vendor/tabs.css
          cp node_modules/@asciidoctor/tabs/dist/css/tabs.css supplemental-ui/css/vendor/
          cp node_modules/@asciidoctor/tabs/dist/js/tabs.js supplemental-ui/js/vendor/

      - name: Generate Site
        working-directory: docs
        run: | 
          npx antora antora-playbook.yml

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build/site
