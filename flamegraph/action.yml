#
# Copyright (c) 2023 Alan de Freitas (alandefreitas@gmail.com)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Official repository: https://github.com/alandefreitas/cpp-actions
#

name: "Create Flamegraph"
description: |
  This action merges time-trace files generated by Clang and generates a FlameGraph.
  
  This is usually the next step in your workflow if some Coverage factor is defined in the entry
  after building and testing your library with xref:actions/cmake-workflow.adoc[].
  
  To generate the files, build the project with Clang and the `-ftime-trace` flag.
  For every object file, there will be a corresponding json file with details about build time.
  
  Each file in the `build-dir` will be combined into a single output file that contains
  all traces. The combined time-trace is used to generate a report and then converted to an image with 
  https://github.com/brendangregg/FlameGraph[FlameGraph].
  
  The combined time-trace files are uploaded to artifacts. It contains the svg 
  file generated with https://github.com/brendangregg/FlameGraph[FlameGraph], which you can open directly 
  in the browser. It also contains a json file you can open with:

  - https://www.speedscope.app/ (https://github.com/jlfwong/speedscope), or
  - chrome://tracing/
  
  A simple analysis is performed while combining the trace files and a report in markdown format is
  also generated. This report is saved to 'inputs.report-path' and also included with the artifacts.

inputs:
  source-dir:
    description: |
      The source directory used to generate time-traces. 
      
      Relative paths in the report will be relative to the current working directory.

    required: false
    default: '.'

  build-dir:
    description: |
      The directory with the time-traces. 
      
      This should usually be your `build` directory, if any.
      
      The default value is the same as the source-dir, so all time-trace files will
      be scanned in all subdirectories of the source-dir.
      
      If this is a relative path, it will be made relative to the current working directory.

    required: false
    default: '.'

  output-path:
    description: |
      The path where the combined traces will be stored.
      
      If this is a relative path, it will be made relative to the build-dir.

    required: false
    default: 'combined-traces.json'

  report-path:
    description: |
      The path where the report will be stored.
      
      If this is a relative path, it will be made relative to the build-dir.

    required: false
    default: 'time-trace-report.md'

  generate-svg:
    description: |
      Generate an SVG file with the output.

    required: false
    default: 'true'

  generate-report:
    description: |
      Generate a small report with ClangBuildAnalyzer

    required: false
    default: 'true'

  update-summary:
    description: 'Update action summary with the SVG file.'
    required: false
    default: 'true'

  github_token:
    description: |
      The GitHub token used to upload the artifacts.

    required: false
    default: ''

  github-token:
    description: |
      The GitHub token used to upload the artifacts.
      
      This is an alias for 'github_token'.

    required: false
    default: ''

  upload-artifact:
    description: 'Upload combined traces as artifact.'
    required: false
    default: 'true'

  trace-commands:
    description: 'Trace commands executed by the workflow.'
    required: false
    default: 'false'

outputs:
  traces-path:
    description: "The absolute path to combined traces."

  svg-path:
    description: "The absolute path to svg file."

runs:
  using: 'node20'
  main: 'dist/index.js'
  post-if: success()
branding:
  icon: 'code'
  color: 'yellow'


