#
# Copyright (c) 2023 Alan de Freitas (alandefreitas@gmail.com)
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Official repository: https://github.com/alandefreitas/cpp-actions
#

name: "Create Changelog"
description: |
  This action creates an initial Changelog from the commit history.
  
  This is usually the included in your workflow after building and testing your library with 
  xref:actions/cmake-workflow.adoc[] in another job with the complete matrix.
  
  The commits considered go from the latest commit up to a commit containing a version
  commit pattern specified by version-pattern.
  
  The result can be used as the initial body for an automated release, a CHANGELOG.md file, or a job summary.
  
  Each commit is parsed as a loose variant of a https://www.conventionalcommits.org/en/v1.0.0/[conventional commit]
  in the following format:
  
  [source,none]
  ----
  <type>[optional scope]: <description>
  
  [optional body]
  
  [optional footer(s)]
  ----
  
  * The body and footer are always ignored.
  * If no type is indicated, the description goes to an initial "other" category in the message.
  * If no scope is indicated, the description goes to an initial "general" scope in the type messages.
  * Breaking changes are indicated.
  
  This action uses the local commit history to generate the notes. Ensure the `fetch-depth` option
  is set when cloning your repository in CI. If this option is unset, the checkout action will
  perform a shallow clone and the Changelog will only include the latest commit.
  
  [source,yml]
  ----
  - uses: actions/checkout@v3
    with:
      fetch-depth: 100
  ----
  
  This parameter can also be used as a limit on the number of commits the action should consider.

inputs:
  source-dir:
    description: |
      The source directory from whose commits will be analyzed
    required: false
    default: '.'
  version-pattern:
    description: |
      A regex pattern used to identify if a commit is a version delimiter.
      
      When a commit has a message that matches this pattern, the list of
      commits considered in the notes is complete.
      
      This constraint does not apply to the current and latest commit.

    required: false
    default: '(Bump|Set)\s+version'
  tag-pattern:
    description: |
      A regex pattern used to identify if a commit is a tagged delimiter.
      
      When a commit has the same hash has the commit associated with a
      tag whose name matches this pattern, the list of commits considered
      in the notes is complete.
      
      This constraint does not apply to the current and latest commit.

    required: false
    default: 'v.*\..*\..*'
  output-path:
    description: |
      The path where the changelog will be stored
    required: false
    default: 'CHANGELOG.md'
  limit:
    description: |
      The limit on the number of commits considered in the Changelog
    required: false
    default: '0'
  thank-non-regular:
    description: 'Thank non-regular contributors.'
    required: false
    default: 'true'
  link-commits:
    description: |
      Link commit ids in the changelog to the repository commit.
      
      This is usually unnecessary because GitHub flavored markdown automatically links commits id in
      text to the commits in the same repository. Thus, including explicit links would often make the
      output more verbose and remove any extra GitHub functionality, such as pop ups associated with
      these ids.
      
      However, when the outputs is only going to be used as an action summary or in any other context
      outside GitHub, these automatic links do not exist and it's often a good idea to include them
      to allow the reader to navigate to these repository commits.
    required: false
    default: 'false'
  github-token:
    description: 'Github token to identify non-regular contributors. Usually secrets.GITHUB_TOKEN.'
    required: false
    default: ''
  update-summary:
    description: 'Update action summary with the changelog'
    required: false
    default: 'true'
  trace-commands:
    description: 'Trace commands executed by the workflow.'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: '>= 3.10'

    - name: Generate changelog
      shell: bash
      run: |
        ${{ (inputs.trace-commands == 'true' && 'set -xe') || '' }}
        python_path="${{ steps.setup-python.outputs.python-path || 'python' }}"
        pip3 install requests
        thank_arg="${{ (inputs.thank-non-regular == 'true' && '--thank-non-regular') || '' }}"
        link_commits_arg="${{ (inputs.link-commits == 'true' && '--link-commits') || '' }}"
        token_arg="${{ (inputs.github-token && format('--github-token "{0}"', inputs.github-token)) || '' }}"
        $python_path "$GITHUB_ACTION_PATH/create-changelog.py" --dir "${{ inputs.source-dir }}" --version-pattern "${{ inputs.version-pattern }}" --tag-pattern "${{ inputs.tag-pattern }}" --output "${{ inputs.output-path }}" --limit "${{ inputs.limit }}" $thank_arg $token_arg $link_commits_arg

    - name: Changelog summary
      shell: bash
      if: "${{ inputs.update-summary == 'true' }}"
      run: |
        echo "# Changelog" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        cat "${{ inputs.output-path }}" >> $GITHUB_STEP_SUMMARY
