antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1",[0,39.097]],["name/1",[0,2.039]],["text/1",[1,5.029,2,3.554,3,3.812,4,1.168,5,4.51,6,5.818,7,5.029,8,5.818,9,5.818,10,5.818,11,2.674]],["component/1",[4,0.324,12,0.474]],["title/2",[4,7.034,13,13.946]],["name/2",[14,2.359]],["text/2",[2,2.763,4,1.07,11,3.154,13,2.475,15,3.239,16,3.91,17,2.688,18,2.688,19,2.688,20,2.203,21,1.9,22,2.41,23,1.504,24,2.688,25,2.038,26,2.41,27,1.9,28,1.678,29,3.109,30,3.109,31,3.109,32,2.688,33,5.33,34,2.72,35,2.688,36,2.203,37,3.109,38,3.91,39,3.91,40,2.41,41,3.109,42,3.109,43,2.688,44,2.203,45,1.587,46,3.109,47,3.204,48,1.782,49,2.688,50,3.109,51,1.782,52,3.109,53,1.678,54,3.109,55,3.109,56,1.978,57,3.835,58,1.183,59,3.204,60,3.109,61,3.109,62,2.688,63,2.41,64,3.835,65,1.575,66,1.9,67,3.109,68,3.109,69,3.109,70,3.109,71,3.91,72,2.591,73,2.688,74,3.109,75,2.41,76,1.782,77,3.109,78,3.109,79,2.688,80,3.109,81,2.688,82,2.688,83,3.109,84,3.109,85,3.109,86,3.109,87,1.782,88,2.688,89,3.109,90,2.688,91,2.41]],["component/2",[4,0.324,12,0.474]],["title/3",[92,35.059]],["name/3",[92,1.828]],["text/3",[5,4.194,7,2.759,21,1.95,32,2.759,40,2.474,45,1.628,58,1.753,76,1.829,79,2.759,87,1.829,90,6.383,92,4.194,93,1.95,94,1.544,95,3.191,96,3.191,97,3.191,98,3.191,99,3.191,100,3.191,101,4.609,102,3.191,103,3.191,104,3.191,105,3.191,106,5.41,107,3.191,108,2.759,109,3.191,110,3.191,111,4.609,112,1.922,113,3.191,114,3.191,115,5.41,116,3.191,117,3.191,118,3.191,119,3.191,120,3.191,121,3.02,122,4.609,123,3.191,124,2.759,125,3.191,126,2.76,127,2.759,128,3.191,129,3.191,130,2.759,131,3.191,132,2.759,133,3.191,134,2.759,135,2.759,136,2.759,137,1.829,138,1.723,139,2.759,140,2.474,141,4.609,142,3.191,143,3.191,144,3.191,145,2.759,146,3.191,147,3.191,148,3.191,149,3.191,150,3.191,151,2.759,152,3.191,153,3.191,154,3.191,155,3.191,156,3.191,157,3.191,158,3.191,159,3.191,160,1.95,161,3.191,162,2.474,163,3.191,164,3.191,165,3.191]],["component/3",[4,0.324,12,0.474]],["title/4-1",[166,11.681,167,10.727]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[168,20.784]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4-3",[169,11.192,170,9.07]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["title/4",[65,12.198,171,22.957]],["name/4",[65,0.504,171,0.948]],["text/4",[4,0.607,11,2.035,13,1.763,15,2.142,21,1.129,23,2.362,27,1.846,28,0.997,43,3.829,45,1.542,53,1.631,56,0.808,57,1.21,58,1.149,59,1.309,63,1.432,64,1.21,65,2.14,91,1.432,93,2.984,112,0.77,126,1.956,137,1.731,138,2.636,162,1.432,166,1.278,167,1.605,170,0.782,171,3.783,172,1.846,173,1.309,174,1.542,175,2.244,176,0.894,177,1.21,178,1.058,179,1.322,180,0.849,181,1.597,182,1.389,183,1.847,184,1.058,185,3.433,186,1.21,187,1.847,188,1.597,189,1.597,190,1.847,191,2.186,192,2.141,193,1.21,194,1.597,195,1.677,196,1.21,197,1.432,198,1.309,199,2.612,200,1.432,201,2.972,202,1.597,203,1.21,204,1.309,205,1.542,206,0.943,207,1.847,208,1.597,209,1.762,210,3.436,211,1.597,212,1.597,213,1.597,214,3.433,215,1.847,216,3.203,217,3.786,218,1.597,219,2.716,220,1.731,221,1.309,222,1.309,223,1.309,224,2.342,225,1.432,226,3.834,227,1.847,228,1.847,229,1.847,230,2.612,231,1.847,232,2.612,233,1.847,234,2.612,235,1.847,236,2.972,237,1.597,238,0.808,239,0.808,240,1.597,241,1.847,242,1.597,243,1.731,244,2.612,245,1.847,246,1.847,247,1.847,248,2.069,249,0.997,250,1.432,251,0.894,252,1.309,253,2.512,254,2.512,255,1.309,256,4.222,257,3.314,258,1.597,259,3.834,260,1.597,261,1.847,262,1.432,263,1.21,264,0.943,265,1.847,266,1.597,267,1.21,268,1.847,269,1.322,270,0.808]],["component/4",[4,0.324,12,0.474]],["title/5-1",[166,11.681,167,10.727]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[168,20.784]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5-3",[169,11.192,170,9.07]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["title/5-4",[271,14.448]],["name/5-4",[]],["text/5-4",[]],["component/5-4",[]],["title/5",[93,21.404,272,21.404]],["name/5",[93,0.884,272,0.884]],["text/5",[1,1.96,3,1.486,4,0.715,11,1.042,13,1.75,15,2.127,23,1.097,27,1.385,38,1.96,56,0.992,58,2.059,64,1.486,65,2.001,93,4.414,94,1.097,112,0.945,126,1.157,138,2.373,166,1.466,167,1.525,170,0.922,171,1.486,174,1.157,175,2.021,176,1.097,177,1.486,178,3.102,179,2.179,180,2.021,182,2.29,184,2.519,185,5.512,189,1.96,191,0.945,195,1.558,203,1.486,205,1.157,206,1.157,209,2.021,210,1.042,213,1.96,238,1.558,239,1.558,248,1.922,249,1.224,251,2.127,269,1.558,270,0.992,271,0.724,272,4.002,273,1.299,274,3.836,275,1.385,276,0.789,277,1.96,278,1.157,279,1.606,280,2.267,281,1.96,282,1.96,283,1.757,284,1.96,285,2.267,286,3.561,287,6.402,288,3.561,289,1.757,290,2.267,291,1.757,292,2.686,293,2.267,294,3.078,295,1.96,296,3.561,297,2.267,298,2.267,299,2.267,300,2.267,301,1.299,302,3.801,303,3.078,304,1.606,305,1.96,306,2.267,307,2.04,308,2.267,309,2.76,310,3.561,311,3.561,312,2.267,313,2.267,314,2.333,315,1.299]],["component/5",[4,0.324,12,0.474]],["title/6-1",[166,11.681,167,10.727]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[168,20.784]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[169,11.192,170,9.07]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6",[65,12.198,191,14.61]],["name/6",[65,0.504,191,0.603]],["text/6",[2,0.686,3,0.395,4,1.356,11,2.229,13,1.271,15,1.658,21,0.368,22,0.467,23,1.943,25,0.736,27,0.686,28,1.585,34,0.307,35,0.971,36,0.427,44,1.118,45,0.573,47,0.796,48,0.345,51,3.601,53,2.071,56,1.284,57,0.395,58,2.457,59,2.58,63,0.467,65,1.399,76,1.682,94,1.943,112,0.468,121,0.395,126,0.805,137,3.055,138,1.85,139,0.521,140,0.467,166,0.374,167,1.371,169,1.584,170,0.291,172,2.817,173,1.118,174,1.352,175,1.072,176,0.543,177,0.395,178,0.345,179,2.214,180,2.279,182,1.846,184,3.701,185,0.467,191,2.637,192,0.796,193,0.395,194,0.971,195,0.865,196,0.395,197,0.467,198,1.118,199,0.971,200,0.467,201,0.467,202,0.521,203,0.395,204,1.401,205,1.352,206,0.307,208,0.521,209,1.575,210,2.983,211,0.521,212,0.521,214,2.055,216,3.205,218,0.521,219,1.878,220,0.904,221,0.796,222,0.427,223,0.427,224,3.243,225,0.467,236,1.223,237,0.521,238,0.263,239,2.169,240,0.521,243,0.345,248,0.606,249,0.325,250,0.467,251,1.658,252,1.118,253,1.034,254,2.386,255,0.796,258,0.521,262,3.114,263,0.395,264,1.19,267,0.395,269,1.159,270,1.159,273,1.133,278,0.573,279,0.427,289,0.87,291,0.467,292,0.964,304,3.653,314,0.736,316,0.602,317,0.325,318,0.395,319,2.823,320,0.467,321,0.467,322,0.602,323,0.87,324,0.602,325,0.971,326,0.964,327,1.123,328,1.71,329,1.123,330,1.425,331,1.577,332,0.521,333,2.291,334,1.123,335,0.427,336,3.837,337,1.123,338,1.809,339,1.123,340,0.602,341,0.602,342,1.123,343,2.291,344,0.602,345,0.602,346,0.763,347,1.364,348,0.467,349,0.964,350,0.467,351,0.467,352,0.521,353,0.521,354,1.123,355,1.123,356,0.971,357,0.427,358,1.123,359,0.602,360,1.123,361,0.602,362,1.123,363,2.017,364,0.602,365,0.521,366,1.123,367,0.395,368,0.467,369,0.521,370,0.686,371,0.602,372,0.521,373,0.521,374,4.923,375,0.971,376,0.427,377,1.71,378,3.372,379,0.602,380,0.602,381,0.796,382,0.602,383,0.602,384,0.602,385,1.133,386,0.521,387,0.602,388,1.123,389,0.602,390,0.602,391,1.123,392,0.602,393,0.602,394,0.467,395,0.602,396,0.602,397,0.602,398,0.521,399,0.602,400,0.606,401,0.602,402,1.118,403,0.521,404,0.602,405,1.123,406,0.521,407,0.602,408,0.307,409,1.364,410,0.602,411,4.017,412,0.602,413,0.602,414,0.602,415,0.602,416,0.87,417,0.427,418,0.602,419,0.602,420,0.602,421,0.602,422,0.87,423,0.602,424,0.602,425,1.123,426,0.521,427,0.467,428,0.602,429,2.333,430,0.602,431,0.602,432,0.602,433,0.602,434,0.602,435,0.602,436,0.602,437,0.602,438,0.602,439,0.427,440,0.467,441,0.602,442,0.602,443,0.602,444,0.602]],["component/6",[4,0.324,12,0.474]],["title/7-1",[445,45.227]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[11,13.14,13,11.381,446,14.589]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[447,45.227]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[378,18.911,448,30.287]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[446,17.877,449,24.823]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7-6",[314,22.957,449,24.823]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["title/7-7",[34,14.589,321,22.164,367,18.735]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["title/7-8",[416,27.159,449,24.823]],["name/7-8",[]],["text/7-8",[]],["component/7-8",[]],["title/7-9",[450,24.823,451,27.159]],["name/7-9",[]],["text/7-9",[]],["component/7-9",[]],["title/7-10",[58,13.326,203,22.957]],["name/7-10",[]],["text/7-10",[]],["component/7-10",[]],["title/7-11",[166,11.681,167,10.727]],["name/7-11",[]],["text/7-11",[]],["component/7-11",[]],["title/7-12",[168,20.784]],["name/7-12",[]],["text/7-12",[]],["component/7-12",[]],["title/7-13",[169,11.192,170,9.07]],["name/7-13",[]],["text/7-13",[]],["component/7-13",[]],["title/7-14",[271,14.448]],["name/7-14",[]],["text/7-14",[]],["component/7-14",[]],["title/7",[13,13.946,446,17.877]],["name/7",[12,0.425,446,0.738]],["text/7",[2,1.537,3,0.806,4,0.851,5,0.515,11,2.944,12,0.999,13,1.753,15,2.203,16,0.574,17,0.574,18,0.574,19,4.848,20,1.518,21,1.739,22,1.331,23,3.02,27,0.406,28,1.536,34,1.737,36,0.471,39,0.574,40,0.515,45,0.876,47,0.871,48,0.705,49,1.063,53,0.359,56,0.538,58,2.004,59,2.225,65,1.344,71,1.063,72,0.984,75,0.515,76,0.984,81,0.574,82,0.574,87,0.381,88,0.574,91,0.515,94,3.116,108,0.574,112,0.716,121,0.806,124,0.574,126,1.859,130,1.063,132,0.574,134,0.574,137,2.087,140,0.515,160,0.406,162,0.515,167,0.526,169,0.549,170,0.651,171,0.806,172,2.08,173,0.471,174,0.876,175,1.308,177,0.806,178,0.984,179,0.538,180,0.565,184,1.799,186,0.806,191,0.893,192,0.471,195,1.245,198,2.412,201,2.434,205,2.246,206,0.628,210,2.908,214,0.953,216,1.919,217,0.515,219,1.217,220,0.705,221,0.871,222,0.471,223,0.471,224,1.661,225,0.953,230,1.852,232,1.485,234,1.485,236,2.434,238,0.538,239,0.291,243,0.381,244,0.574,248,1.358,249,2.606,252,1.217,253,0.806,254,1.125,255,0.871,256,0.574,257,1.063,260,0.574,262,3.531,264,0.339,266,0.574,267,1.648,269,0.538,270,0.937,271,1.003,272,0.406,275,0.406,276,1.185,278,2.246,279,1.217,284,0.574,289,0.953,291,0.515,292,0.751,295,1.063,301,0.705,304,1.518,305,0.574,307,0.705,309,0.515,319,0.515,320,0.515,321,0.515,323,0.953,330,0.751,335,2.581,338,0.515,346,0.595,349,0.751,350,0.515,351,0.515,356,0.574,365,0.574,367,1.648,368,0.515,374,2.46,378,0.664,385,0.381,386,0.574,394,0.515,400,0.359,402,0.871,408,1.452,409,0.574,417,0.471,426,0.574,427,0.953,440,1.661,446,2.78,448,1.485,449,1.782,451,0.515,452,0.574,453,0.664,454,0.664,455,0.664,456,0.664,457,0.664,458,0.664,459,0.664,460,0.664,461,0.664,462,0.664,463,0.664,464,0.664,465,0.664,466,0.664,467,0.574,468,0.664,469,0.406,470,1.23,471,0.664,472,0.664,473,0.664,474,0.664,475,0.664,476,0.664,477,0.664,478,0.664,479,0.664,480,0.664,481,0.664,482,0.574,483,0.751,484,0.574,485,0.664,486,0.664,487,1.852,488,0.664,489,1.485,490,0.664,491,0.664,492,0.664,493,0.664,494,0.664,495,0.664,496,0.664,497,0.664,498,0.664,499,0.664,500,0.664,501,0.574,502,0.574,503,0.664,504,1.23,505,0.664,506,1.23,507,0.664,508,1.23,509,0.664,510,0.664,511,3.14,512,0.664,513,0.664,514,0.664,515,3.513,516,0.664,517,0.664,518,0.574,519,0.574,520,0.515,521,0.574,522,0.574,523,0.574,524,0.664,525,0.664,526,1.23,527,0.664,528,0.574,529,0.664,530,0.664,531,0.664,532,0.664,533,0.664,534,0.574,535,0.664,536,0.664,537,0.574,538,0.435,539,0.515,540,0.664,541,0.664,542,1.23,543,1.23,544,0.664,545,0.664,546,0.574,547,0.664,548,2.589,549,2.515,550,1.23,551,1.718,552,2.142,553,0.664,554,2.523,555,0.574,556,0.664,557,0.664,558,0.664,559,1.23,560,0.664,561,0.664,562,0.406,563,0.664,564,0.664,565,0.664,566,0.664,567,2.174,568,1.23,569,1.23,570,1.852,571,1.23,572,1.063,573,1.063,574,0.664,575,0.574,576,1.049,577,0.664,578,0.664,579,1.23,580,2.142,581,1.718,582,1.23,583,1.23,584,1.23,585,0.664,586,1.718,587,0.664,588,0.664,589,0.664,590,1.23,591,2.142,592,0.664,593,0.664,594,2.142,595,1.23,596,0.664,597,0.953,598,0.664,599,1.23,600,1.063,601,0.664,602,0.574,603,0.574,604,0.664,605,0.751,606,1.23,607,0.664,608,0.574,609,0.664,610,0.664,611,0.664,612,0.574,613,1.23,614,0.664,615,1.23,616,0.574,617,0.664,618,0.664,619,0.574,620,0.664]],["component/7",[4,0.324,12,0.474]],["title/8-1",[168,20.784]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[169,11.192,170,9.07]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8",[53,18.911,196,22.957]],["name/8",[53,0.781,196,0.948]],["text/8",[4,0.999,11,0.762,15,0.802,20,3.263,21,1.013,36,1.175,44,2.937,47,3.524,53,0.895,56,0.725,58,2.102,64,1.086,65,1.237,66,1.013,72,0.95,73,1.433,94,2.005,112,0.691,121,1.811,126,2.115,137,1.583,138,1.492,145,3.071,151,3.583,167,0.508,170,0.715,173,2.517,174,0.846,175,1.633,176,1.337,177,1.811,182,0.762,184,0.95,191,0.691,195,1.209,196,3.457,197,1.285,198,1.958,205,1.41,206,0.846,209,0.762,210,2.54,216,1.013,217,1.285,219,1.958,238,1.554,239,0.725,243,0.95,248,1.492,251,1.719,253,1.086,264,2.35,269,1.209,270,1.209,271,1.324,272,1.688,277,1.433,278,2.115,301,2.036,314,1.086,317,1.492,319,2.754,320,2.142,335,1.175,346,1.719,348,1.285,357,1.958,369,1.433,372,2.389,385,1.583,394,2.142,406,2.389,408,0.846,422,1.285,440,1.285,446,0.846,482,1.433,501,3.583,519,1.433,528,6.324,539,1.285,555,1.433,575,1.433,597,3.213,619,2.389,621,2.763,622,2.763,623,4.778,624,1.433,625,3.553,626,3.553,627,1.433,628,1.658,629,2.763,630,3.553,631,1.658,632,1.658,633,3.071,634,2.763,635,1.658,636,3.553,637,3.071,638,2.763,639,1.433,640,1.433,641,1.658,642,1.658,643,1.658,644,1.658,645,1.658,646,3.553,647,4.145,648,1.658,649,1.658,650,3.553,651,2.389,652,3.856,653,1.658,654,2.763,655,1.658,656,2.763,657,2.763,658,2.763,659,1.658,660,3.553,661,2.763,662,1.658,663,1.658,664,1.658,665,2.763,666,1.688,667,1.658,668,1.658,669,1.658,670,1.433,671,1.658,672,1.658,673,1.658,674,1.658,675,1.658,676,1.658,677,1.658,678,1.658,679,1.285,680,1.658,681,1.658,682,1.658,683,1.658]],["component/8",[4,0.324,12,0.474]],["title/9-1",[168,20.784]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[169,11.192,170,9.07]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[271,14.448]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9",[53,18.911,193,22.957]],["name/9",[193,1.546]],["text/9",[4,0.694,11,1.59,15,1.057,58,1.633,65,1.495,112,0.911,126,1.115,136,1.889,137,3.789,138,2.317,166,0.729,167,1.059,170,0.566,174,3.482,175,1.59,182,2.243,191,0.911,192,4.354,193,3.486,195,3.058,200,3.784,205,1.115,206,1.115,209,2.723,210,2.243,216,3.866,238,1.513,239,0.956,251,3.253,254,1.432,267,3.883,269,1.513,270,0.956,271,1.559,282,1.889,292,1.335,294,1.889,301,1.252,315,1.982,317,1.867,335,1.548,346,2.361,357,1.548,363,4.22,377,4.891,408,2.191,422,2.682,467,1.889,489,5.312,502,2.99,539,1.694,554,1.982,597,2.682,603,1.889,608,1.889,612,1.889,651,1.889,670,1.889,684,2.185,685,2.185,686,2.185,687,1.889,688,5.926,689,3.459,690,2.185,691,2.185,692,2.185,693,2.185,694,2.185,695,2.185,696,2.185,697,2.185,698,2.185,699,3.459,700,3.459,701,2.185,702,2.185,703,2.185,704,2.185,705,2.185,706,2.185,707,2.185]],["component/9",[4,0.324,12,0.474]],["title/10-1",[166,11.681,167,10.727]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[168,20.784]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10-3",[169,11.192,170,9.07]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["title/10-4",[271,14.448]],["name/10-4",[]],["text/10-4",[]],["component/10-4",[]],["title/10",[179,15.326,180,16.101]],["name/10",[179,0.633,180,0.665]],["text/10",[4,0.604,13,2.294,15,1.848,23,2.53,56,1.931,57,1.204,58,2.44,65,2.006,66,1.838,76,1.053,93,2.334,112,1.255,138,2.629,166,1.274,167,1.601,170,0.476,172,1.123,174,1.535,175,2.029,176,1.848,178,3.302,179,2.521,180,2.648,182,1.383,188,1.589,191,0.766,195,1.316,204,1.302,205,0.938,206,0.938,209,0.845,210,3.341,220,1.724,221,2.132,222,1.302,223,1.302,238,1.316,239,1.316,248,2.383,249,2.062,252,2.132,254,1.972,255,2.132,267,1.204,269,1.316,270,1.316,271,0.587,272,1.838,273,1.053,274,2.132,276,1.048,281,6.285,283,1.425,292,1.838,301,1.053,302,2.601,303,1.589,314,2.503,328,1.589,332,1.589,343,3.302,346,0.889,349,1.838,350,1.425,351,1.425,352,1.589,353,1.589,381,2.132,385,1.053,400,0.992,402,1.302,451,2.332,487,1.589,518,2.601,537,2.601,546,1.589,548,1.123,554,1.724,572,1.589,602,1.589,616,1.589,652,2.332,679,1.425,708,1.838,709,1.589,710,1.302,711,1.425,712,1.838,713,1.838,714,1.838,715,1.838,716,3.82,717,1.838,718,4.545,719,1.838,720,1.838,721,3.82,722,2.601,723,1.589,724,1.838,725,3.009,726,1.838,727,1.838,728,1.838,729,3.009,730,1.838]],["component/10",[4,0.324,12,0.474]],["title/11-1",[166,11.681,167,10.727]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[169,11.192,170,9.07]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[271,14.448]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11",[276,12.198,554,20.074]],["name/11",[276,0.504,554,0.829]],["text/11",[4,1.276,11,1.02,12,0.651,13,1.726,15,1.073,23,1.693,25,1.454,28,1.198,34,2.905,45,1.786,48,1.271,51,2.484,56,2.154,58,2.476,65,1.714,66,1.356,72,1.271,87,1.271,94,3.653,112,2.235,160,1.356,166,0.74,167,0.679,169,1.573,170,0.574,175,1.02,176,1.693,179,2.608,180,1.02,182,1.02,186,1.454,195,1.531,209,1.02,210,1.02,220,1.271,238,1.531,239,1.897,243,1.271,251,2.988,264,1.786,269,1.531,270,1.531,271,0.709,273,1.271,275,1.356,276,1.219,278,1.786,307,2.006,315,2.484,317,1.89,318,2.294,326,1.356,330,1.356,346,1.073,349,1.356,370,1.356,376,1.572,378,1.198,385,1.271,400,2.657,408,1.132,439,1.572,446,1.132,450,2.48,469,2.649,483,3.008,515,1.454,538,1.454,554,4.203,562,2.139,576,2.139,605,2.139,666,2.139,710,1.572,718,2.48,731,1.454,732,1.918,733,1.572,734,1.572,735,1.454,736,1.454,737,2.294,738,1.572]],["component/11",[4,0.324,12,0.474]],["title/12-1",[169,11.192,170,9.07]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[271,14.448]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12",[191,14.61,276,12.198]],["name/12",[191,0.603,276,0.504]],["text/12",[4,1.138,23,0.946,26,2.454,27,1.195,28,3.291,34,2.748,48,1.121,51,2.285,56,2.004,58,2.382,65,1.388,72,1.121,75,1.517,76,2.883,87,1.121,94,3.534,112,1.911,160,1.195,168,0.899,169,1.608,170,0.506,174,2.338,176,1.531,178,1.121,179,2.582,182,0.899,184,1.121,191,3.11,195,1.385,204,2.243,209,0.899,216,2.436,238,1.385,239,2.004,249,1.056,251,3.03,264,2.035,269,1.744,270,1.385,271,0.625,273,1.814,274,3.247,275,1.934,278,1.615,279,1.386,304,2.243,307,1.814,315,1.814,317,1.709,318,2.075,325,1.691,326,2.436,330,1.195,333,3.961,346,1.531,370,1.195,373,2.737,375,2.737,378,1.056,398,1.691,400,2.473,408,1.615,417,1.386,439,2.243,450,1.386,469,1.934,483,2.799,515,1.282,538,1.282,562,1.934,573,1.691,576,1.934,605,1.934,633,1.691,640,1.691,666,1.934,711,1.517,731,1.282,733,1.386,734,1.386,735,1.282,736,1.282,737,2.075,738,1.386,739,1.956,740,1.956,741,1.691,742,1.956,743,1.956,744,1.956,745,1.956,746,1.956,747,1.956,748,1.956]],["component/12",[4,0.324,12,0.474]],["title/13-1",[166,11.681,167,10.727]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[168,20.784]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13-3",[169,11.192,170,9.07]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["title/13-4",[271,14.448]],["name/13-4",[]],["text/13-4",[]],["component/13-4",[]],["title/13",[13,13.946,276,12.198]],["name/13",[12,0.425,276,0.504]],["text/13",[3,1.109,4,1.119,12,0.497,13,2.12,23,3.505,28,0.914,34,2.564,45,1.435,51,2.406,56,1.837,58,2.269,64,1.109,65,1.255,72,0.97,87,0.97,94,3.563,112,1.943,126,1.435,137,0.97,160,1.034,166,0.564,167,1.104,168,0.778,169,1.341,170,1.087,175,1.292,176,1.36,179,2.33,180,0.778,182,1.657,186,1.109,195,1.23,205,2.377,206,0.864,209,0.778,210,2.742,220,0.97,238,1.23,239,1.577,242,1.463,248,0.914,249,2.266,250,1.312,251,2.798,264,1.435,269,1.577,270,1.23,271,0.898,273,0.97,275,1.718,276,1.75,278,1.435,301,0.97,307,1.611,315,2.406,317,1.517,318,1.842,323,1.312,326,1.034,330,1.034,346,0.819,349,1.034,357,1.199,367,2.363,368,2.179,370,1.034,378,1.517,381,1.199,400,1.946,403,1.463,408,1.84,416,1.312,427,3.255,446,1.84,452,1.463,469,1.034,483,2.565,515,1.109,520,1.312,521,1.463,522,1.463,523,1.463,538,1.109,548,3.406,554,2.669,562,1.718,567,1.463,570,1.463,576,2.203,600,1.463,605,1.718,637,1.463,666,1.718,722,1.463,731,1.109,735,1.109,736,1.109,737,1.842,738,1.199,749,3.117,750,2.811,751,1.693,752,1.693,753,1.693,754,1.693,755,1.693,756,1.693,757,1.693,758,1.693,759,1.693,760,1.463,761,1.693,762,1.693,763,1.693,764,1.693,765,1.693,766,1.693,767,1.693,768,1.693]],["component/13",[4,0.324,12,0.474]],["title/14-1",[166,11.681,167,10.727]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[169,11.192,170,9.07]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[271,14.448]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14",[276,12.198,548,21.404]],["name/14",[276,0.504,548,0.884]],["text/14",[2,1.235,4,1.271,11,0.929,12,0.593,13,1.623,15,0.978,23,1.572,25,1.325,28,1.755,34,2.789,44,1.432,45,2.08,48,1.158,51,2.336,56,2.043,58,2.407,65,1.626,66,1.235,72,1.158,87,1.158,94,3.623,112,2.134,127,1.748,135,1.748,138,1.091,160,1.235,166,0.674,167,0.619,169,1.492,170,0.523,172,1.235,174,1.032,175,0.929,176,1.572,179,2.614,180,0.929,181,1.748,182,0.929,186,1.325,195,1.422,203,1.325,209,0.929,210,0.929,220,1.158,238,1.422,239,1.783,243,1.863,251,2.983,264,1.659,269,1.422,270,1.422,271,0.646,273,1.863,275,1.235,276,1.132,278,1.659,307,1.863,315,2.336,317,1.755,318,2.13,326,1.235,330,1.235,346,0.978,348,1.567,349,1.235,370,1.235,376,2.889,378,1.091,385,1.158,400,2.762,408,1.032,439,1.432,446,1.032,450,2.303,469,2.491,483,3.126,515,1.325,538,1.325,548,4.414,562,1.986,576,1.986,605,1.986,639,1.748,666,1.986,709,1.748,710,1.432,718,2.303,731,1.325,732,1.748,733,1.432,734,1.432,735,1.325,736,1.325,737,2.13,738,1.432,749,2.81,769,2.022,770,3.251,771,2.022,772,2.022,773,2.022]],["component/14",[4,0.324,12,0.474]],["title/15-1",[166,11.681,167,10.727]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[168,20.784]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[169,11.192,170,9.07]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[271,14.448]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15",[263,22.957,276,12.198]],["name/15",[263,0.948,276,0.504]],["text/15",[2,1.505,4,0.931,13,0.981,20,1.025,24,1.251,25,1.615,26,1.122,34,2.366,45,1.257,48,0.829,51,2.986,56,1.662,57,1.615,58,2.141,62,1.251,65,1.483,66,0.884,76,0.829,94,3.596,112,1.777,121,0.948,126,0.738,166,0.482,167,0.754,169,1.665,170,0.833,172,0.884,175,0.665,176,1.192,178,0.829,179,2.602,180,1.132,182,1.746,184,0.829,191,1.028,195,1.078,205,2.872,206,0.738,209,0.665,210,3.276,238,1.078,239,1.662,243,0.829,248,0.781,249,0.781,251,2.629,253,0.948,263,4.472,264,1.642,269,1.408,270,1.078,271,0.462,274,1.025,276,1.323,278,1.642,283,1.122,292,0.884,301,0.829,307,2.177,309,1.122,315,1.412,317,1.737,326,0.884,338,1.91,346,1.838,347,2.13,367,0.948,370,0.884,376,1.746,378,0.781,381,1.025,385,0.829,400,2.671,402,2.28,408,1.257,417,3.285,469,2.321,483,2.321,484,1.251,520,1.122,534,1.251,562,1.505,576,2.321,605,2.321,623,1.251,624,1.251,627,1.251,652,1.122,666,1.966,679,1.122,687,1.251,710,1.025,711,3.836,718,1.025,723,2.13,731,0.948,733,1.025,734,1.025,735,0.948,736,0.948,737,0.948,741,1.251,760,2.782,774,1.447,775,1.447,776,1.447,777,1.447,778,1.447,779,1.447,780,1.447,781,1.447,782,3.218,783,1.447,784,1.447,785,3.799,786,1.447,787,1.447,788,2.464,789,3.799,790,3.218,791,1.447,792,1.447,793,1.447,794,1.447,795,2.464,796,1.447,797,1.447,798,1.447,799,3.799,800,2.464,801,1.447,802,1.447,803,1.447]],["component/15",[4,0.324,12,0.474]]],"invertedIndex":[["",{"_index":210,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{}},"component":{}}],["0",{"_index":664,"title":{},"name":{},"text":{"8":{}},"component":{}}],["1",{"_index":730,"title":{},"name":{},"text":{"10":{}},"component":{}}],["1.0",{"_index":95,"title":{},"name":{},"text":{"3":{}},"component":{}}],["1.9",{"_index":784,"title":{},"name":{},"text":{"15":{}},"component":{}}],["1.9.7",{"_index":787,"title":{},"name":{},"text":{"15":{}},"component":{}}],["10",{"_index":427,"title":{},"name":{},"text":{"6":{},"7":{},"13":{}},"component":{}}],["10.0.0",{"_index":751,"title":{},"name":{},"text":{"13":{}},"component":{}}],["100",{"_index":643,"title":{},"name":{},"text":{"8":{}},"component":{}}],["11",{"_index":511,"title":{},"name":{},"text":{"7":{}},"component":{}}],["11,14,17,20,23",{"_index":588,"title":{},"name":{},"text":{"7":{}},"component":{}}],["14",{"_index":568,"title":{},"name":{},"text":{"7":{}},"component":{}}],["17th",{"_index":97,"title":{},"name":{},"text":{"3":{}},"component":{}}],["1998",{"_index":584,"title":{},"name":{},"text":{"7":{}},"component":{}}],["2",{"_index":580,"title":{},"name":{},"text":{"7":{}},"component":{}}],["20,23",{"_index":589,"title":{},"name":{},"text":{"7":{}},"component":{}}],["2003",{"_index":98,"title":{},"name":{},"text":{"3":{}},"component":{}}],["2011",{"_index":582,"title":{},"name":{},"text":{"7":{}},"component":{}}],["3",{"_index":297,"title":{},"name":{},"text":{"5":{}},"component":{}}],["3.0.2",{"_index":740,"title":{},"name":{},"text":{"12":{}},"component":{}}],["3.20",{"_index":341,"title":{},"name":{},"text":{"6":{}},"component":{}}],["3.8",{"_index":552,"title":{},"name":{},"text":{"7":{}},"component":{}}],["32",{"_index":228,"title":{},"name":{},"text":{"4":{}},"component":{}}],["4",{"_index":295,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["4.8",{"_index":549,"title":{},"name":{},"text":{"7":{}},"component":{}}],["5",{"_index":293,"title":{},"name":{},"text":{"5":{}},"component":{}}],["6.0",{"_index":550,"title":{},"name":{},"text":{"7":{}},"component":{}}],["64",{"_index":229,"title":{},"name":{},"text":{"4":{}},"component":{}}],["8.0.0",{"_index":565,"title":{},"name":{},"text":{"7":{}},"component":{}}],["8.1",{"_index":561,"title":{},"name":{},"text":{"7":{}},"component":{}}],["9",{"_index":566,"title":{},"name":{},"text":{"7":{}},"component":{}}],["9.2",{"_index":750,"title":{},"name":{},"text":{"13":{}},"component":{}}],["9.2.0",{"_index":752,"title":{},"name":{},"text":{"13":{}},"component":{}}],["9.3.0",{"_index":753,"title":{},"name":{},"text":{"13":{}},"component":{}}],["98",{"_index":583,"title":{},"name":{},"text":{"7":{}},"component":{}}],["abov",{"_index":127,"title":{},"name":{},"text":{"3":{},"14":{}},"component":{}}],["absolut",{"_index":315,"title":{},"name":{},"text":{"5":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["accompani",{"_index":107,"title":{},"name":{},"text":{"3":{}},"component":{}}],["accord",{"_index":322,"title":{},"name":{},"text":{"6":{}},"component":{}}],["achiev",{"_index":543,"title":{},"name":{},"text":{"7":{}},"component":{}}],["action",{"_index":4,"title":{"2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}}}],["actions/b2",{"_index":207,"title":{},"name":{},"text":{"4":{}},"component":{}}],["actions/boost",{"_index":299,"title":{},"name":{},"text":{"5":{}},"component":{}}],["actions/checkout",{"_index":438,"title":{},"name":{},"text":{"6":{}},"component":{}}],["actions/checkout@v3",{"_index":519,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["actions/cmak",{"_index":340,"title":{},"name":{},"text":{"6":{}},"component":{}}],["actions/cpp",{"_index":509,"title":{},"name":{},"text":{"7":{}},"component":{}}],["actions/cr",{"_index":644,"title":{},"name":{},"text":{"8":{}},"component":{}}],["actions/flamegraph@mast",{"_index":697,"title":{},"name":{},"text":{"9":{}},"component":{}}],["actions/packag",{"_index":712,"title":{},"name":{},"text":{"10":{}},"component":{}}],["actions/setup",{"_index":520,"title":{},"name":{},"text":{"7":{},"13":{},"15":{}},"component":{}}],["ad",{"_index":773,"title":{},"name":{},"text":{"14":{}},"component":{}}],["adapt",{"_index":10,"title":{},"name":{},"text":{"1":{}},"component":{}}],["add",{"_index":731,"title":{},"name":{},"text":{"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["add_librari",{"_index":387,"title":{},"name":{},"text":{"6":{}},"component":{}}],["addit",{"_index":309,"title":{},"name":{},"text":{"5":{},"7":{},"15":{}},"component":{}}],["address",{"_index":43,"title":{},"name":{},"text":{"2":{},"4":{}},"component":{}}],["adjust",{"_index":321,"title":{"7-7":{}},"name":{},"text":{"6":{},"7":{}},"component":{}}],["affect",{"_index":533,"title":{},"name":{},"text":{"7":{}},"component":{}}],["aim",{"_index":52,"title":{},"name":{},"text":{"2":{}},"component":{}}],["alandefreitas/cpp",{"_index":206,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"13":{},"15":{}},"component":{}}],["allow",{"_index":66,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"11":{},"14":{},"15":{}},"component":{}}],["alreadi",{"_index":733,"title":{},"name":{},"text":{"11":{},"12":{},"14":{},"15":{}},"component":{}}],["altern",{"_index":710,"title":{},"name":{},"text":{"10":{},"11":{},"14":{},"15":{}},"component":{}}],["altogeth",{"_index":472,"title":{},"name":{},"text":{"7":{}},"component":{}}],["alway",{"_index":277,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["analysi",{"_index":695,"title":{},"name":{},"text":{"9":{}},"component":{}}],["analyz",{"_index":655,"title":{},"name":{},"text":{"8":{}},"component":{}}],["annot",{"_index":336,"title":{},"name":{},"text":{"6":{}},"component":{}}],["anoth",{"_index":197,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["anyon",{"_index":156,"title":{},"name":{},"text":{"3":{}},"component":{}}],["anywher",{"_index":476,"title":{},"name":{},"text":{"7":{}},"component":{}}],["appl",{"_index":569,"title":{},"name":{},"text":{"7":{}},"component":{}}],["appli",{"_index":394,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["applic",{"_index":413,"title":{},"name":{},"text":{"6":{}},"component":{}}],["approach",{"_index":494,"title":{},"name":{},"text":{"7":{}},"component":{}}],["appropri",{"_index":756,"title":{},"name":{},"text":{"13":{}},"component":{}}],["apt",{"_index":718,"title":{},"name":{},"text":{"10":{},"11":{},"14":{},"15":{}},"component":{}}],["arch",{"_index":801,"title":{},"name":{},"text":{"15":{}},"component":{}}],["architectur",{"_index":26,"title":{},"name":{},"text":{"2":{},"12":{},"15":{}},"component":{}}],["arg",{"_index":354,"title":{},"name":{},"text":{"6":{}},"component":{}}],["argument",{"_index":240,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["aris",{"_index":163,"title":{},"name":{},"text":{"3":{}},"component":{}}],["array",{"_index":598,"title":{},"name":{},"text":{"7":{}},"component":{}}],["artifact",{"_index":363,"title":{},"name":{},"text":{"6":{},"9":{}},"component":{}}],["asan",{"_index":230,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["associ",{"_index":619,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["assum",{"_index":305,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["attempt",{"_index":273,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["attribut",{"_index":504,"title":{},"name":{},"text":{"7":{}},"component":{}}],["august",{"_index":96,"title":{},"name":{},"text":{"3":{}},"component":{}}],["autom",{"_index":482,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["automat",{"_index":406,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["auxiliari",{"_index":450,"title":{"7-9":{}},"name":{},"text":{"11":{},"12":{},"14":{}},"component":{}}],["avail",{"_index":400,"title":{},"name":{},"text":{"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["avoid",{"_index":471,"title":{},"name":{},"text":{"7":{}},"component":{}}],["b",{"_index":325,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["b2",{"_index":171,"title":{"4":{}},"name":{"4":{}},"text":{"4":{},"5":{},"7":{}},"component":{}}],["backward",{"_index":743,"title":{},"name":{},"text":{"12":{}},"component":{}}],["base",{"_index":291,"title":{},"name":{},"text":{"5":{},"6":{},"7":{}},"component":{}}],["basic",{"_index":779,"title":{},"name":{},"text":{"15":{}},"component":{}}],["be",{"_index":442,"title":{},"name":{},"text":{"6":{}},"component":{}}],["befor",{"_index":616,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["behavior",{"_index":454,"title":{},"name":{},"text":{"7":{}},"component":{}}],["besid",{"_index":285,"title":{},"name":{},"text":{"5":{}},"component":{}}],["between",{"_index":531,"title":{},"name":{},"text":{"7":{}},"component":{}}],["bin",{"_index":791,"title":{},"name":{},"text":{"15":{}},"component":{}}],["binari",{"_index":376,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"15":{}},"component":{}}],["bindir",{"_index":768,"title":{},"name":{},"text":{"13":{}},"component":{}}],["bodi",{"_index":625,"title":{},"name":{},"text":{"8":{}},"component":{}}],["boolean",{"_index":747,"title":{},"name":{},"text":{"12":{}},"component":{}}],["boost",{"_index":93,"title":{"5":{}},"name":{"5":{}},"text":{"3":{},"4":{},"5":{},"10":{}},"component":{}}],["boost.variant2",{"_index":298,"title":{},"name":{},"text":{"5":{}},"component":{}}],["boost_src_dir=\\\"{0",{"_index":359,"title":{},"name":{},"text":{"6":{}},"component":{}}],["both",{"_index":708,"title":{},"name":{},"text":{"10":{}},"component":{}}],["branch",{"_index":302,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["break",{"_index":575,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["broken",{"_index":465,"title":{},"name":{},"text":{"7":{}},"component":{}}],["browser",{"_index":690,"title":{},"name":{},"text":{"9":{}},"component":{}}],["bug",{"_index":559,"title":{},"name":{},"text":{"7":{}},"component":{}}],["build",{"_index":216,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"12":{}},"component":{}}],["build_shared_lib",{"_index":388,"title":{},"name":{},"text":{"6":{}},"component":{}}],["build_test",{"_index":405,"title":{},"name":{},"text":{"6":{}},"component":{}}],["built",{"_index":709,"title":{},"name":{},"text":{"10":{},"14":{}},"component":{}}],["bump|set)\\s+vers",{"_index":659,"title":{},"name":{},"text":{"8":{}},"component":{}}],["c",{"_index":13,"title":{"2":{},"7":{},"13":{},"7-2":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"13":{},"14":{},"15":{}},"component":{}}],["cach",{"_index":274,"title":{},"name":{},"text":{"5":{},"10":{},"12":{},"15":{}},"component":{}}],["call",{"_index":439,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"14":{}},"component":{}}],["case",{"_index":279,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"12":{}},"component":{}}],["catch",{"_index":498,"title":{},"name":{},"text":{"7":{}},"component":{}}],["categori",{"_index":635,"title":{},"name":{},"text":{"8":{}},"component":{}}],["caus",{"_index":726,"title":{},"name":{},"text":{"10":{}},"component":{}}],["cc",{"_index":349,"title":{},"name":{},"text":{"6":{},"7":{},"10":{},"11":{},"13":{},"14":{}},"component":{}}],["ccflag",{"_index":255,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{}},"component":{}}],["certain",{"_index":534,"title":{},"name":{},"text":{"7":{},"15":{}},"component":{}}],["certainli",{"_index":456,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cflag",{"_index":379,"title":{},"name":{},"text":{"6":{}},"component":{}}],["challeng",{"_index":16,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["chanc",{"_index":497,"title":{},"name":{},"text":{"7":{}},"component":{}}],["chang",{"_index":440,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["changelog",{"_index":196,"title":{"8":{}},"name":{"8":{}},"text":{"4":{},"6":{},"8":{}},"component":{}}],["changelog.md",{"_index":626,"title":{},"name":{},"text":{"8":{}},"component":{}}],["changelog@mast",{"_index":645,"title":{},"name":{},"text":{"8":{}},"component":{}}],["charg",{"_index":102,"title":{},"name":{},"text":{"3":{}},"component":{}}],["check",{"_index":666,"title":{},"name":{},"text":{"8":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["checkout",{"_index":641,"title":{},"name":{},"text":{"8":{}},"component":{}}],["chrome://trac",{"_index":693,"title":{},"name":{},"text":{"9":{}},"component":{}}],["ci",{"_index":639,"title":{},"name":{},"text":{"8":{},"14":{}},"component":{}}],["circumstanti",{"_index":732,"title":{},"name":{},"text":{"11":{},"14":{}},"component":{}}],["cl",{"_index":571,"title":{},"name":{},"text":{"7":{}},"component":{}}],["clang",{"_index":554,"title":{"11":{}},"name":{"11":{}},"text":{"7":{},"9":{},"10":{},"11":{},"13":{}},"component":{}}],["clangbuildanalyz",{"_index":703,"title":{},"name":{},"text":{"9":{}},"component":{}}],["client",{"_index":705,"title":{},"name":{},"text":{"9":{}},"component":{}}],["clone",{"_index":272,"title":{"5":{}},"name":{"5":{}},"text":{"5":{},"7":{},"8":{},"10":{}},"component":{}}],["clone.outputs.boost",{"_index":212,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["clone@mast",{"_index":300,"title":{},"name":{},"text":{"5":{}},"component":{}}],["cmake",{"_index":191,"title":{"6":{},"12":{}},"name":{"6":{},"12":{}},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"15":{}},"component":{}}],["cmake_build_typ",{"_index":331,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_configuration_typ",{"_index":329,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_create_annot",{"_index":428,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_export_compile_command",{"_index":396,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_export_compile_commands=on",{"_index":395,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_gener",{"_index":390,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_generator_toolset",{"_index":392,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_instal",{"_index":410,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_install_prefix",{"_index":397,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_job",{"_index":399,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_minimum_requir",{"_index":373,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["cmake_packag",{"_index":412,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_package_artifact",{"_index":423,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_run_test",{"_index":401,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake_toolchain_fil",{"_index":389,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmakelists.txt",{"_index":375,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["code",{"_index":87,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["coerc",{"_index":799,"title":{},"name":{},"text":{"15":{}},"component":{}}],["collect",{"_index":46,"title":{},"name":{},"text":{"2":{}},"component":{}}],["combin",{"_index":489,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["comma",{"_index":380,"title":{},"name":{},"text":{"6":{}},"component":{}}],["command",{"_index":269,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["commit",{"_index":528,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["common",{"_index":54,"title":{},"name":{},"text":{"2":{}},"component":{}}],["compat",{"_index":75,"title":{},"name":{},"text":{"2":{},"7":{},"12":{}},"component":{}}],["compil",{"_index":23,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["complement",{"_index":574,"title":{},"name":{},"text":{"7":{}},"component":{}}],["complet",{"_index":173,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{}},"component":{}}],["complex",{"_index":31,"title":{},"name":{},"text":{"2":{}},"component":{}}],["compon",{"_index":606,"title":{},"name":{},"text":{"7":{}},"component":{}}],["compos",{"_index":316,"title":{},"name":{},"text":{"6":{}},"component":{}}],["comprehens",{"_index":39,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["condit",{"_index":526,"title":{},"name":{},"text":{"7":{}},"component":{}}],["config",{"_index":328,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["config.jam",{"_index":187,"title":{},"name":{},"text":{"4":{}},"component":{}}],["configur",{"_index":59,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{}},"component":{}}],["conflict",{"_index":727,"title":{},"name":{},"text":{"10":{}},"component":{}}],["conjunct",{"_index":781,"title":{},"name":{},"text":{"15":{}},"component":{}}],["connect",{"_index":164,"title":{},"name":{},"text":{"3":{}},"component":{}}],["consid",{"_index":20,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"15":{}},"component":{}}],["constraint",{"_index":658,"title":{},"name":{},"text":{"8":{}},"component":{}}],["consum",{"_index":452,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["contain",{"_index":408,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["content",{"_index":572,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["context",{"_index":677,"title":{},"name":{},"text":{"8":{}},"component":{}}],["contract",{"_index":160,"title":{},"name":{},"text":{"3":{},"7":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["contribut",{"_index":0,"title":{"1":{}},"name":{"1":{}},"text":{},"component":{}}],["contributor",{"_index":665,"title":{},"name":{},"text":{"8":{}},"component":{}}],["conveni",{"_index":614,"title":{},"name":{},"text":{"7":{}},"component":{}}],["convent",{"_index":629,"title":{},"name":{},"text":{"8":{}},"component":{}}],["convert",{"_index":687,"title":{},"name":{},"text":{"9":{},"15":{}},"component":{}}],["copi",{"_index":106,"title":{},"name":{},"text":{"3":{}},"component":{}}],["copyright",{"_index":122,"title":{},"name":{},"text":{"3":{}},"component":{}}],["correctli",{"_index":74,"title":{},"name":{},"text":{"2":{}},"component":{}}],["correspond",{"_index":612,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["cost",{"_index":540,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cover",{"_index":40,"title":{},"name":{},"text":{"2":{},"3":{},"7":{}},"component":{}}],["coverag",{"_index":201,"title":{},"name":{},"text":{"4":{},"6":{},"7":{}},"component":{}}],["cpack",{"_index":411,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cpack_gener",{"_index":421,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cpack_package_directori",{"_index":414,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cpack_package_vendor",{"_index":419,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cpp",{"_index":12,"title":{},"name":{"7":{},"13":{}},"text":{"7":{},"11":{},"13":{},"14":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}}}],["cpp.outputs.cc",{"_index":350,"title":{},"name":{},"text":{"6":{},"7":{},"10":{}},"component":{}}],["cpp.outputs.cxx",{"_index":222,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{}},"component":{}}],["cpp@master",{"_index":521,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["cpp_actions_no_deps=on",{"_index":361,"title":{},"name":{},"text":{"6":{}},"component":{}}],["creat",{"_index":53,"title":{"8":{},"9":{}},"name":{"8":{}},"text":{"2":{},"4":{},"6":{},"7":{},"8":{}},"component":{}}],["ctest",{"_index":407,"title":{},"name":{},"text":{"6":{}},"component":{}}],["current",{"_index":320,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["custom",{"_index":199,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["cxx",{"_index":220,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"11":{},"13":{},"14":{}},"component":{}}],["cxxflag",{"_index":252,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{}},"component":{}}],["cxxstd",{"_index":224,"title":{},"name":{},"text":{"4":{},"6":{},"7":{}},"component":{}}],["d",{"_index":358,"title":{},"name":{},"text":{"6":{}},"component":{}}],["damag",{"_index":158,"title":{},"name":{},"text":{"3":{}},"component":{}}],["day",{"_index":425,"title":{},"name":{},"text":{"6":{}},"component":{}}],["deal",{"_index":165,"title":{},"name":{},"text":{"3":{}},"component":{}}],["debug",{"_index":244,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["default",{"_index":239,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["defin",{"_index":374,"title":{},"name":{},"text":{"6":{},"7":{}},"component":{}}],["delimit",{"_index":657,"title":{},"name":{},"text":{"8":{}},"component":{}}],["deliv",{"_index":88,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["dep",{"_index":356,"title":{},"name":{},"text":{"6":{},"7":{}},"component":{}}],["depend",{"_index":178,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"10":{},"12":{},"15":{}},"component":{}}],["depth",{"_index":638,"title":{},"name":{},"text":{"8":{}},"component":{}}],["deriv",{"_index":115,"title":{},"name":{},"text":{"3":{}},"component":{}}],["describ",{"_index":578,"title":{},"name":{},"text":{"7":{}},"component":{}}],["descript",{"_index":238,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["design",{"_index":49,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["detail",{"_index":686,"title":{},"name":{},"text":{"9":{}},"component":{}}],["determin",{"_index":289,"title":{},"name":{},"text":{"5":{},"6":{},"7":{}},"component":{}}],["develop",{"_index":64,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"13":{}},"component":{}}],["dictionari",{"_index":599,"title":{},"name":{},"text":{"7":{}},"component":{}}],["differ",{"_index":22,"title":{},"name":{},"text":{"2":{},"6":{},"7":{}},"component":{}}],["difficult",{"_index":37,"title":{},"name":{},"text":{"2":{}},"component":{}}],["digit",{"_index":581,"title":{},"name":{},"text":{"7":{}},"component":{}}],["dir",{"_index":209,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["directli",{"_index":282,"title":{},"name":{},"text":{"5":{},"9":{}},"component":{}}],["directori",{"_index":182,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["disabl",{"_index":266,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["disclaim",{"_index":129,"title":{},"name":{},"text":{"3":{}},"component":{}}],["display",{"_index":110,"title":{},"name":{},"text":{"3":{}},"component":{}}],["dispos",{"_index":83,"title":{},"name":{},"text":{"2":{}},"component":{}}],["distribut",{"_index":111,"title":{},"name":{},"text":{"3":{}},"component":{}}],["docker",{"_index":604,"title":{},"name":{},"text":{"7":{}},"component":{}}],["document",{"_index":108,"title":{},"name":{},"text":{"3":{},"7":{}},"component":{}}],["doesn’t",{"_index":463,"title":{},"name":{},"text":{"7":{}},"component":{}}],["don’t",{"_index":532,"title":{},"name":{},"text":{"7":{}},"component":{}}],["download",{"_index":711,"title":{},"name":{},"text":{"10":{},"12":{},"15":{}},"component":{}}],["doxygen",{"_index":782,"title":{},"name":{},"text":{"15":{}},"component":{}}],["duplic",{"_index":590,"title":{},"name":{},"text":{"7":{}},"component":{}}],["each",{"_index":335,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"9":{}},"component":{}}],["earli",{"_index":500,"title":{},"name":{},"text":{"7":{}},"component":{}}],["earliest",{"_index":613,"title":{},"name":{},"text":{"7":{}},"component":{}}],["easi",{"_index":544,"title":{},"name":{},"text":{"7":{}},"component":{}}],["easili",{"_index":62,"title":{},"name":{},"text":{"2":{},"15":{}},"component":{}}],["ecosystem",{"_index":462,"title":{},"name":{},"text":{"7":{}},"component":{}}],["effect",{"_index":459,"title":{},"name":{},"text":{"7":{}},"component":{}}],["effici",{"_index":68,"title":{},"name":{},"text":{"2":{}},"component":{}}],["effort",{"_index":70,"title":{},"name":{},"text":{"2":{}},"component":{}}],["elimin",{"_index":558,"title":{},"name":{},"text":{"7":{}},"component":{}}],["emit",{"_index":339,"title":{},"name":{},"text":{"6":{}},"component":{}}],["empti",{"_index":393,"title":{},"name":{},"text":{"6":{}},"component":{}}],["enabl",{"_index":256,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["enable/dis",{"_index":404,"title":{},"name":{},"text":{"6":{}},"component":{}}],["enorm",{"_index":460,"title":{},"name":{},"text":{"7":{}},"component":{}}],["enough",{"_index":444,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ensur",{"_index":72,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["entir",{"_index":124,"title":{},"name":{},"text":{"3":{},"7":{}},"component":{}}],["entri",{"_index":515,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["environ",{"_index":51,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["equival",{"_index":242,"title":{},"name":{},"text":{"4":{},"13":{}},"component":{}}],["error",{"_index":338,"title":{},"name":{},"text":{"6":{},"7":{},"15":{}},"component":{}}],["especi",{"_index":453,"title":{},"name":{},"text":{"7":{}},"component":{}}],["essenti",{"_index":617,"title":{},"name":{},"text":{"7":{}},"component":{}}],["event",{"_index":153,"title":{},"name":{},"text":{"3":{}},"component":{}}],["event_typ",{"_index":527,"title":{},"name":{},"text":{"7":{}},"component":{}}],["exact",{"_index":735,"title":{},"name":{},"text":{"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["exampl",{"_index":168,"title":{"4-2":{},"5-2":{},"6-2":{},"7-12":{},"8-1":{},"9-1":{},"10-2":{},"13-2":{},"15-2":{}},"name":{},"text":{"12":{},"13":{}},"component":{}}],["except",{"_index":386,"title":{},"name":{},"text":{"6":{},"7":{}},"component":{}}],["exclud",{"_index":312,"title":{},"name":{},"text":{"5":{}},"component":{}}],["execut",{"_index":112,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["exist",{"_index":369,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["explicit",{"_index":673,"title":{},"name":{},"text":{"8":{}},"component":{}}],["explicitli",{"_index":286,"title":{},"name":{},"text":{"5":{}},"component":{}}],["export",{"_index":362,"title":{},"name":{},"text":{"6":{}},"component":{}}],["express",{"_index":143,"title":{},"name":{},"text":{"3":{}},"component":{}}],["extra",{"_index":253,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"15":{}},"component":{}}],["factor",{"_index":19,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["factori",{"_index":491,"title":{},"name":{},"text":{"7":{}},"component":{}}],["fail",{"_index":402,"title":{},"name":{},"text":{"6":{},"7":{},"10":{},"15":{}},"component":{}}],["fallback",{"_index":778,"title":{},"name":{},"text":{"15":{}},"component":{}}],["fals",{"_index":270,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["fast",{"_index":513,"title":{},"name":{},"text":{"7":{}},"component":{}}],["featur",{"_index":35,"title":{},"name":{},"text":{"2":{},"6":{}},"component":{}}],["feel",{"_index":6,"title":{},"name":{},"text":{"1":{}},"component":{}}],["fetch",{"_index":177,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{}},"component":{}}],["file",{"_index":174,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"14":{}},"component":{}}],["filenam",{"_index":434,"title":{},"name":{},"text":{"6":{}},"component":{}}],["find",{"_index":469,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["find_program",{"_index":775,"title":{},"name":{},"text":{"15":{}},"component":{}}],["first",{"_index":275,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["fit",{"_index":147,"title":{},"name":{},"text":{"3":{}},"component":{}}],["flag",{"_index":254,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"10":{}},"component":{}}],["flamegraph",{"_index":193,"title":{"9":{}},"name":{"9":{}},"text":{"4":{},"6":{},"9":{}},"component":{}}],["flavor",{"_index":669,"title":{},"name":{},"text":{"8":{}},"component":{}}],["flawlessli",{"_index":455,"title":{},"name":{},"text":{"7":{}},"component":{}}],["fmt",{"_index":715,"title":{},"name":{},"text":{"10":{}},"component":{}}],["focu",{"_index":84,"title":{},"name":{},"text":{"2":{}},"component":{}}],["follow",{"_index":121,"title":{},"name":{},"text":{"3":{},"6":{},"7":{},"8":{},"15":{}},"component":{}}],["footer",{"_index":632,"title":{},"name":{},"text":{"8":{}},"component":{}}],["footer(",{"_index":631,"title":{},"name":{},"text":{"8":{}},"component":{}}],["form",{"_index":134,"title":{},"name":{},"text":{"3":{},"7":{}},"component":{}}],["format",{"_index":357,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"13":{}},"component":{}}],["found",{"_index":417,"title":{},"name":{},"text":{"6":{},"7":{},"12":{},"15":{}},"component":{}}],["fraction",{"_index":490,"title":{},"name":{},"text":{"7":{}},"component":{}}],["free",{"_index":7,"title":{},"name":{},"text":{"1":{},"3":{}},"component":{}}],["fromjson(needs.cpp",{"_index":514,"title":{},"name":{},"text":{"7":{}},"component":{}}],["ftime",{"_index":685,"title":{},"name":{},"text":{"9":{}},"component":{}}],["function",{"_index":73,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["furnish",{"_index":119,"title":{},"name":{},"text":{"3":{}},"component":{}}],["furthermor",{"_index":29,"title":{},"name":{},"text":{"2":{}},"component":{}}],["g",{"_index":749,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["gcc",{"_index":548,"title":{"14":{}},"name":{"14":{}},"text":{"7":{},"10":{},"13":{},"14":{}},"component":{}}],["gcc8.1",{"_index":564,"title":{},"name":{},"text":{"7":{}},"component":{}}],["gener",{"_index":137,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"8":{},"9":{},"13":{}},"component":{}}],["giant",{"_index":481,"title":{},"name":{},"text":{"7":{}},"component":{}}],["github",{"_index":47,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{}},"component":{}}],["github.ref_nam",{"_index":653,"title":{},"name":{},"text":{"8":{}},"component":{}}],["github_token",{"_index":699,"title":{},"name":{},"text":{"9":{}},"component":{}}],["github_workspac",{"_index":435,"title":{},"name":{},"text":{"6":{}},"component":{}}],["given",{"_index":483,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["go",{"_index":622,"title":{},"name":{},"text":{"8":{}},"component":{}}],["goe",{"_index":634,"title":{},"name":{},"text":{"8":{}},"component":{}}],["good",{"_index":680,"title":{},"name":{},"text":{"8":{}},"component":{}}],["grant",{"_index":101,"title":{},"name":{},"text":{"3":{}},"component":{}}],["great",{"_index":89,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hard",{"_index":542,"title":{},"name":{},"text":{"7":{}},"component":{}}],["has_major",{"_index":609,"title":{},"name":{},"text":{"7":{}},"component":{}}],["has_minor",{"_index":610,"title":{},"name":{},"text":{"7":{}},"component":{}}],["has_patch",{"_index":611,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hash",{"_index":662,"title":{},"name":{},"text":{"8":{}},"component":{}}],["help",{"_index":71,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["herebi",{"_index":100,"title":{},"name":{},"text":{"3":{}},"component":{}}],["high",{"_index":85,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hint",{"_index":780,"title":{},"name":{},"text":{"15":{}},"component":{}}],["histori",{"_index":621,"title":{},"name":{},"text":{"8":{}},"component":{}}],["hit",{"_index":746,"title":{},"name":{},"text":{"12":{}},"component":{}}],["holder",{"_index":155,"title":{},"name":{},"text":{"3":{}},"component":{}}],["home/user/project/src",{"_index":432,"title":{},"name":{},"text":{"6":{}},"component":{}}],["home/user/project/src/main.cpp",{"_index":430,"title":{},"name":{},"text":{"6":{}},"component":{}}],["host",{"_index":777,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hosttool",{"_index":803,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hour",{"_index":772,"title":{},"name":{},"text":{"14":{}},"component":{}}],["https://api.imgur.com",{"_index":707,"title":{},"name":{},"text":{"9":{}},"component":{}}],["https://github.com/doxygen/doxygen/releases/download/release_1_9_7/doxygen",{"_index":786,"title":{},"name":{},"text":{"15":{}},"component":{}}],["https://github.com/jlfwong/speedscop",{"_index":692,"title":{},"name":{},"text":{"9":{}},"component":{}}],["https://www.speedscope.app",{"_index":691,"title":{},"name":{},"text":{"9":{}},"component":{}}],["id",{"_index":301,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"10":{},"13":{},"15":{}},"component":{}}],["idea",{"_index":681,"title":{},"name":{},"text":{"8":{}},"component":{}}],["identifi",{"_index":319,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["ignor",{"_index":314,"title":{"7-6":{}},"name":{},"text":{"5":{},"6":{},"8":{},"10":{}},"component":{}}],["imag",{"_index":603,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["imgur",{"_index":704,"title":{},"name":{},"text":{"9":{}},"component":{}}],["impli",{"_index":144,"title":{},"name":{},"text":{"3":{}},"component":{}}],["implic",{"_index":461,"title":{},"name":{},"text":{"7":{}},"component":{}}],["implicitli",{"_index":288,"title":{},"name":{},"text":{"5":{}},"component":{}}],["import",{"_index":537,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["imposs",{"_index":771,"title":{},"name":{},"text":{"14":{}},"component":{}}],["includ",{"_index":126,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"13":{},"15":{}},"component":{}}],["increas",{"_index":496,"title":{},"name":{},"text":{"7":{}},"component":{}}],["independ",{"_index":313,"title":{},"name":{},"text":{"5":{}},"component":{}}],["index",{"_index":14,"title":{},"name":{"2":{}},"text":{},"component":{}}],["indic",{"_index":633,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["individu",{"_index":280,"title":{},"name":{},"text":{"5":{}},"component":{}}],["infer",{"_index":742,"title":{},"name":{},"text":{"12":{}},"component":{}}],["inform",{"_index":268,"title":{},"name":{},"text":{"4":{}},"component":{}}],["infring",{"_index":152,"title":{},"name":{},"text":{"3":{}},"component":{}}],["initi",{"_index":501,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["inject",{"_index":595,"title":{},"name":{},"text":{"7":{}},"component":{}}],["input",{"_index":169,"title":{"4-3":{},"5-3":{},"6-3":{},"7-13":{},"8-2":{},"9-2":{},"10-3":{},"11-2":{},"12-1":{},"13-3":{},"14-2":{},"15-3":{}},"name":{},"text":{"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["inputs.report",{"_index":696,"title":{},"name":{},"text":{"9":{}},"component":{}}],["inspir",{"_index":774,"title":{},"name":{},"text":{"15":{}},"component":{}}],["instal",{"_index":179,"title":{"10":{}},"name":{"10":{}},"text":{"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["install.outputs.vcpkg",{"_index":345,"title":{},"name":{},"text":{"6":{}},"component":{}}],["install@mast",{"_index":713,"title":{},"name":{},"text":{"10":{}},"component":{}}],["instanc",{"_index":323,"title":{},"name":{},"text":{"6":{},"7":{},"13":{}},"component":{}}],["instead",{"_index":330,"title":{},"name":{},"text":{"6":{},"7":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["integr",{"_index":63,"title":{},"name":{},"text":{"2":{},"4":{},"6":{}},"component":{}}],["intermediari",{"_index":551,"title":{},"name":{},"text":{"7":{}},"component":{}}],["issu",{"_index":499,"title":{},"name":{},"text":{"7":{}},"component":{}}],["iter",{"_index":383,"title":{},"name":{},"text":{"6":{}},"component":{}}],["itself",{"_index":30,"title":{},"name":{},"text":{"2":{}},"component":{}}],["it’",{"_index":679,"title":{},"name":{},"text":{"8":{},"10":{},"15":{}},"component":{}}],["j",{"_index":748,"title":{},"name":{},"text":{"12":{}},"component":{}}],["job",{"_index":198,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{}},"component":{}}],["json",{"_index":502,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["keep",{"_index":426,"title":{},"name":{},"text":{"6":{},"7":{}},"component":{}}],["key",{"_index":451,"title":{"7-9":{}},"name":{},"text":{"7":{},"10":{}},"component":{}}],["kind",{"_index":142,"title":{},"name":{},"text":{"3":{}},"component":{}}],["languag",{"_index":32,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["last",{"_index":409,"title":{},"name":{},"text":{"6":{},"7":{}},"component":{}}],["later",{"_index":332,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["latest",{"_index":278,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["lcov",{"_index":618,"title":{},"name":{},"text":{"7":{}},"component":{}}],["left",{"_index":596,"title":{},"name":{},"text":{"7":{}},"component":{}}],["less",{"_index":536,"title":{},"name":{},"text":{"7":{}},"component":{}}],["leverag",{"_index":60,"title":{},"name":{},"text":{"2":{}},"component":{}}],["liabil",{"_index":159,"title":{},"name":{},"text":{"3":{}},"component":{}}],["liabl",{"_index":157,"title":{},"name":{},"text":{"3":{}},"component":{}}],["libc",{"_index":724,"title":{},"name":{},"text":{"10":{}},"component":{}}],["librari",{"_index":15,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{}},"component":{}}],["libstdc",{"_index":725,"title":{},"name":{},"text":{"10":{}},"component":{}}],["licens",{"_index":92,"title":{"3":{}},"name":{"3":{}},"text":{"3":{}},"component":{}}],["limit",{"_index":145,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["line",{"_index":415,"title":{},"name":{},"text":{"6":{}},"component":{}}],["link",{"_index":652,"title":{},"name":{},"text":{"8":{},"10":{},"15":{}},"component":{}}],["linker",{"_index":261,"title":{},"name":{},"text":{"4":{}},"component":{}}],["linkflag",{"_index":260,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["linux",{"_index":723,"title":{},"name":{},"text":{"10":{},"15":{}},"component":{}}],["list",{"_index":248,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"13":{},"15":{}},"component":{}}],["local",{"_index":348,"title":{},"name":{},"text":{"6":{},"8":{},"14":{}},"component":{}}],["locat",{"_index":797,"title":{},"name":{},"text":{"15":{}},"component":{}}],["look",{"_index":760,"title":{},"name":{},"text":{"13":{},"15":{}},"component":{}}],["loos",{"_index":628,"title":{},"name":{},"text":{"8":{}},"component":{}}],["lowercas",{"_index":247,"title":{},"name":{},"text":{"4":{}},"component":{}}],["machin",{"_index":135,"title":{},"name":{},"text":{"3":{},"14":{}},"component":{}}],["maco",{"_index":795,"title":{},"name":{},"text":{"15":{}},"component":{}}],["made",{"_index":700,"title":{},"name":{},"text":{"9":{}},"component":{}}],["main",{"_index":365,"title":{},"name":{},"text":{"6":{},"7":{}},"component":{}}],["main.cpp",{"_index":433,"title":{},"name":{},"text":{"6":{}},"component":{}}],["major",{"_index":576,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["make",{"_index":36,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{}},"component":{}}],["manag",{"_index":283,"title":{},"name":{},"text":{"5":{},"10":{},"15":{}},"component":{}}],["mani",{"_index":553,"title":{},"name":{},"text":{"7":{}},"component":{}}],["manifest",{"_index":284,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["manner",{"_index":493,"title":{},"name":{},"text":{"7":{}},"component":{}}],["map",{"_index":241,"title":{},"name":{},"text":{"4":{}},"component":{}}],["markdown",{"_index":670,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["master",{"_index":303,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["match",{"_index":372,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["matric",{"_index":448,"title":{"7-4":{}},"name":{},"text":{"7":{}},"component":{}}],["matrix",{"_index":446,"title":{"7":{},"7-2":{},"7-5":{}},"name":{"7":{}},"text":{"7":{},"8":{},"11":{},"13":{},"14":{}},"component":{}}],["matrix.asan",{"_index":231,"title":{},"name":{},"text":{"4":{}},"component":{}}],["matrix.b2",{"_index":215,"title":{},"name":{},"text":{"4":{}},"component":{}}],["matrix.build",{"_index":218,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["matrix.cc",{"_index":351,"title":{},"name":{},"text":{"6":{},"7":{},"10":{}},"component":{}}],["matrix.ccflag",{"_index":352,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["matrix.compil",{"_index":522,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["matrix.contain",{"_index":518,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["matrix.coverag",{"_index":202,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["matrix.cxx",{"_index":223,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{}},"component":{}}],["matrix.cxxflag",{"_index":353,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["matrix.cxxstd",{"_index":225,"title":{},"name":{},"text":{"4":{},"6":{},"7":{}},"component":{}}],["matrix.fetch",{"_index":714,"title":{},"name":{},"text":{"10":{}},"component":{}}],["matrix.gener",{"_index":342,"title":{},"name":{},"text":{"6":{}},"component":{}}],["matrix.i",{"_index":364,"title":{},"name":{},"text":{"6":{}},"component":{}}],["matrix.instal",{"_index":719,"title":{},"name":{},"text":{"10":{}},"component":{}}],["matrix.major",{"_index":767,"title":{},"name":{},"text":{"13":{}},"component":{}}],["matrix.nam",{"_index":516,"title":{},"name":{},"text":{"7":{}},"component":{}}],["matrix.no",{"_index":355,"title":{},"name":{},"text":{"6":{}},"component":{}}],["matrix.outputs.matrix",{"_index":508,"title":{},"name":{},"text":{"7":{}},"component":{}}],["matrix.run",{"_index":517,"title":{},"name":{},"text":{"7":{}},"component":{}}],["matrix.shar",{"_index":237,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["matrix.subrang",{"_index":764,"title":{},"name":{},"text":{"13":{}},"component":{}}],["matrix.tim",{"_index":194,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["matrix.triplet",{"_index":717,"title":{},"name":{},"text":{"10":{}},"component":{}}],["matrix.tsan",{"_index":235,"title":{},"name":{},"text":{"4":{}},"component":{}}],["matrix.ubsan",{"_index":233,"title":{},"name":{},"text":{"4":{}},"component":{}}],["matrix.vers",{"_index":523,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["matrix.x86",{"_index":227,"title":{},"name":{},"text":{"4":{}},"component":{}}],["matrix@mast",{"_index":510,"title":{},"name":{},"text":{"7":{}},"component":{}}],["max",{"_index":586,"title":{},"name":{},"text":{"7":{}},"component":{}}],["maximum",{"_index":587,"title":{},"name":{},"text":{"7":{}},"component":{}}],["mean",{"_index":436,"title":{},"name":{},"text":{"6":{}},"component":{}}],["meaning",{"_index":477,"title":{},"name":{},"text":{"7":{}},"component":{}}],["mention",{"_index":457,"title":{},"name":{},"text":{"7":{}},"component":{}}],["merchant",{"_index":146,"title":{},"name":{},"text":{"3":{}},"component":{}}],["merg",{"_index":684,"title":{},"name":{},"text":{"9":{}},"component":{}}],["messag",{"_index":636,"title":{},"name":{},"text":{"8":{}},"component":{}}],["method",{"_index":770,"title":{},"name":{},"text":{"14":{}},"component":{}}],["microsoft",{"_index":758,"title":{},"name":{},"text":{"13":{}},"component":{}}],["min",{"_index":371,"title":{},"name":{},"text":{"6":{}},"component":{}}],["mingw",{"_index":570,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["minim",{"_index":69,"title":{},"name":{},"text":{"2":{}},"component":{}}],["minimum",{"_index":318,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["minor",{"_index":605,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["minut",{"_index":296,"title":{},"name":{},"text":{"5":{}},"component":{}}],["miss",{"_index":721,"title":{},"name":{},"text":{"10":{}},"component":{}}],["model",{"_index":226,"title":{},"name":{},"text":{"4":{}},"component":{}}],["modifi",{"_index":593,"title":{},"name":{},"text":{"7":{}},"component":{}}],["modul",{"_index":185,"title":{},"name":{},"text":{"4":{},"5":{},"6":{}},"component":{}}],["more",{"_index":674,"title":{},"name":{},"text":{"8":{}},"component":{}}],["motiv",{"_index":445,"title":{"7-1":{}},"name":{},"text":{},"component":{}}],["msan",{"_index":592,"title":{},"name":{},"text":{"7":{}},"component":{}}],["msvc",{"_index":567,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["multi",{"_index":327,"title":{},"name":{},"text":{"6":{}},"component":{}}],["multipl",{"_index":204,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{}},"component":{}}],["n",{"_index":360,"title":{},"name":{},"text":{"6":{}},"component":{}}],["name",{"_index":205,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"13":{},"15":{}},"component":{}}],["navig",{"_index":683,"title":{},"name":{},"text":{"8":{}},"component":{}}],["necessari",{"_index":734,"title":{},"name":{},"text":{"11":{},"12":{},"14":{},"15":{}},"component":{}}],["need",{"_index":27,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"12":{}},"component":{}}],["never",{"_index":475,"title":{},"name":{},"text":{"7":{}},"component":{}}],["next",{"_index":166,"title":{"4-1":{},"5-1":{},"6-1":{},"7-11":{},"10-1":{},"11-1":{},"13-1":{},"14-1":{},"15-1":{}},"name":{},"text":{"4":{},"5":{},"6":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{}},"component":{}}],["non",{"_index":151,"title":{},"name":{},"text":{"3":{},"8":{}},"component":{}}],["normal",{"_index":585,"title":{},"name":{},"text":{"7":{}},"component":{}}],["notabl",{"_index":466,"title":{},"name":{},"text":{"7":{}},"component":{}}],["note",{"_index":637,"title":{},"name":{},"text":{"8":{},"13":{}},"component":{}}],["notic",{"_index":123,"title":{},"name":{},"text":{"3":{}},"component":{}}],["npm",{"_index":754,"title":{},"name":{},"text":{"13":{}},"component":{}}],["number",{"_index":385,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"10":{},"11":{},"14":{},"15":{}},"component":{}}],["object",{"_index":136,"title":{},"name":{},"text":{"3":{},"9":{}},"component":{}}],["obtain",{"_index":105,"title":{},"name":{},"text":{"3":{}},"component":{}}],["offici",{"_index":769,"title":{},"name":{},"text":{"14":{}},"component":{}}],["old",{"_index":556,"title":{},"name":{},"text":{"7":{}},"component":{}}],["on",{"_index":3,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"13":{}},"component":{}}],["onc",{"_index":334,"title":{},"name":{},"text":{"6":{}},"component":{}}],["open",{"_index":689,"title":{},"name":{},"text":{"9":{}},"component":{}}],["oper",{"_index":24,"title":{},"name":{},"text":{"2":{},"15":{}},"component":{}}],["option",{"_index":264,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["organ",{"_index":104,"title":{},"name":{},"text":{"3":{}},"component":{}}],["os",{"_index":788,"title":{},"name":{},"text":{"15":{}},"component":{}}],["otherwis",{"_index":162,"title":{},"name":{},"text":{"3":{},"4":{},"7":{}},"component":{}}],["out",{"_index":79,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["output",{"_index":271,"title":{"5-4":{},"7-14":{},"9-3":{},"10-4":{},"11-3":{},"12-2":{},"13-4":{},"14-3":{},"15-4":{}},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["outsid",{"_index":678,"title":{},"name":{},"text":{"8":{}},"component":{}}],["over",{"_index":745,"title":{},"name":{},"text":{"12":{}},"component":{}}],["overrid",{"_index":416,"title":{"7-8":{}},"name":{},"text":{"6":{},"13":{}},"component":{}}],["packag",{"_index":180,"title":{"10":{}},"name":{"10":{}},"text":{"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"13":{},"14":{},"15":{}},"component":{}}],["pair",{"_index":601,"title":{},"name":{},"text":{"7":{}},"component":{}}],["parallel",{"_index":398,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["paramet",{"_index":170,"title":{"4-3":{},"5-3":{},"6-3":{},"7-13":{},"8-2":{},"9-2":{},"10-3":{},"11-2":{},"12-1":{},"13-3":{},"14-2":{},"15-3":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["pars",{"_index":627,"title":{},"name":{},"text":{"8":{},"15":{}},"component":{}}],["part",{"_index":131,"title":{},"name":{},"text":{"3":{}},"component":{}}],["parti",{"_index":118,"title":{},"name":{},"text":{"3":{}},"component":{}}],["particular",{"_index":148,"title":{},"name":{},"text":{"3":{}},"component":{}}],["particularli",{"_index":188,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["pass",{"_index":403,"title":{},"name":{},"text":{"6":{},"13":{}},"component":{}}],["passthrough",{"_index":577,"title":{},"name":{},"text":{"7":{}},"component":{}}],["patch",{"_index":307,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["path",{"_index":251,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["pattern",{"_index":623,"title":{},"name":{},"text":{"8":{},"15":{}},"component":{}}],["per",{"_index":766,"title":{},"name":{},"text":{"13":{}},"component":{}}],["perform",{"_index":539,"title":{},"name":{},"text":{"7":{},"8":{},"9":{}},"component":{}}],["permiss",{"_index":99,"title":{},"name":{},"text":{"3":{}},"component":{}}],["permit",{"_index":116,"title":{},"name":{},"text":{"3":{}},"component":{}}],["person",{"_index":103,"title":{},"name":{},"text":{"3":{}},"component":{}}],["pkg",{"_index":720,"title":{},"name":{},"text":{"10":{}},"component":{}}],["placehold",{"_index":798,"title":{},"name":{},"text":{"15":{}},"component":{}}],["platform",{"_index":2,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"7":{},"14":{},"15":{}},"component":{}}],["polici",{"_index":765,"title":{},"name":{},"text":{"13":{}},"component":{}}],["pop",{"_index":676,"title":{},"name":{},"text":{"8":{}},"component":{}}],["possibl",{"_index":41,"title":{},"name":{},"text":{"2":{}},"component":{}}],["power",{"_index":61,"title":{},"name":{},"text":{"2":{}},"component":{}}],["pr",{"_index":9,"title":{},"name":{},"text":{"1":{}},"component":{}}],["prefix",{"_index":347,"title":{},"name":{},"text":{"6":{},"15":{}},"component":{}}],["prepar",{"_index":114,"title":{},"name":{},"text":{"3":{}},"component":{}}],["previou",{"_index":546,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["prioriti",{"_index":744,"title":{},"name":{},"text":{"12":{}},"component":{}}],["problem",{"_index":474,"title":{},"name":{},"text":{"7":{}},"component":{}}],["process",{"_index":485,"title":{},"name":{},"text":{"7":{}},"component":{}}],["process.arch",{"_index":802,"title":{},"name":{},"text":{"15":{}},"component":{}}],["process.platform",{"_index":800,"title":{},"name":{},"text":{"15":{}},"component":{}}],["processor",{"_index":139,"title":{},"name":{},"text":{"3":{},"6":{}},"component":{}}],["profil",{"_index":246,"title":{},"name":{},"text":{"4":{}},"component":{}}],["program",{"_index":263,"title":{"15":{}},"name":{"15":{}},"text":{"4":{},"6":{},"15":{}},"component":{}}],["program@mast",{"_index":783,"title":{},"name":{},"text":{"15":{}},"component":{}}],["project",{"_index":292,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"9":{},"10":{},"15":{}},"component":{}}],["prompt",{"_index":757,"title":{},"name":{},"text":{"13":{}},"component":{}}],["proper",{"_index":186,"title":{},"name":{},"text":{"4":{},"7":{},"11":{},"13":{},"14":{}},"component":{}}],["properli",{"_index":464,"title":{},"name":{},"text":{"7":{}},"component":{}}],["propos",{"_index":189,"title":{},"name":{},"text":{"4":{},"5":{}},"component":{}}],["provid",{"_index":45,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"11":{},"13":{},"14":{},"15":{}},"component":{}}],["purpos",{"_index":149,"title":{},"name":{},"text":{"3":{}},"component":{}}],["python",{"_index":776,"title":{},"name":{},"text":{"15":{}},"component":{}}],["qualiti",{"_index":86,"title":{},"name":{},"text":{"2":{}},"component":{}}],["quickli",{"_index":67,"title":{},"name":{},"text":{"2":{}},"component":{}}],["rang",{"_index":34,"title":{"7-7":{}},"name":{},"text":{"2":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["read",{"_index":739,"title":{},"name":{},"text":{"12":{}},"component":{}}],["reader",{"_index":682,"title":{},"name":{},"text":{"8":{}},"component":{}}],["reason",{"_index":473,"title":{},"name":{},"text":{"7":{}},"component":{}}],["recent",{"_index":557,"title":{},"name":{},"text":{"7":{}},"component":{}}],["recommend",{"_index":449,"title":{"7-5":{},"7-6":{},"7-8":{}},"name":{},"text":{"7":{}},"component":{}}],["reduc",{"_index":535,"title":{},"name":{},"text":{"7":{}},"component":{}}],["ref",{"_index":366,"title":{},"name":{},"text":{"6":{}},"component":{}}],["refer",{"_index":429,"title":{},"name":{},"text":{"6":{}},"component":{}}],["reflect",{"_index":615,"title":{},"name":{},"text":{"7":{}},"component":{}}],["refs/tag",{"_index":649,"title":{},"name":{},"text":{"8":{}},"component":{}}],["regex",{"_index":656,"title":{},"name":{},"text":{"8":{}},"component":{}}],["regular",{"_index":647,"title":{},"name":{},"text":{"8":{}},"component":{}}],["rel",{"_index":377,"title":{},"name":{},"text":{"6":{},"9":{}},"component":{}}],["releas",{"_index":243,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"11":{},"14":{},"15":{}},"component":{}}],["reliabl",{"_index":82,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["relwithdebinfo",{"_index":245,"title":{},"name":{},"text":{"4":{}},"component":{}}],["remov",{"_index":555,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["repeat",{"_index":311,"title":{},"name":{},"text":{"5":{}},"component":{}}],["replac",{"_index":547,"title":{},"name":{},"text":{"7":{}},"component":{}}],["report",{"_index":192,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"9":{}},"component":{}}],["report.md",{"_index":702,"title":{},"name":{},"text":{"9":{}},"component":{}}],["repositori",{"_index":44,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"14":{}},"component":{}}],["repres",{"_index":600,"title":{},"name":{},"text":{"7":{},"13":{}},"component":{}}],["reproduc",{"_index":109,"title":{},"name":{},"text":{"3":{}},"component":{}}],["requir",{"_index":249,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"10":{},"12":{},"13":{},"15":{}},"component":{}}],["resili",{"_index":55,"title":{},"name":{},"text":{"2":{}},"component":{}}],["respect",{"_index":738,"title":{},"name":{},"text":{"11":{},"12":{},"13":{},"14":{}},"component":{}}],["restrict",{"_index":128,"title":{},"name":{},"text":{"3":{}},"component":{}}],["result",{"_index":624,"title":{},"name":{},"text":{"8":{},"15":{}},"component":{}}],["retent",{"_index":424,"title":{},"name":{},"text":{"6":{}},"component":{}}],["retri",{"_index":729,"title":{},"name":{},"text":{"10":{}},"component":{}}],["revel",{"_index":488,"title":{},"name":{},"text":{"7":{}},"component":{}}],["robust",{"_index":81,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["root",{"_index":437,"title":{},"name":{},"text":{"6":{}},"component":{}}],["rout",{"_index":755,"title":{},"name":{},"text":{"13":{}},"component":{}}],["rtti",{"_index":265,"title":{},"name":{},"text":{"4":{}},"component":{}}],["run",{"_index":172,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{},"14":{},"15":{}},"component":{}}],["runner",{"_index":602,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["runner.o",{"_index":789,"title":{},"name":{},"text":{"15":{}},"component":{}}],["s",{"_index":324,"title":{},"name":{},"text":{"6":{}},"component":{}}],["safe",{"_index":525,"title":{},"name":{},"text":{"7":{}},"component":{}}],["safeti",{"_index":541,"title":{},"name":{},"text":{"7":{}},"component":{}}],["same",{"_index":661,"title":{},"name":{},"text":{"8":{}},"component":{}}],["sanit",{"_index":257,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["satisfi",{"_index":370,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["save",{"_index":294,"title":{},"name":{},"text":{"5":{},"9":{}},"component":{}}],["scan",{"_index":287,"title":{},"name":{},"text":{"5":{}},"component":{}}],["scenario",{"_index":42,"title":{},"name":{},"text":{"2":{}},"component":{}}],["scope",{"_index":630,"title":{},"name":{},"text":{"8":{}},"component":{}}],["script",{"_index":203,"title":{"7-10":{}},"name":{},"text":{"4":{},"5":{},"6":{},"14":{}},"component":{}}],["search",{"_index":796,"title":{},"name":{},"text":{"15":{}},"component":{}}],["season",{"_index":77,"title":{},"name":{},"text":{"2":{}},"component":{}}],["second",{"_index":503,"title":{},"name":{},"text":{"7":{}},"component":{}}],["secrets.github_token",{"_index":651,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["see",{"_index":706,"title":{},"name":{},"text":{"9":{}},"component":{}}],["select",{"_index":486,"title":{},"name":{},"text":{"7":{}},"component":{}}],["semicolon",{"_index":420,"title":{},"name":{},"text":{"6":{}},"component":{}}],["semver",{"_index":367,"title":{"7-7":{}},"name":{},"text":{"6":{},"7":{},"13":{},"15":{}},"component":{}}],["semver’",{"_index":736,"title":{},"name":{},"text":{"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["separ",{"_index":381,"title":{},"name":{},"text":{"6":{},"10":{},"13":{},"15":{}},"component":{}}],["set",{"_index":56,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["setup",{"_index":276,"title":{"11":{},"12":{},"13":{},"14":{},"15":{}},"name":{"11":{},"12":{},"13":{},"14":{},"15":{}},"text":{"5":{},"7":{},"10":{},"11":{},"13":{},"14":{},"15":{}},"component":{}}],["shall",{"_index":154,"title":{},"name":{},"text":{"3":{}},"component":{}}],["shallow",{"_index":642,"title":{},"name":{},"text":{"8":{}},"component":{}}],["share",{"_index":236,"title":{},"name":{},"text":{"4":{},"6":{},"7":{}},"component":{}}],["shoulder",{"_index":480,"title":{},"name":{},"text":{"7":{}},"component":{}}],["significantli",{"_index":495,"title":{},"name":{},"text":{"7":{}},"component":{}}],["simpl",{"_index":694,"title":{},"name":{},"text":{"9":{}},"component":{}}],["simpli",{"_index":545,"title":{},"name":{},"text":{"7":{}},"component":{}}],["simplifi",{"_index":484,"title":{},"name":{},"text":{"7":{},"15":{}},"component":{}}],["singl",{"_index":608,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["small",{"_index":467,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["softwar",{"_index":90,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["sole",{"_index":133,"title":{},"name":{},"text":{"3":{}},"component":{}}],["someon",{"_index":560,"title":{},"name":{},"text":{"7":{}},"component":{}}],["sourc",{"_index":138,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"14":{}},"component":{}}],["spec",{"_index":737,"title":{},"name":{},"text":{"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["special",{"_index":591,"title":{},"name":{},"text":{"7":{}},"component":{}}],["specif",{"_index":48,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"11":{},"12":{},"14":{},"15":{}},"component":{}}],["specifi",{"_index":184,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"12":{},"15":{}},"component":{}}],["spread",{"_index":620,"title":{},"name":{},"text":{"7":{}},"component":{}}],["src/main.cpp",{"_index":431,"title":{},"name":{},"text":{"6":{}},"component":{}}],["stand",{"_index":479,"title":{},"name":{},"text":{"7":{}},"component":{}}],["standalon",{"_index":468,"title":{},"name":{},"text":{"7":{}},"component":{}}],["standard",{"_index":262,"title":{},"name":{},"text":{"4":{},"6":{},"7":{}},"component":{}}],["start",{"_index":78,"title":{},"name":{},"text":{"2":{}},"component":{}}],["startswith(github.ref",{"_index":648,"title":{},"name":{},"text":{"8":{}},"component":{}}],["statement",{"_index":125,"title":{},"name":{},"text":{"3":{}},"component":{}}],["step",{"_index":167,"title":{"4-1":{},"5-1":{},"6-1":{},"7-11":{},"10-1":{},"11-1":{},"13-1":{},"14-1":{},"15-1":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{}},"component":{}}],["steps.boost",{"_index":211,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["steps.cpp",{"_index":507,"title":{},"name":{},"text":{"7":{}},"component":{}}],["steps.packag",{"_index":344,"title":{},"name":{},"text":{"6":{}},"component":{}}],["steps.setup",{"_index":221,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"10":{}},"component":{}}],["store",{"_index":422,"title":{},"name":{},"text":{"6":{},"8":{},"9":{}},"component":{}}],["strategi",{"_index":512,"title":{},"name":{},"text":{"7":{}},"component":{}}],["strategy.matrix.includ",{"_index":505,"title":{},"name":{},"text":{"7":{}},"component":{}}],["streamlin",{"_index":80,"title":{},"name":{},"text":{"2":{}},"component":{}}],["string",{"_index":368,"title":{},"name":{},"text":{"6":{},"7":{},"13":{}},"component":{}}],["subdirectori",{"_index":310,"title":{},"name":{},"text":{"5":{}},"component":{}}],["subject",{"_index":120,"title":{},"name":{},"text":{"3":{}},"component":{}}],["submit",{"_index":8,"title":{},"name":{},"text":{"1":{}},"component":{}}],["submodul",{"_index":308,"title":{},"name":{},"text":{"5":{}},"component":{}}],["subrang",{"_index":579,"title":{},"name":{},"text":{"7":{}},"component":{}}],["subset",{"_index":487,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["such",{"_index":21,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"7":{},"8":{}},"component":{}}],["suffix",{"_index":384,"title":{},"name":{},"text":{"6":{}},"component":{}}],["suggest",{"_index":594,"title":{},"name":{},"text":{"7":{}},"component":{}}],["summari",{"_index":597,"title":{},"name":{},"text":{"7":{},"8":{},"9":{}},"component":{}}],["super",{"_index":306,"title":{},"name":{},"text":{"5":{}},"component":{}}],["support",{"_index":28,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["svg",{"_index":688,"title":{},"name":{},"text":{"9":{}},"component":{}}],["syntax",{"_index":326,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["system",{"_index":25,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"14":{},"15":{}},"component":{}}],["systemat",{"_index":492,"title":{},"name":{},"text":{"7":{}},"component":{}}],["tag",{"_index":660,"title":{},"name":{},"text":{"8":{}},"component":{}}],["take",{"_index":181,"title":{},"name":{},"text":{"4":{},"14":{}},"component":{}}],["tar.gz",{"_index":793,"title":{},"name":{},"text":{"15":{}},"component":{}}],["target",{"_index":333,"title":{},"name":{},"text":{"6":{},"12":{}},"component":{}}],["task",{"_index":17,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["term",{"_index":538,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{}},"component":{}}],["test",{"_index":11,"title":{"7-2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"14":{}},"component":{}}],["tests/build",{"_index":698,"title":{},"name":{},"text":{"9":{}},"component":{}}],["text",{"_index":671,"title":{},"name":{},"text":{"8":{}},"component":{}}],["thank",{"_index":646,"title":{},"name":{},"text":{"8":{}},"component":{}}],["there’",{"_index":1,"title":{},"name":{},"text":{"1":{},"5":{}},"component":{}}],["third",{"_index":117,"title":{},"name":{},"text":{"3":{}},"component":{}}],["thread",{"_index":259,"title":{},"name":{},"text":{"4":{}},"component":{}}],["through",{"_index":761,"title":{},"name":{},"text":{"13":{}},"component":{}}],["thu",{"_index":672,"title":{},"name":{},"text":{"8":{}},"component":{}}],["time",{"_index":267,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"9":{},"10":{}},"component":{}}],["titl",{"_index":150,"title":{},"name":{},"text":{"3":{}},"component":{}}],["token",{"_index":650,"title":{},"name":{},"text":{"8":{}},"component":{}}],["tool",{"_index":57,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"10":{},"15":{}},"component":{}}],["toolchain",{"_index":343,"title":{},"name":{},"text":{"6":{},"10":{}},"component":{}}],["toolset",{"_index":214,"title":{},"name":{},"text":{"4":{},"6":{},"7":{}},"component":{}}],["tort",{"_index":161,"title":{},"name":{},"text":{"3":{}},"component":{}}],["trace",{"_index":195,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["traces.json",{"_index":701,"title":{},"name":{},"text":{"9":{}},"component":{}}],["track",{"_index":563,"title":{},"name":{},"text":{"7":{}},"component":{}}],["transmit",{"_index":113,"title":{},"name":{},"text":{"3":{}},"component":{}}],["tri",{"_index":391,"title":{},"name":{},"text":{"6":{}},"component":{}}],["trigger",{"_index":529,"title":{},"name":{},"text":{"7":{}},"component":{}}],["triplet",{"_index":716,"title":{},"name":{},"text":{"10":{}},"component":{}}],["true",{"_index":346,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["tsan",{"_index":234,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["type",{"_index":219,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{}},"component":{}}],["typic",{"_index":441,"title":{},"name":{},"text":{"6":{}},"component":{}}],["ubsan",{"_index":232,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["ubuntu",{"_index":506,"title":{},"name":{},"text":{"7":{}},"component":{}}],["ultim",{"_index":763,"title":{},"name":{},"text":{"13":{}},"component":{}}],["unconvent",{"_index":667,"title":{},"name":{},"text":{"8":{}},"component":{}}],["undefin",{"_index":258,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["union",{"_index":290,"title":{},"name":{},"text":{"5":{}},"component":{}}],["unless",{"_index":132,"title":{},"name":{},"text":{"3":{},"7":{}},"component":{}}],["unlik",{"_index":382,"title":{},"name":{},"text":{"6":{}},"component":{}}],["unnecessari",{"_index":668,"title":{},"name":{},"text":{"8":{}},"component":{}}],["unset",{"_index":640,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["unspecifi",{"_index":728,"title":{},"name":{},"text":{"10":{}},"component":{}}],["up",{"_index":176,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["updat",{"_index":317,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["upload",{"_index":200,"title":{},"name":{},"text":{"4":{},"6":{},"9":{}},"component":{}}],["url",{"_index":785,"title":{},"name":{},"text":{"15":{}},"component":{}}],["us",{"_index":58,"title":{"7-10":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["usag",{"_index":447,"title":{"7-3":{}},"name":{},"text":{},"component":{}}],["user",{"_index":91,"title":{},"name":{},"text":{"2":{},"4":{},"7":{}},"component":{}}],["usr/loc",{"_index":794,"title":{},"name":{},"text":{"15":{}},"component":{}}],["usual",{"_index":175,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{}},"component":{}}],["v",{"_index":663,"title":{},"name":{},"text":{"8":{}},"component":{}}],["valid",{"_index":250,"title":{},"name":{},"text":{"4":{},"6":{},"13":{}},"component":{}}],["valu",{"_index":304,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"12":{}},"component":{}}],["vari",{"_index":530,"title":{},"name":{},"text":{"7":{}},"component":{}}],["variabl",{"_index":378,"title":{"7-4":{}},"name":{},"text":{"6":{},"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["variant",{"_index":217,"title":{},"name":{},"text":{"4":{},"7":{},"8":{}},"component":{}}],["variant2",{"_index":213,"title":{},"name":{},"text":{"4":{},"5":{}},"component":{}}],["varieti",{"_index":50,"title":{},"name":{},"text":{"2":{}},"component":{}}],["variou",{"_index":18,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["vcpkg",{"_index":281,"title":{},"name":{},"text":{"5":{},"10":{}},"component":{}}],["vendor",{"_index":418,"title":{},"name":{},"text":{"6":{}},"component":{}}],["verbos",{"_index":675,"title":{},"name":{},"text":{"8":{}},"component":{}}],["veri",{"_index":470,"title":{},"name":{},"text":{"7":{}},"component":{}}],["version",{"_index":94,"title":{},"name":{},"text":{"3":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["viral",{"_index":458,"title":{},"name":{},"text":{"7":{}},"component":{}}],["visual",{"_index":759,"title":{},"name":{},"text":{"13":{}},"component":{}}],["want",{"_index":562,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["warn",{"_index":337,"title":{},"name":{},"text":{"6":{}},"component":{}}],["warranti",{"_index":141,"title":{},"name":{},"text":{"3":{}},"component":{}}],["well",{"_index":762,"title":{},"name":{},"text":{"13":{}},"component":{}}],["we’r",{"_index":478,"title":{},"name":{},"text":{"7":{}},"component":{}}],["whatev",{"_index":183,"title":{},"name":{},"text":{"4":{}},"component":{}}],["whenev",{"_index":607,"title":{},"name":{},"text":{"7":{}},"component":{}}],["whether",{"_index":76,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"7":{},"10":{},"12":{},"15":{}},"component":{}}],["whitespac",{"_index":722,"title":{},"name":{},"text":{"10":{},"13":{}},"component":{}}],["whole",{"_index":130,"title":{},"name":{},"text":{"3":{},"7":{}},"component":{}}],["whose",{"_index":654,"title":{},"name":{},"text":{"8":{}},"component":{}}],["wide",{"_index":33,"title":{},"name":{},"text":{"2":{}},"component":{}}],["window",{"_index":790,"title":{},"name":{},"text":{"15":{}},"component":{}}],["without",{"_index":140,"title":{},"name":{},"text":{"3":{},"6":{},"7":{}},"component":{}}],["work",{"_index":5,"title":{},"name":{},"text":{"1":{},"3":{},"7":{}},"component":{}}],["workflow",{"_index":65,"title":{"4":{},"6":{}},"name":{"4":{},"6":{}},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["workflow@mast",{"_index":208,"title":{},"name":{},"text":{"4":{},"6":{}},"component":{}}],["workspac",{"_index":443,"title":{},"name":{},"text":{"6":{}},"component":{}}],["write",{"_index":38,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["x64",{"_index":741,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{}}],["x86",{"_index":573,"title":{},"name":{},"text":{"7":{},"12":{}},"component":{}}],["you'v",{"_index":524,"title":{},"name":{},"text":{"7":{}},"component":{}}],["you’r",{"_index":190,"title":{},"name":{},"text":{"4":{}},"component":{}}],["zip",{"_index":792,"title":{},"name":{},"text":{"15":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"If there’s a platform where one of the actions does not work, feel free to submit a PR with adaptations and tests.","title":"Contribute","component":"cpp-actions","version":"master","name":"contribute","url":"/cpp-actions/contribute.html","titles":[]},"2":{"id":2,"text":"Testing C++ libraries can be a challenging task, as there are various factors to consider such as the different compilers, operating systems, and architectures that the library may need to support. Furthermore, C++ itself is a complex language with a wide range of features, making it difficult to write comprehensive tests that cover all possible scenarios. To address these challenges, this repository provides a collection of GitHub actions that are specifically designed to test C++ libraries in a variety of environments. These actions aim to create a common and resilient set of tools that can be used to test libraries across a wide range of platforms and configurations. By leveraging the power of GitHub Actions, these C++ testing tools can be easily integrated into a development workflow, allowing developers to quickly and efficiently test their libraries with minimal effort. This can help to ensure that the library is functioning correctly and that it is compatible with a wide range of platforms and configurations. Whether you are a seasoned C++ developer or just starting out, these testing tools can help you to streamline your development workflow and ensure that your library is robust and reliable. With a comprehensive set of testing tools at your disposal, you can focus on writing high-quality code and delivering great software to your users.","title":"C++ Actions","component":"cpp-actions","version":"master","name":"index","url":"/cpp-actions/index.html","titles":[]},"3":{"id":3,"text":"Boost Software License - Version 1.0 - August 17th, 2003 Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and accompanying documentation covered by this license (the \"Software\") to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software is furnished to do so, all subject to the following: The copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License","component":"cpp-actions","version":"master","name":"license","url":"/cpp-actions/license.html","titles":[]},"4":{"id":4,"text":"This action runs a complete B2 workflow from Boost source files. If you are developing a boost library, this is usually the next step in your workflow after setting up a C++ compiler and fetching dependencies with Install Packages. It takes the Boost source directory and does whatever it needs to test the specified modules. This includes compiling b2 if needed and generating a proper user-config.jam file. This action is particularly useful for Boost library proposals. If you’re library also supports CMake, the next step in your workflow should usually be CMake Workflow. Otherwise, the next step in your workflow should usually be the generation of reports, with tools such as the Create Flamegraph (when matrix.time-trace) and Create Changelog (usually in another workflow job). You can also include customs steps to upload coverage reports (when matrix.coverage). If your b2 workflow provides CMake installation and configuration scripts, it is also usual to include multiple CMake workflow steps as integration tests for CMake. steps: - name: B2 Workflow uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: ${{ steps.boost-clone.outputs.boost-dir }} modules: variant2 toolset: ${{ matrix.b2-toolset }} build-variant: ${{ matrix.build-type }} cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx || '' }} cxxstd: ${{ matrix.cxxstd }} address-model: ${{ (matrix.x86 && '32') || '64' }} asan: ${{ matrix.asan }} ubsan: ${{ matrix.ubsan }} tsan: ${{ matrix.tsan }} shared: ${{ matrix.shared }} Parameter Description Default source-dir The boost source directory. . build-variant Custom build variants. If the provided variant is a CMake build-type, the argument is mapped to the equivalent b2 variant: - Release → release - Debug → debug - RelWithDebInfo → profile - → lowercase . modules The list of modules we should test. ⚠️ This parameter is required. toolset Toolset name. address-model Valid b2 list of address models. cxx Path to C++ compiler. cxxflags Extra C++ compiler flags. ccflags Extra C compiler flags. shared Build shared libraries. asan Enable address-sanitizer. ubsan Enable undefined-sanitizer. tsan Enable thread-sanitizer. coverage Enable coverage. linkflags Extra linker flags. cxxstd List of standards with which b2 will build and test the program. threading b2 threading option. rtti Enables or disables run-time type information. trace-commands Trace commands executed by the workflow. false","title":"B2 Workflow","component":"cpp-actions","version":"master","name":"b2-workflow","url":"/cpp-actions/actions/b2-workflow.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3}]},"5":{"id":5,"text":"This action clones the Boost source directory, attempting to get it from the cache first. Only the specified modules are cloned and cached. This is usually the next step in your workflow after setting up a C++ compiler with Setup C++ or installing other dependencies with Install Packages. Cloning boost is useful when one wants the always use the latest version of boost in a library or is writing a boost proposal. For other use cases, individual boost modules can be fetched with vcpkg in Install Packages or directly included in a package manager manifest. Besides the explicitly specified list of modules, the action can also scan directories for boost dependencies to implicitly determine what modules should be cloned. The union of the implicitly and explicitly specified modules is cloned. Caching is based only on these dependencies. For a project with about 5 boost dependencies, caching saves about 4 minutes in the workflow. When there’s no cache, the scanning scripting saves us about 3 minutes. After cloning boost modules for your C++ project, the next step in your workflow should usually be CMake Workflow. If you are developing a Boost library, it is also usual for the next step to be the B2 Workflow. steps: - name: Clone Boost.Variant2 uses: alandefreitas/cpp-actions/boost-clone@master id: boost-clone with: branch: master modules: variant2 Parameter Description Default boost-dir The boost directory. The default value assumes boost is in-source. branch Branch of the super-project. master patches Libraries used to patch the boost installation. ⚠️ This parameter is required. modules The boost submodules we need to clone. modules-scan-paths Additional modules subdirectory to scan; can be repeated. modules-exclude-paths Additional modules subdirectory to scan; can be repeated. test scan-modules-dir An independent directory we should scan for boost dependencies to clone. scan-modules-ignore List of modules that should be ignored in scan-modules. trace-commands Trace commands executed by the workflow. false Output Description boost-dir The absolute path to the boost source files.","title":"Boost Clone","component":"cpp-actions","version":"master","name":"boost-clone","url":"/cpp-actions/actions/boost-clone.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4}]},"6":{"id":6,"text":"This action runs a complete CMake workflow from source files. This is usually the next step in your workflow after setting up a C++ compiler and fetching dependencies with Install Packages. A workflow is composed of the following steps: Configure Build Test Install The action also sets up the environment for the workflow: It validates the CMake version installed in the system, Updates CMake if the library has a different minimum version, Identifies what features the current CMake version supports, and Runs a complete cmake workflow The action will adjusts the parameters as needed according to the features that CMake version supports. For instance, If the CMake version does not support the -S …​ -B …​ syntax, the action will create the build directory and run the configuration step from there. If the specified or default generator is multi-config, CMAKE_CONFIGURATION_TYPES will be used instead of CMAKE_BUILD_TYPE, since the later is ignored by these generators. If the CMake version does not support the cmake --install syntax, the cmake --build --target install will be use instead. If the CMake version does not support multiple targets in the cmake --build syntax, the action will run the build step once for each target. The action also creates GitHub annotations when warnings or errors are emitted at any of these steps. This includes annotations for CMake errors at the configure step and build errors emitted from the compiler at the build step. After running the a complete CMake workflow for your project, the next step in your workflow should usually be the generation of reports, with tools such as the Create Flamegraph (when matrix.time-trace) and Create Changelog (usually in another workflow job). You can also include customs steps to upload coverage reports (when matrix.coverage). If your project provides CMake installation and configuration scripts, it is also usual to include multiple CMake workflow steps as integration tests for CMake. steps: - name: CMake Workflow uses: alandefreitas/cpp-actions/cmake-workflow@master with: cmake-version: '>=3.20' source-dir: tests generator: ${{ matrix.generator }} generator-toolset: ${{ matrix.generator-toolset }} toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }} build-type: ${{ matrix.build-type }} run-tests: true install-prefix: .local cxxstd: ${{ matrix.cxxstd }} cc: ${{ steps.setup-cpp.outputs.cc || matrix.cc }} ccflags: ${{ matrix.ccflags }} cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx }} cxxflags: ${{ matrix.cxxflags }} shared: ${{ matrix.shared }} extra-args: \"${{ ( !matrix.no-deps && format('-D BOOST_SRC_DIR=\\\"{0}\\\"', steps.boost-clone.outputs.boost-dir)\\ \\ ) || '' }} \\n${{ ( matrix.no-deps && '-D CPP_ACTIONS_NO_DEPS=ON' ) || '' }}\\n\" export-compile-commands: ${{ matrix.time-trace }} package: true package-artifact: ${{ matrix.is-main }} ref-source-dir: . Parameter Description Default cmake-path The cmake executable. cmake cmake-version A semver range string with the cmake versions supported by this workflow. If the existing version in the environment does not satisfy this requirement, the action install the min CMake version that satisfies it. This should usually match the cmake_minimum_required defined in your CMakeLists.txt file. * source-dir Directory for the source files. . build-dir Directory for the binaries relative to the source directory. build cc Path to C compiler. If the input is not specified, the action will use the compiler defined by the environment variable CC. If the environment variable is not specified, the action will use the default compiler as identified by CMake. ccflags Flags to be used with the C compiler. If the input is not specified, the action will use the flags defined by the environment variable CFLAGS. If the environment variable is not specified, the action will use the default flags as identified by CMake. cxx Path to C++ compiler. If the input is not specified, the action will use the compiler defined by the environment variable CXX. If the environment variable is not specified, the action will use the default compiler as identified by CMake. cxxflags Flags to be used with the C++ compiler. If the input is not specified, the action will use the flags defined by the environment variable CXXFLAGS. If the environment variable is not specified, the action will use the default flags as identified by CMake. cxxstd Comma-separated list of standards with which cmake will build and test the program. If the input is not specified, the action will use the standards defined by the environment variable CXXSTD. If the environment variable is not specified, the action will use the default standards as identified by CMake. Unlike CMake, which can only build with one standard at a time, this action will iteratively build and test with multiple standards. When multiple standards are used, the build directory will be suffixed with the standard number with the exception of the latest standard. shared Determines if add_library should create shared libraries (BUILD_SHARED_LIBS). If the input is not specified, the action will use the value defined by the environment variable BUILD_SHARED_LIBS. If the environment variable is not specified, the action will use the default value as identified by CMake (OFF). toolchain Path to toolchain. If the input is not specified, the action will use the toolchain defined by the environment variable CMAKE_TOOLCHAIN_FILE. If the environment variable is not specified, the action will use the default toolchain as identified by CMake. generator Generator name. If not specified, the action will use the generator defined by the environment variable CMAKE_GENERATOR. If the environment variable is not specified, the action will try to use the default generator for the platform. generator-toolset Toolset specification for the generator, if supported. If not specified, the action will use the toolset defined by the environment variable CMAKE_GENERATOR_TOOLSET. If the environment variable is not specified, the action will use the default toolset for the generator. build-type Build type. If not specified, the action will use the build type defined by the environment variable CMAKE_BUILD_TYPE. If the environment variable is not specified, the action will use Release as the build type. If all values are empty, the action will try to use the default generator for the platform. If the generator is multi-config, this values will be applies to the CMAKE_CONFIGURATION_TYPES CMake options instead of CMAKE_BUILD_TYPE. build-target Targets to build instead of the default target. extra-args Extra arguments to cmake configure command. export-compile-commands Set CMAKE_EXPORT_COMPILE_COMMANDS=ON in the configure step. If the input is not specified, the action will use the value defined by the environment variable CMAKE_EXPORT_COMPILE_COMMANDS. If the environment variable is not specified, the action will use the default value as identified by CMake (OFF). install-prefix Path where the library should be installed. If the input is not specified, the action will use the path defined by the environment variable CMAKE_INSTALL_PREFIX. If the environment variable is not specified, the action will use the default path as identified by CMake. jobs Number of jobs to use in parallel builds. If the input is not specified, the action will use the value defined by the environment variable CMAKE_JOBS. If the environment variable is also not specified, the action will use the number of processors available in the system. run-tests Whether we should run tests. If the input is not specified, the action will use the value defined by the environment variable CMAKE_RUN_TESTS. If the environment variable is also not specified, the action will attempt to run tests but will not fail if there are no tests. When the value is true or false, the action will also set the configure-tests-flag to ON or OFF. When the value is undefined, the configure-tests-flag is ignored. configure-tests-flag Specify the flag to be passed to cmake to enable/disable tests in the configuration step. By default this is BUILD_TESTING, which is an option automatically created by the CTest module. If the input contains a \"=\", the action will use the value as is. BUILD_TESTING test-all-cxxstd Whether we should run tests for all C++ standards defined by cxxstd. If the input is not specified, the action will only run the tests with the last value defined in cxxstd. false install Whether we should install the library. The library is only installed once in the install-prefix using the latest standard in cxxstd. If the input is not specified, the action will use the value defined by the environment variable CMAKE_INSTALL. If the environment variable is also not specified, the action will attempt to install the library but will not fail if the library cannot installed. install-all-cxxstd Whether we should install the library for all C++ standards defined by cxxstd. If the input is not specified, the action will only install the library with the last value defined in cxxstd. false package Whether we should run cpack with the specified package-generators after the install step. If the input is not specified, the action will use the value defined by the environment variable CMAKE_PACKAGE. If the environment variable is also not specified, the action will attempt to run cpack but will not fail if cpack cannot be run. false package-all-cxxstd Whether we should run cpack for all C++ standards defined by cxxstd. If the input is not specified, the action will only run cpack with the last value defined in cxxstd. false package-name The name of the package (or application). If not specified, CMake will default to the project name. package-dir The directory in which the packages are generated by cpack. If it is not set then this will default to the build dir determined by CPACK_PACKAGE_DIRECTORY, which may be defined in CMakeLists.txt, a CPack config file or from the cpack command line option -B. If package-dir is set, it overrides the value found in the config file. package-vendor Override or define CPACK_PACKAGE_VENDOR. package-generators A semicolon-separated list of generator names used by cpack. If not specified, the action will use the generators defined by the environment variable CPACK_GENERATOR. If this variable is not set, the action will attempt to generate the package with all CPack generators available to CMake. package-artifact Whether the packages generated with CPack should be stored as action artifacts. If the input is not specified, the action will use the value defined by the environment variable CMAKE_PACKAGE_ARTIFACT. If the environment variable is also not specified, the action will store the packages as artifacts. package-retention-days The number of days to keep the packages generated with CPack as action artifacts. 10 create-annotations Create github annotations for errors and warnings at all steps. If the input is not specified, the action will use the value defined by the environment variable CMAKE_CREATE_ANNOTATIONS. If the environment variable is also not specified, the action will create annotations. ref-source-dir A reference base directory for annotations. For instance, if there is an error in the /home/user/project/src/main.cpp file, the action will create an annotation referring to the repository path src/main.cpp. If the reference source directory is /home/user/project/src, the action will create an annotation referring to main.cpp instead because any annotation filename will be relative to this directory. If no value is provided, the environment variable GITHUB_WORKSPACE will be used as the reference source directory. This means all annotations will be relative to the repository root if actions/checkout has been called without specifying a custom path option. Changing this value is typically useful when the repository being tested is not the workspace directory, in which we need to make annotations relative to some other directory. In most cases, the default option should be enough. trace-commands Trace commands executed by the workflow. false","title":"CMake Workflow","component":"cpp-actions","version":"master","name":"cmake-workflow","url":"/cpp-actions/actions/cmake-workflow.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3}]},"7":{"id":7,"text":"Testing C++ libraries can be a challenging and time-consuming task, especially when considering the various compiler versions, error behaviors, and platform dependencies. A library that works flawlessly with one compiler will almost certainly fail to build with a different compiler version, not mention different compilers and platforms. This has a viral effect with enormous implications to the C++ ecosystem. If your library doesn’t properly test and support all platforms in its manifest, this support is also broken for any projects depending on your library. With some notable exceptions, this is currently the case with most small standalone libraries one can find on GitHub. These are libraries that could be very useful otherwise, so avoid dependencies altogether is not a reasonable to the problem, since we will never get anywhere meaningful if we’re not able to stand to the shoulder of giants. The C Matrix Action is designed to automate the generation of a comprehensive test matrix for your C libraries given their requirements. It simplifies the process of defining the contract of what platforms your library supports and testing your project across a proper selected subset of revelant compiler versions and platforms. With this action, you can define a set of requirements to test your C++ library. It will then generate a test matrix by combining the specified requirements into a fractional factorial design to ensure all proper combinations are tested in a systematic manner. This approach significantly increases the chances of catching compatibility issues early on and helps in delivering a robust and reliable library to users. The action should be run as extra initial “setup” job in your workflow. The job will run the action and output matrix, which is a JSON string containing the whole matrix. This matrix should be output of your first setup job. In your second build job, you can attribute the entire matrix to the strategy.matrix.include parameter and create your workflow as usual with the parameters from the matrix: jobs: cpp-matrix: runs-on: ubuntu-latest name: Generate Test Matrix outputs: matrix: ${{ steps.cpp-matrix.outputs.matrix }} steps: - name: Generate Test Matrix uses: alandefreitas/cpp-actions/cpp-matrix@master id: cpp-matrix with: standards: '>=11' build: needs: cpp-matrix strategy: fail-fast: false matrix: include: fromJSON(needs.cpp-matrix.outputs.matrix) # use matrix entries name: ${{ matrix.name }} runs-on: ${{ matrix.runs-on }} container: ${{ matrix.container }} steps: - name: Clone library uses: actions/checkout@v3 - name: Setup C++ Compiler uses: alandefreitas/cpp-actions/setup-cpp@master id: setup-cpp with: compiler: ${{ matrix.compiler }} version: ${{ matrix.version }} - name: CMake Workflow uses: ./cmake-workflow with: cc: ${{ steps.setup-cpp.outputs.cc || matrix.cc }} cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx }} cxxstd: ${{ matrix.cxxstd }} cxxflags: ${{ matrix.cxxstd }} # And you've safely tested your C++ library just like that... In some cases, it might be useful to test different matrices based on the conditions of the workflow. These conditions might be the event_type and the types of files changed in the commit triggering the workflow. The workflows might vary between disabling tests for changes that don’t affect these certain files, running a reduced subset of tests for less important changes, or enabling extra tests, such as documentation tests in case only these files have been changed. This might be useful in terms of performance, costs, and safety. While this is hard to achieve with hard-coded matrices, this action makes variable matrices very easy to achieve. Simply define a previous step to determine the matrix parameters and use it to generate the matrix. For instance, the compilers parameters could be replaced from gcc >=4.8 to gcc >=4.8 =6.0 =11 to only test intermediary GCC versions >=6.0 =3.8, which might test your library with too many versions of clang. You could remove intermediary versions of clang with the range clang >=3.8 =10, which ensure old versions are recent versions are covered, while eliminating intermediary versions. Also when a bug is found in a specific version, semver ranges can also help. Consider someone has reported a bug in GCC 8.1, and you want to keep track of that. The semver range gcc >=4.8 =10 would ensure version GCC8.1 specifically, and not any other version is the range >=8.0.0 =11' compilers: 'gcc >=4.8 =9 clang >=3.8 11 msvc >=14 apple-clang * mingw * clang-cl * ' latest-factors: 'gcc Coverage TSan UBSan Fetch-Content clang Fetch-Content ' factors: 'gcc Asan Shared No-Deps msvc Shared x86 clang Time-Trace mingw Shared ' Parameter Description Default compilers A list of compilers to be tested. Each compiler can be complemented with its semver version requirements to be tested. When the compiler version requirements are provided, the action will break the requirements into subsets of major versions to be tested. When no version is provided, the '*' semver requirement is assumed. The action can identifies subsets of compiler versions for GCC, Clang, and MSVC. For any other compilers, the version requirements will passthrough to the output. gcc >=4.8 clang >=3.8 msvc >=14 apple-clang * mingw * clang-cl * standards A semver range describing what C standards should be tested. The compiler ranges are adjusted to only include compilers that support any subrange of these requirements. These requirements can include C standards as 2 or 4 digits versions, such as 11, 2011, 98, or 1998. 2 digit versions are normalized into the 4 digits form so that 11 > 98 (2011 > 1998). >=11 max-standards The maximum number of standards to be tested with each compiler. For instance, if 'max-standards' is 2 and the compiler supports '11,14,17,20,23' given the in the standard requirements, the standards 20,23 will be tested by this compiler. 2 latest-factors The factors to be tested with the latest versions of each compiler. For each factor in this list, the entry with the latest version of a compiler will be duplicated with an entry that sets this factor to true. Other entries will also include this factor as false. The following factors are considered special: 'asan', 'ubsan', 'msan', 'tsan', and 'coverage'. When these factors are defined in an entry, its 'ccflags', 'cxxflags', and 'linkflags' value are also modified to include the suggested flags for factor. gcc Coverage TSan UBSan factors The factors to be tested with other versions of each compiler. Each factor in this list will be injected into a version of the compiler that is not the latest version. An entry with the latest version of the compiler will be duplicated with this factor if there are no entries left to inject the factor. Other entries will also include this factor as false. gcc Asan Shared msvc Shared x86 clang Time-Trace mingw Shared generate-summary Generate summary with the complete matrix. true trace-commands Trace commands executed by the action. false Output Description matrix The test matrix is an array of dictionaries, where each entry represents a combination of compiler version and factors to be tested. Each entry in the test matrix dictionary contains the following key-value pairs: - name: A suggested name for the job testing this entry - runs-on: A suggested github runner image name for the job testing this entry - container: A suggested docker container for the job testing this entry - compiler: Specifies the name of the compiler to be used for the test configuration. This can be used as input to the setup-cpp action. - version: Specifies the version requirements of the compiler to be used for the test configuration. This can be used as input to the setup-cpp action. - major, minor, patch: Specifies the version components of the compiler whenever the whole range includes a single major, minor, or patch. - has_major, has_minor, has_patch: Determines if the corresponding version component of the compiler is available representing all versions in the range. - is-latest: Specifies whether the entry version requirement is the latest version among the test configurations. - is-main: Specifies whether the entry version requirement is the latest version among the test configurations without any factors applied. - is-earliest: Specifies whether the entry version requirement is the earliest version among the test configurations. - cxx: The usual name of the C++ compiler executable. If using the setup-cpp action, its output should be used instead. - cc: The usual name of the C compiler executable. If using the setup-cpp action, its output should be used instead. - cxxstd: A list of standards that should be tested with this compiler version. This option considers the max-standards latest standards supported by each compiler in its subrange of standards. - latest-cxxstd: The last standard listed in cxxstd as a convenience variable - b2-toolset: The usual name of the toolset to be used in a b2 workflow. - generator: A CMake generator recommended to run the CMake workflow. - build-type: A build type recommended to test this entry. This is usually Release, unless some special factor that requires Debug is defined. - ccflags: The recommended C flags to be used by this entry. It reflects the values of special factors, such as sanitizers, coverage, and time-trace. - cxxflags: The recommended C++ flags to be used by this entry. It reflects the values of special factors, such as sanitizers, coverage, and time-trace. - install: The recommended packages to be installed before running the workflow. This includes packages such as build-essential for ubuntu containers and lcov for coverage entries. - …​: Provides additional factors or attributes associated with the test configuration as defined by the factors and latest-factors inputs. These usually include variant build configurations spread among the entries, such as asan, coverage, and shared libraries.","title":"C++ Matrix","component":"cpp-actions","version":"master","name":"cpp-matrix","url":"/cpp-actions/actions/cpp-matrix.html","titles":[{"text":"Motivation","hash":"_motivation","id":1},{"text":"C++ Test Matrix","hash":"_c_test_matrix","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Variable matrices","hash":"_variable_matrices","id":4},{"text":"About matrix recommendations","hash":"_about_matrix_recommendations","id":5},{"text":"Ignoring recommendations","hash":"_ignoring_recommendations","id":6},{"text":"Adjusting semver ranges","hash":"_adjusting_semver_ranges","id":7},{"text":"Overriding recommendations","hash":"_overriding_recommendations","id":8},{"text":"Auxiliary keys","hash":"_auxiliary_keys","id":9},{"text":"Use scripts","hash":"_use_scripts","id":10},{"text":"Next steps","hash":"_next_steps","id":11},{"text":"Example","hash":"_example","id":12},{"text":"Input Parameters","hash":"_input_parameters","id":13},{"text":"Outputs","hash":"_outputs","id":14}]},"8":{"id":8,"text":"This action creates an initial Changelog from the commit history. This is usually the included in your workflow after building and testing your library with CMake Workflow in another job with the complete matrix. The commits considered go from the latest commit up to a commit containing a version commit pattern specified by version-pattern. The result can be used as the initial body for an automated release, a CHANGELOG.md file, or a job summary. Each commit is parsed as a loose variant of a conventional commit in the following format: [optional scope]: [optional body] [optional footer(s)] The body and footer are always ignored. If no type is indicated, the description goes to an initial \"other\" category in the message. If no scope is indicated, the description goes to an initial \"general\" scope in the type messages. Breaking changes are indicated. This action uses the local commit history to generate the notes. Ensure the fetch-depth option is set when cloning your repository in CI. If this option is unset, the checkout action will perform a shallow clone and the Changelog will only include the latest commit. - uses: actions/checkout@v3 with: fetch-depth: 100 This parameter can also be used as a limit on the number of commits the action should consider. steps: - name: Changelog uses: alandefreitas/cpp-actions/create-changelog@master with: output-path: CHANGELOG.md thank-non-regular: ${{ startsWith(github.ref, 'refs/tags/') }} github-token: ${{ secrets.GITHUB_TOKEN }} link-commits: ${{ github.ref_name == 'develop' }} Parameter Description Default source-dir The source directory from whose commits will be analyzed. . version-pattern A regex pattern used to identify if a commit is a version delimiter. When a commit has a message that matches this pattern, the list of commits considered in the notes is complete. This constraint does not apply to the current and latest commit. (Bump|Set)\\s+version tag-pattern A regex pattern used to identify if a commit is a tagged delimiter. When a commit has the same hash has the commit associated with a tag whose name matches this pattern, the list of commits considered in the notes is complete. This constraint does not apply to the current and latest commit. v.\\..\\..* output-path The path where the changelog will be stored. CHANGELOG.md limit The limit on the number of commits considered in the Changelog. 0 thank-non-regular Thank non-regular contributors. true check-unconventional Check for commits that do not follow the conventional commit format. true link-commits Link commit ids in the changelog to the repository commit. This is usually unnecessary because GitHub flavored markdown automatically links commits id in text to the commits in the same repository. Thus, including explicit links would often make the output more verbose and remove any extra GitHub functionality, such as pop ups associated with these ids. However, when the outputs is only going to be used as an action summary or in any other context outside GitHub, these automatic links do not exist and it’s often a good idea to include them to allow the reader to navigate to these repository commits. false github-token Github token to identify non-regular contributors. Usually secrets.GITHUB_TOKEN. update-summary Update action summary with the changelog. true trace-commands Trace commands executed by the workflow. false","title":"Create Changelog","component":"cpp-actions","version":"master","name":"create-changelog","url":"/cpp-actions/actions/create-changelog.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2}]},"9":{"id":9,"text":"This action merges time-trace files generated by Clang and generates a FlameGraph. This is usually the next step in your workflow after building and testing your library with CMake Workflow. To generate the files, build the project with Clang and the -ftime-trace flag. For every object file, there will be a corresponding json file with details about build time. Each file in the build-dir will be combined into a single output file that contains all traces. The combined time-trace is used to generate a report and then converted to an image with FlameGraph. The combined time-trace files are uploaded to artifacts. It contains the svg file generated with FlameGraph, which you can open directly in the browser. It also contains a json file you can open with: https://www.speedscope.app/ (https://github.com/jlfwong/speedscope), or chrome://tracing/ A simple analysis is performed while combining the trace files and a report in markdown format is also generated. This report is saved to 'inputs.report-path' and also included with the artifacts. steps: - name: FlameGraph uses: alandefreitas/cpp-actions/flamegraph@master with: source-dir: tests build-dir: tests/build github_token: ${{ secrets.GITHUB_TOKEN }} Parameter Description Default source-dir The source directory used to generate time-traces. Relative paths in the report will be relative to this directory. . build-dir The directory with the time-traces. This should usually be your build directory. . output-path The path where the combined traces will be stored. If this is a relative path, it will be made relative to the build-dir. combined-traces.json report-path The path where the report will be stored. If this is a relative path, it will be made relative to the build-dir. time-trace-report.md generate-svg Generate SVG file with the output. true generate-report Generate a small report with ClangBuildAnalyzer. true update-summary Update action summary with the SVG file. true github_token An imgur client ID to upload the SVG flamegraph. See https://api.imgur.com/. upload-artifact Upload combined traces as artifact. true trace-commands Trace commands executed by the workflow. false Output Description traces-path The absolute path to combined traces. svg-path The absolute path to svg file.","title":"Create Flamegraph","component":"cpp-actions","version":"master","name":"flamegraph","url":"/cpp-actions/actions/flamegraph.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2},{"text":"Outputs","hash":"_outputs","id":3}]},"10":{"id":10,"text":"This action installs dependencies from multiple package managers for a workflow. This is usually the next step in your workflow after setting up a C++ compiler with Setup C++. If vcpkg dependencies are required and vcpkg is not available, it will be installed. Both vcpkg and its dependencies are cached. When your library depends on vcpkg for dependencies, it’s important to run the Setup C++ before this step because vcpkg packages are built from source and this allows us to use the compiler set up in the previous step. After setting up the dependencies for your C++ project, the next step in your workflow should usually be CMake Workflow. Alternatively, if your libraries depends on Boost, the next step in your workflow should usually be Boost Clone, which allows the workflow to only download the required subset of Boost libraries required by the project. steps: - name: Install packages uses: alandefreitas/cpp-actions/package-install@master id: package-install with: vcpkg: ${{ (!matrix.fetch-content && 'fmt') || '' }} vcpkg-triplet: ${{ matrix.triplet }} apt-get: ${{ matrix.install }} ${{ matrix.container && 'pkg-config' }} apt-get-ignore-missing: ${{ matrix.container && 'true' }} cc: ${{ steps.setup-cpp.outputs.cc || matrix.cc }} ccflags: ${{ matrix.ccflags }} cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx }} cxxflags: ${{ matrix.cxxflags }} Parameter Description Default vcpkg List of packages we should install with vcpkg. (Whitespace-separated). apt-get List of packages we should install with apt-get. (Whitespace-separated). cxx C compiler used by vcpkg. Setting the compiler is particularly important in Linux workflows that use `clang`, since `clang` might link `libc` or libstdc`, while the default compiler used by vcpkg will usually be GCC linking `libstdc. This would cause conflict in workflows that later attempt to use vcpkg dependencies. cxxflags C++ flags used by vcpkg. cc C compiler used by vcpkg. ccflags C flags used by vcpkg. vcpkg-triplet The triplet used by vcpkg to install packages. vcpkg-dir The directory where vcpkg should be cloned and installed. If the directory is unspecified, the runner tool cache is used. vcpkg-branch vcpkg branch we should use. master apt-get-retries Number of times we should retry when apt-get fails. 1 apt-get-sources List of sources for apt-get. apt-get-source-keys List of source keys for apt-get. apt-get-ignore-missing Whether apt-get should ignore missing packages. false trace-commands Trace commands executed by the action. false Output Description vcpkg-toolchain vcpkg toolchain file vcpkg-executable vcpkg toolchain file","title":"Install Packages","component":"cpp-actions","version":"master","name":"package-install","url":"/cpp-actions/actions/package-install.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4}]},"11":{"id":11,"text":"Set up a specific version of a Clang compiler and add it to the PATH. In most workflows, this is used as an auxiliary action for the setup-cpp action. This allows us to test a C++ library with any Clang version, and not only the versions circumstantially provided by apt-get. This action uses a number of alternatives to find or install Clang: The Clang path provided to 'path' Any other version of Clang it can find in the system Any other version of Clang available from APT A version of Clang from our own binary releases In most workflows, this is used as an auxiliary action for the Setup C++ action, which already calls this action if necessary. After setting up the proper C++ compiler for a matrix entry, the next step in your workflow should usually be Install Packages. Parameter Description Default version Version range or exact version of Clang to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. * path The clang or clang++ executable. We attempt to find Clang at this path first. clang++ check-latest By default, when Clang is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum Clang version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the clang executable. cxx The absolute path to the clang++ executable. dir The absolute path to the Clang directory containing the executable. version The installed Clang version. Useful when given a version range as input. version-major The installed Clang version major. Useful when given a version range as input. version-minor The installed Clang version minor. Useful when given a version range as input. version-patch The installed Clang version patch. Useful when given a version range as input.","title":"Setup Clang","component":"cpp-actions","version":"master","name":"setup-clang","url":"/cpp-actions/actions/setup-clang.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2},{"text":"Outputs","hash":"_outputs","id":3}]},"12":{"id":12,"text":"Set up a specific version of a CMake compiler and add it to the PATH. This action will also set-up any dependencies required by CMake. In most workflows, this is used as an auxiliary action for the CMake Workflow action, which already calls this action if necessary. Parameter Description Default version Version range or exact version of CMake to use, using SemVer’s version range syntax. Reads from cmake-file input if unset. By default, it uses any version available in the environment. >=3.0.2 architecture The target architecture (x86, x64). By default, this value is inferred. cmake-file File containing the CMake version to use in a cmake_minimum_required command. Example: A CMakeLists.txt file containing a call to cmake_minimum_required.\". CMakeLists.txt path The cmake executable. We attempt to find cmake at this path first. cmake cmake-path The cmake executable. We attempt to find cmake at this path first. This option is available for backwards compatibility and has priority over path. cache Used to specify whether the CMake installation should be cached in the case CMake needs to be downloaded.\". true check-latest By default, when CMake is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum CMake version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description path The absolute path to the CMake executable. dir The absolute path to the CMake directory. version The installed CMake version. Useful when given a version range as input. version-major The installed CMake version major. Useful when given a version range as input. version-minor The installed CMake version minor. Useful when given a version range as input. version-patch The installed CMake version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found supports-path-to-build Whether CMake supports the -B syntax supports-parallel-build Whether CMake supports the -j syntax supports-build-multiple-targets Whether CMake supports the --target with multiple targets supports-cmake-install Whether CMake supports the cmake --install","title":"Setup CMake","component":"cpp-actions","version":"master","name":"setup-cmake","url":"/cpp-actions/actions/setup-cmake.html","titles":[{"text":"Input Parameters","hash":"_input_parameters","id":1},{"text":"Outputs","hash":"_outputs","id":2}]},"13":{"id":13,"text":"Set up a C++ compiler and add it to the PATH. This is usually the first step in your workflow after consuming a matrix generated by C++ Matrix. The compiler parameter can be used to provide a compiler name or a compiler name with its version, separated by whitespace or a -. Examples valid names are gcc, g++, clang, gcc-10, g++ 10, clang 9.2. Note that strings like 10 and 9.2 are semver requirements and not semver versions. For instance, 10 represents the requirement equivalent to >=10.0.0 =9.2.0 <9.3.0. If the compiler parameter does not include a version requirement, the version parameter can be used to provide a version semver string in the npm format with the compiler requirements. If the compiler is GCC or Clang, this action routes to the appropriate Setup GCC or Setup Clang actions. If the compiler is MSVC, this action will setup the developer command prompt for Microsoft Visual C\\\\. If the compiler is MinGW, this action will look for g++ and gcc in the directories listed in the PATH environment variable. Any other compilers are passed through. If the compiler is GCC or Clang, the outputs include the paths to the compilers as well as the compiler version ultimately setup by the action. After setting up the proper C++ compiler for a matrix entry, the next step in your workflow should usually be Install Packages. steps: - name: Setup C++ uses: alandefreitas/cpp-actions/setup-cpp@master id: setup-cpp with: compiler: ${{ matrix.compiler }} version: ${{ (matrix.subrange-policy == 'one-per-major' && matrix.major) || matrix.version }} Parameter Description Default compiler Compiler name. If the compiler contains a version, it overrides 'version'. * version Version range or exact version of GCC to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. * path The compiler executable. We attempt to find the compiler at this path first. check-latest By default, when the compiler is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum GCC version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the C compiler executable. cxx The absolute path to the C++ compiler executable. bindir The absolute path to the directory containing the executable. dir The absolute path to the directory containing the installation. version The installed compiler version. Useful when given a version range as input. version-major The installed compiler version major. Useful when given a version range as input. version-minor The installed compiler version minor. Useful when given a version range as input. version-patch The installed compiler version patch. Useful when given a version range as input.","title":"Setup C++","component":"cpp-actions","version":"master","name":"setup-cpp","url":"/cpp-actions/actions/setup-cpp.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4}]},"14":{"id":14,"text":"Set up a specific version of a GCC compiler and add it to the PATH. In most workflows, this is used as an auxiliary action for the setup-cpp action. This allows us to test a C++ library with any GCC version, and not only the versions circumstantially provided by apt-get. This action uses a number of alternatives to find or install GCC: The GCC path provided to 'path' Any other version of GCC it can find in the system Any other version of GCC available from APT A version of GCC from our own binary releases The action will not attempt to install GCC from source files, which is the only officially supported method but impossible to run in CI because the machines would take hours to do that. If a version of GCC is not available by any other methods above, the GCC binaries for a given platform can be built locally with a script provided in this repository and added to our binary release. In most workflows, this is used as an auxiliary action for the Setup C++ action, which already calls this action if necessary. After setting up the proper C++ compiler for a matrix entry, the next step in your workflow should usually be Install Packages. Parameter Description Default version Version range or exact version of GCC to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. * path Path to the gcc or g++ executable. We attempt to find GCC at this path first. check-latest By default, when GCC is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum GCC version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the gcc executable. cxx The absolute path to the g++ executable. dir The absolute path to the GCC directory containing the executable. version The installed GCC version. Useful when given a version range as input. version-major The installed GCC version major. Useful when given a version range as input. version-minor The installed GCC version minor. Useful when given a version range as input. version-patch The installed GCC version patch. Useful when given a version range as input.","title":"Setup GCC","component":"cpp-actions","version":"master","name":"setup-gcc","url":"/cpp-actions/actions/setup-gcc.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2},{"text":"Outputs","hash":"_outputs","id":3}]},"15":{"id":15,"text":"Set up a specific version of a program and add it to the PATH. This action is inspired in the cmake command find_program and the setup-python action. This allows us to find a certain version of program in the host environment and, if it cannot be found, fallback to basic patterns to download and install it. This action uses a number of alternatives to find or install a program: The program path hints provided to 'path' Any other version of the program it can find in the system Any other version of the program available from APT A version of the program from a link to binary releases In most workflows, this is used in conjunction to the Setup C++ and Install Packages actions to find or install extra programs necessary for the workflow that are not easily available from package managers or could already be available in the environment. After setting up the dependencies for your C++ project, the next step in your workflow should usually be CMake Workflow. steps: - name: Setup Doxygen uses: alandefreitas/cpp-actions/setup-program@master id: setup-doxygen with: name: doxygen version: '>=1.9' url: 'https://github.com/doxygen/doxygen/releases/download/Release_1_9_7/doxygen-1.9.7.{{ os }}${{ ( runner.os == ''Windows'' && ''.x64'' ) || '''' }}.bin.${{ ( runner.os == ''Windows'' && ''zip'' ) || ''tar.gz'' }} ' install-prefix: ${{ ( runner.os == 'Linux' && '/usr/local' ) || '' }} check-latest: true update-environment: true fail-on-error: ${{ runner.os != 'macOS' }} Parameter Description Default name The name of the executable we should look for. This parameter can also include a list of names to look for. ⚠️ This parameter is required. version Version range or exact version of the program to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. If a version is provided, any executable found will be run with the --version option and the result will be parsed to look for a semver version, which will be considered the version we found. * path Specify directories and paths to search in addition to the default locations. The paths can be separated by ':' or ';'. check-latest Set this option if you want the action to check for the latest available version that satisfies the version spec. false url The URL to download the program binaries when it is not available in the environment. To simplify the download, the URL can contain the following placeholders: - {{name}}: The program name. - {{version}}: The version of the program to download. (coerced from the version input) - {{version-major}}: The major version of the program to download. (coerced from the version input) - {{version-minor}}: The minor version of the program to download. (coerced from the version input) - {{version-patch}}: The patch version of the program to download. (coerced from the version input) - {{platform}}: The platform name. (process.platform) - {{os}}: The operating system name. (process.platform converted to 'windows', 'macos', or 'linux') - {{arch}}: The architecture name. (process.arch). install-prefix The directory where the tool should be installed if it’s not available in the environment. By default, the tool will be installed in the hosttools cache directory. update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false fail-on-error Fail if the program is not found. true Output Description path The absolute path to the program executable. dir The absolute path to the directory containing the executable. version The installed program version. Useful when given a version range as input. version-major The installed program version major. Useful when given a version range as input. version-minor The installed program version minor. Useful when given a version range as input. version-patch The installed program version patch. Useful when given a version range as input. found Whether the program was found.","title":"Setup Program","component":"cpp-actions","version":"master","name":"setup-program","url":"/cpp-actions/actions/setup-program.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4}]}},"components":{},"componentVersions":{"cpp-actions/master":{"displayVersion":"master","title":"C++ Actions","version":"master","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/develop":{"displayVersion":"develop","title":"C++ Actions","version":"develop","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/develop/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/develop/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/develop/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/develop/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/develop/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/develop/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/develop/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/develop/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/develop/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/develop/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/develop/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/develop/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/develop/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/develop/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/develop/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.6.2":{"displayVersion":"v1.6.2","title":"C++ Actions","version":"v1.6.2","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.6.2/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.6.2/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.6.2/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.6.2/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.6.2/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.6.2/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.6.2/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.6.2/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.6.2/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.6.2/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.6.2/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.6.2/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.6.2/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.6.2/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.6.2/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.6.1":{"displayVersion":"v1.6.1","title":"C++ Actions","version":"v1.6.1","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.6.1/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.6.1/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.6.1/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.6.1/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.6.1/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.6.1/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.6.1/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.6.1/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.6.1/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.6.1/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.6.1/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.6.1/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.6.1/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.6.1/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.6.1/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.6.0":{"displayVersion":"v1.6.0","title":"C++ Actions","version":"v1.6.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.6.0/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.6.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.6.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.6.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.6.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.6.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.6.0/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.6.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.6.0/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.6.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.6.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.6.0/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.6.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.6.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.6.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.5.0":{"displayVersion":"v1.5.0","title":"C++ Actions","version":"v1.5.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.5.0/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.5.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.5.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.5.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.5.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.5.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.5.0/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.5.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.5.0/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.5.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.5.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.5.0/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.5.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.5.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.5.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.4.1":{"displayVersion":"v1.4.1","title":"C++ Actions","version":"v1.4.1","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.4.1/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.4.1/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.4.1/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.4.1/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.4.1/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.4.1/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.4.1/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.4.1/actions/setup-cmake.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.4.1/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.4.1/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.4.1/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.4.1/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.4.1/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.4.1/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.4.0":{"displayVersion":"v1.4.0","title":"C++ Actions","version":"v1.4.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.4.0/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.4.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.4.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.4.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.4.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/v1.4.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/v1.4.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.4.0/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.4.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.4.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/v1.4.0/actions/create-changelog.html","urlType":"internal"},{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.4.0/actions/flamegraph.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.4.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.4.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.3.0":{"displayVersion":"v1.3.0","title":"C++ Actions","version":"v1.3.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.3.0/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/v1.3.0/index.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.3.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.3.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.3.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.3.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/v1.3.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/v1.3.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.3.0/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.3.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.3.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/v1.3.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.3.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.3.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.2.1":{"displayVersion":"v1.2.1","title":"C++ Actions","version":"v1.2.1","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.2.1/index.html","navigation":[{"items":[{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.2.1/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.2.1/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.2.1/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/v1.2.1/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/v1.2.1/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.2.1/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.2.1/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.2.1/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/v1.2.1/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.2.1/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.2.1/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.2.0":{"displayVersion":"v1.2.0","title":"C++ Actions","version":"v1.2.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.2.0/index.html","navigation":[{"items":[{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.2.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.2.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.2.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/v1.2.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/v1.2.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.2.0/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.2.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.2.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/v1.2.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.2.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.2.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.1.0":{"displayVersion":"v1.1.0","title":"C++ Actions","version":"v1.1.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.1.0/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/v1.1.0/index.html","urlType":"internal"},{"content":"Install dependencies Action","url":"/cpp-actions/v1.1.0/actions/package-install.html","urlType":"internal"},{"content":"CMake Workflow Action","url":"/cpp-actions/v1.1.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.1.0/actions/boost-clone.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.1.0/actions/b2-workflow.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.1.0/actions/create-changelog.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.1.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.1.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Contribute","url":"/cpp-actions/v1.1.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.1.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.0.0":{"displayVersion":"v1.0.0","title":"C++ Actions","version":"v1.0.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.0.0/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/v1.0.0/index.html","urlType":"internal"},{"content":"Install dependencies Action","url":"/cpp-actions/v1.0.0/actions/package-install.html","urlType":"internal"},{"content":"CMake Workflow Action","url":"/cpp-actions/v1.0.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.0.0/actions/boost-clone.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.0.0/actions/b2-workflow.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.0.0/actions/create-changelog.html","urlType":"internal"},{"content":"Contribute","url":"/cpp-actions/v1.0.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.0.0/license.html","urlType":"internal"}],"root":true,"order":0}]}}}})