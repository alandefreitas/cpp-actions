antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1",[0,38.092]],["name/1",[0,1.85]],["text/1",[1,4.453,2,4.066,3,5.759,4,1.277,5,4.972,6,5.759,7,4.972,8,5.759,9,5.759,10,5.759,11,3.279]],["component/1",[4,0.326,12,0.482]],["title/2",[4,7.513,13,15.415]],["name/2",[14,1.85]],["text/2",[2,3.142,4,1.165,11,3.863,13,2.794,15,3.769,16,4.45,17,3.051,18,3.051,19,3.051,20,2.359,21,2.634,22,2.359,23,1.544,24,3.051,25,1.99,26,1.854,27,1.544,28,1.737,29,3.051,30,3.051,31,3.051,32,2.634,33,5.254,34,2.992,35,2.359,36,2.154,37,3.051,38,4.45,39,4.45,40,2.634,41,3.051,42,3.051,43,2.359,44,1.99,45,1.99,46,3.051,47,3.442,48,1.99,49,3.051,50,3.051,51,1.737,52,3.051,53,1.635,54,2.359,55,3.051,56,2.253,57,5.775,58,1.32,59,3.442,60,3.051,61,3.051,62,3.051,63,3.051,64,5.775,65,1.525,66,2.154,67,3.051,68,3.051,69,3.051,70,3.051,71,4.45,72,2.534,73,3.051,74,3.051,75,3.051,76,1.463,77,3.051,78,3.051,79,2.634,80,3.051,81,3.051,82,3.051,83,3.051,84,3.051,85,3.051,86,3.051,87,1.737,88,3.051,89,3.051,90,2.154,91,2.359]],["component/2",[4,0.326,12,0.482]],["title/3",[92,34.12]],["name/3",[92,1.658]],["text/3",[5,4.604,7,2.704,21,2.704,32,2.704,40,2.704,45,2.043,58,1.963,76,1.501,79,2.704,87,1.783,90,5.161,92,4.124,93,1.783,94,1.585,95,3.132,96,3.132,97,3.132,98,3.132,99,3.132,100,3.132,101,4.536,102,3.132,103,3.132,104,3.132,105,3.132,106,5.333,107,3.132,108,3.132,109,3.132,110,3.132,111,4.536,112,2.064,113,3.132,114,3.132,115,5.333,116,3.132,117,3.132,118,3.132,119,3.132,120,3.132,121,3.203,122,4.536,123,3.132,124,3.132,125,3.132,126,3.479,127,2.422,128,3.132,129,3.132,130,3.132,131,3.132,132,3.132,133,3.132,134,3.132,135,2.422,136,3.132,137,2.043,138,1.678,139,3.132,140,3.132,141,4.536,142,3.132,143,3.132,144,3.132,145,2.422,146,3.132,147,3.132,148,3.132,149,3.132,150,3.132,151,3.132,152,3.132,153,3.132,154,3.132,155,3.132,156,3.132,157,3.132,158,3.132,159,3.132,160,1.903,161,3.132,162,3.132,163,3.132,164,3.132,165,3.132]],["component/3",[4,0.326,12,0.482]],["title/4-1",[166,15.121]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[167,8.938,168,7.19]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4",[65,11.61,169,22.101]],["name/4",[65,0.442,169,0.842]],["text/4",[4,0.685,11,3.42,13,0.866,15,1.083,23,1.975,27,1.564,43,3.473,53,1.019,58,2.514,65,1.059,76,0.912,91,2.389,93,3.514,94,0.963,112,0.866,126,1.241,137,1.241,138,3.308,166,1.814,168,0.404,169,3.223,170,1.343,171,1.343,172,1.759,173,1.471,174,1.481,175,1.642,176,0.963,177,4.644,178,1.642,179,2.667,180,1.471,181,1.642,182,1.343,183,3.013,184,3.175,185,4.092,186,3.013,187,4.569,188,4.092,189,2.673,190,3.736,191,4.092,192,5.016,193,2.822,194,2.016,195,4.312,196,3.82,197,1.343,198,2.813,199,2.836,200,2.667,201,1.343,202,3.878,203,1.642,204,1.642,205,1.642,206,1.471,207,3.368,208,0.963,209,1.471,210,3.017,211,3.368,212,2.667,213,1.642,214,3.171,215,1.642,216,1.642,217,1.642,218,0.912,219,0.912,220,0.963,221,2.545,222,2.389,223,1.642,224,2.371,225,1.642,226,1.083,227,1.471,228,1.019,229,2.389,230,2.389,231,1.642,232,1.471,233,1.471,234,1.642,235,1.642,236,1.642,237,1.481,238,2.667,239,1.019,240,1.564,241,1.564]],["component/4",[4,0.326,12,0.482]],["title/5-1",[166,15.121]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[167,8.938,168,7.19]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5",[93,19.29,242,19.29]],["name/5",[93,0.735,242,0.735]],["text/5",[1,2.359,4,0.987,15,1.737,27,1.544,58,1.926,65,1.525,93,4.103,112,1.388,138,2.385,168,0.647,174,2.769,176,2.659,177,5.437,183,1.737,184,1.737,185,2.359,186,1.737,189,2.519,190,2.154,191,2.359,201,2.154,206,2.359,209,2.359,218,1.463,219,2.133,224,2.704,237,1.463,240,2.253,241,2.253,242,3.769,243,1.737,244,3.497,245,1.854,246,2.634,247,3.842,248,5.535,249,3.51,250,3.842,251,2.634,252,2.634,253,2.634,254,3.842,255,3.842,256,3.842,257,2.359,258,2.634,259,2.634,260,4.063,261,3.442,262,1.854,263,2.634,264,2.634,265,2.704,266,1.388,267,2.634,268,2.634,269,2.903]],["component/5",[4,0.326,12,0.482]],["title/6-1",[166,15.121]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[167,8.938,168,7.19]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6",[65,11.61,270,16.24]],["name/6",[65,0.442,270,0.619]],["text/6",[4,1.003,11,3.078,13,1.286,15,1.925,22,0.945,23,1.711,25,0.797,27,1.077,28,2.395,34,0.696,35,1.645,36,0.863,44,0.797,47,1.645,51,1.211,53,1.812,56,0.618,58,2.073,59,2.614,65,1.722,76,1.02,94,3.065,112,0.968,121,0.863,126,0.797,137,2.744,138,2.983,166,0.968,168,0.452,170,3.547,171,1.502,172,1.609,174,2.297,176,0.618,182,0.863,183,2.861,184,1.925,186,1.609,188,2.185,189,2.408,190,1.995,193,1.077,194,2.205,195,2.614,196,1.645,197,0.863,198,1.925,201,0.863,208,2.129,210,2.185,214,3.383,218,0.586,219,1.621,220,3.591,221,3.95,224,0.742,226,0.696,227,0.945,228,2.053,229,2.963,230,0.945,232,0.945,233,0.945,237,0.586,239,0.655,240,1.077,241,1.43,266,2.707,269,0.797,270,3.252,271,1.055,272,0.696,273,0.742,274,0.945,275,1.645,276,1.055,277,1.055,278,1.055,279,1.055,280,0.945,281,1.717,282,1.055,283,1.055,284,1.055,285,1.717,286,1.055,287,0.945,288,2.556,289,0.863,290,1.837,291,0.945,292,3.904,293,1.055,294,2.918,295,1.837,296,2.44,297,2.44,298,2.44,299,2.44,300,3.308,301,2.44,302,2.054,303,3.253,304,2.185,305,2.185,306,1.388,307,2.918,308,2.44,309,2.44,310,2.918,311,1.055,312,2.614,313,1.055,314,1.055,315,1.055,316,1.055,317,1.055,318,1.055,319,1.293,320,0.863,321,1.055,322,0.945,323,0.945,324,0.945,325,1.055,326,0.945,327,0.863,328,2.44,329,1.055,330,0.797,331,1.055,332,1.055,333,0.696,334,1.055,335,1.055,336,1.055,337,1.055,338,1.055,339,1.055,340,0.742,341,1.055]],["component/6",[4,0.326,12,0.482]],["title/7-1",[166,15.121]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[167,8.938,168,7.19]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7",[53,18.155,342,22.101]],["name/7",[53,0.692,342,0.842]],["text/7",[4,1.08,20,4.101,44,1.429,53,1.854,56,1.109,58,2.554,65,0.751,72,1.247,94,2.465,112,0.997,121,1.547,126,1.429,137,2.257,138,1.854,145,3.316,168,0.734,171,2.443,172,1.247,174,1.05,176,1.109,183,1.247,184,1.97,186,1.247,189,1.05,208,1.109,218,2.055,219,1.05,220,2.853,222,1.694,224,2.102,228,2.298,237,1.05,239,2.842,240,2.17,241,2.17,242,1.97,269,1.429,272,1.247,274,2.675,275,2.675,291,1.694,312,2.675,323,2.675,330,2.257,333,2.773,342,3.177,343,4.205,344,6.276,345,2.987,346,1.891,347,1.331,348,5.281,349,1.891,350,3.702,351,1.891,352,3.702,353,1.891,354,1.891,355,1.891,356,1.891,357,1.891,358,1.694,359,3.702,360,1.891,361,1.891,362,1.891,363,2.606,364,2.987,365,1.891,366,3.702,367,1.891,368,1.891,369,1.694,370,4.205,371,2.987,372,2.987,373,1.694,374,1.694,375,1.891,376,1.891,377,1.891,378,1.891,379,1.891,380,2.257,381,1.891,382,1.891,383,1.186,384,2.987,385,1.891,386,2.987,387,2.987,388,2.987,389,2.987,390,1.891,391,3.702,392,1.891,393,1.891,394,1.891,395,1.891,396,1.891,397,1.694]],["component/7",[4,0.326,12,0.482]],["title/8-1",[13,15.415,398,12.143]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[166,15.121]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[167,8.938,168,7.19]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8-4",[383,15.121]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["title/8-5",[249,20.587,266,15.415]],["name/8-5",[]],["text/8-5",[]],["component/8-5",[]],["title/8-6",[166,15.121]],["name/8-6",[]],["text/8-6",[]],["component/8-6",[]],["title/8-7",[167,8.938,168,7.19]],["name/8-7",[]],["text/8-7",[]],["component/8-7",[]],["title/8-8",[383,15.121]],["name/8-8",[]],["text/8-8",[]],["component/8-8",[]],["title/8-9",[65,11.61,270,16.24]],["name/8-9",[]],["text/8-9",[]],["component/8-9",[]],["title/8-10",[166,15.121]],["name/8-10",[]],["text/8-10",[]],["component/8-10",[]],["title/8-11",[167,8.938,168,7.19]],["name/8-11",[]],["text/8-11",[]],["component/8-11",[]],["title/8-12",[93,19.29,242,19.29]],["name/8-12",[]],["text/8-12",[]],["component/8-12",[]],["title/8-13",[166,15.121]],["name/8-13",[]],["text/8-13",[]],["component/8-13",[]],["title/8-14",[167,8.938,168,7.19]],["name/8-14",[]],["text/8-14",[]],["component/8-14",[]],["title/8-15",[65,11.61,169,22.101]],["name/8-15",[]],["text/8-15",[]],["component/8-15",[]],["title/8-16",[166,15.121]],["name/8-16",[]],["text/8-16",[]],["component/8-16",[]],["title/8-17",[167,8.938,168,7.19]],["name/8-17",[]],["text/8-17",[]],["component/8-17",[]],["title/8-18",[53,18.155,342,22.101]],["name/8-18",[]],["text/8-18",[]],["component/8-18",[]],["title/8-19",[166,15.121]],["name/8-19",[]],["text/8-19",[]],["component/8-19",[]],["title/8-20",[167,8.938,168,7.19]],["name/8-20",[]],["text/8-20",[]],["component/8-20",[]],["title/8-21",[270,16.24,398,12.143]],["name/8-21",[]],["text/8-21",[]],["component/8-21",[]],["title/8-22",[167,8.938,168,7.19]],["name/8-22",[]],["text/8-22",[]],["component/8-22",[]],["title/8-23",[383,15.121]],["name/8-23",[]],["text/8-23",[]],["component/8-23",[]],["title/8-24",[193,17.147,398,12.143]],["name/8-24",[]],["text/8-24",[]],["component/8-24",[]],["title/8-25",[167,8.938,168,7.19]],["name/8-25",[]],["text/8-25",[]],["component/8-25",[]],["title/8-26",[383,15.121]],["name/8-26",[]],["text/8-26",[]],["component/8-26",[]],["title/8-27",[199,18.155,398,12.143]],["name/8-27",[]],["text/8-27",[]],["component/8-27",[]],["title/8-28",[167,8.938,168,7.19]],["name/8-28",[]],["text/8-28",[]],["component/8-28",[]],["title/8-29",[383,15.121]],["name/8-29",[]],["text/8-29",[]],["component/8-29",[]],["title/8",[4,9.786]],["name/8",[14,1.85]],["text/8",[1,0.228,2,0.208,4,1.091,11,2.107,12,0.271,13,1.22,15,1.074,20,0.997,22,0.228,23,2.195,25,0.539,26,1.146,27,1.044,28,1.939,34,2.256,35,0.44,36,0.402,43,0.824,44,0.539,45,0.841,47,0.44,48,0.539,51,1.603,53,1.011,54,0.228,56,1.553,58,2.601,59,0.824,65,1.412,66,0.402,72,0.734,76,1.217,87,0.606,90,0.208,91,0.44,93,2.159,94,3.421,112,1.765,121,0.402,126,0.539,127,0.228,135,0.228,137,1.346,138,2.36,145,0.638,160,0.647,166,0.87,167,0.841,168,0.507,169,0.979,170,1.686,171,0.911,172,1.603,173,0.44,174,1.682,175,0.255,176,1.129,177,2.633,178,0.255,179,0.492,180,0.44,181,0.255,182,1.059,183,1.997,184,1.878,185,1.314,186,1.603,187,1.295,188,1.595,189,1.9,190,1.574,191,1.314,192,1.628,193,2.438,194,1.455,195,1.847,196,1.314,197,0.583,198,1.677,199,2.523,200,0.492,201,0.583,202,0.92,203,0.255,204,0.255,205,0.255,206,0.44,207,0.713,208,1.669,209,0.44,210,1.16,211,0.713,212,0.492,213,0.255,214,2.079,215,0.255,216,0.255,217,0.255,218,1.471,219,1.938,220,3.294,221,2.474,222,0.638,223,0.255,224,1.542,225,0.255,226,1.27,227,0.44,228,2.581,229,1.314,230,0.638,231,0.255,232,0.44,233,0.44,234,0.255,235,0.255,236,0.255,237,1.285,238,0.492,239,1.578,240,1.612,241,1.724,242,1.36,243,0.967,244,2.107,245,0.784,246,0.255,247,0.492,248,1.295,249,1.355,250,0.492,251,0.255,252,0.255,253,0.255,254,0.492,255,0.492,256,0.492,257,0.44,258,0.255,259,0.255,260,0.997,261,0.638,262,1.253,263,0.255,264,0.255,265,1.355,266,2.528,267,0.255,268,0.255,269,1.23,270,2.679,271,0.255,272,0.967,273,1.253,274,0.638,275,0.824,276,0.255,277,0.255,278,0.255,279,0.255,280,0.44,281,1.253,282,0.255,283,0.255,284,0.255,285,1.032,286,0.255,287,0.44,288,1.629,289,0.752,290,0.492,291,0.44,292,1.467,293,0.255,294,0.92,295,0.492,296,0.713,297,0.713,298,0.713,299,0.713,300,1.113,301,0.713,302,1.355,303,1.724,304,0.997,305,0.997,306,1.558,307,0.92,308,0.713,309,0.713,310,0.92,311,0.255,312,1.16,313,0.255,314,0.255,315,0.255,316,0.255,317,0.255,318,0.255,319,0.912,320,0.583,321,0.255,322,0.44,323,0.638,324,0.638,325,0.255,326,0.638,327,0.911,328,0.713,329,0.255,330,0.979,331,0.255,332,0.255,333,1.526,334,0.255,335,0.255,336,0.255,337,0.255,338,0.255,339,0.255,340,0.784,341,0.255,342,0.841,343,0.92,344,3.114,345,0.492,346,0.255,347,1.032,348,1.628,349,0.255,350,0.713,351,0.255,352,0.713,353,0.255,354,0.255,355,0.255,356,0.255,357,0.255,358,0.638,359,0.713,360,0.255,361,0.255,362,0.255,363,1.032,364,0.492,365,0.255,366,0.713,367,0.255,368,0.255,369,0.44,370,0.92,371,0.492,372,0.492,373,0.44,374,0.44,375,0.255,376,0.255,377,0.255,378,0.255,379,0.255,380,0.841,381,0.255,382,0.255,383,0.582,384,0.492,385,0.255,386,0.492,387,0.492,388,0.492,389,0.492,390,0.255,391,0.713,392,0.255,393,0.255,394,0.255,395,0.255,396,0.255,397,0.638,398,0.799,399,0.695,400,0.255,401,0.255,402,0.255,403,0.255,404,0.255,405,0.255,406,0.255,407,0.638,408,0.255,409,0.695,410,0.695,411,1.711,412,1.23,413,0.695,414,0.695,415,0.695,416,0.695,417,1.23,418,1.23,419,0.695,420,0.695,421,1.23,422,0.695,423,1.558,424,2.078,425,1.23,426,1.23,427,0.695,428,0.695,429,0.695,430,0.695,431,1.595,432,0.255,433,3.195,434,0.255,435,0.492,436,0.492,437,0.492,438,2.329,439,0.92,440,0.92,441,0.255,442,0.255,443,0.255,444,0.255,445,0.255,446,0.255,447,0.255,448,0.255,449,0.255,450,0.713,451,0.255,452,0.255,453,0.255,454,0.255,455,0.492,456,0.255,457,0.255,458,0.255,459,0.255,460,0.492,461,0.255,462,0.713,463,0.255,464,0.255,465,0.255,466,0.255,467,0.255,468,0.492,469,0.492,470,0.255,471,0.255,472,0.492,473,0.492,474,0.255,475,0.255,476,0.492,477,0.492,478,0.255,479,0.255,480,0.492,481,0.583,482,0.255,483,0.255,484,0.255,485,0.255,486,0.44,487,0.44,488,0.255,489,0.492,490,0.255,491,0.255,492,0.255,493,0.255]],["component/8",[4,0.326,12,0.482]],["title/9-1",[166,15.121]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[167,8.938,168,7.19]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[383,15.121]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9",[249,20.587,266,15.415]],["name/9",[266,0.587,431,0.998]],["text/9",[4,0.4,13,1.347,23,2.203,36,1.274,54,1.396,56,0.914,58,2.551,65,1.29,76,0.865,90,1.274,112,0.821,138,2.333,166,1.014,168,0.383,172,2.143,174,0.865,180,1.396,182,3.074,183,1.686,184,1.686,186,1.686,189,0.865,193,1.905,194,2.455,197,1.274,198,2.143,199,2.767,208,0.914,214,2.657,218,1.419,219,1.419,220,3.757,221,1.178,224,2.645,237,0.865,242,1.028,243,1.028,244,1.028,249,2.645,260,2.289,261,1.396,266,2.76,269,2.84,270,0.865,287,1.396,289,1.274,302,2.287,303,3.366,304,2.289,305,2.289,306,2.84,320,1.274,322,1.396,358,2.289,380,1.178,383,0.619,397,2.289,407,2.289,411,1.097,431,4.558,432,1.558,433,6.111,434,1.558,435,2.556,436,2.556,437,2.556,438,4.75,439,3.758,440,3.758,441,1.558,442,1.558,443,1.558,444,1.558,445,1.558,446,1.558,447,1.558,448,1.558,449,1.558,450,3.249,451,1.558,452,1.558,453,1.558,454,1.558,455,2.556,456,1.558,457,1.558,458,1.558,459,1.558,460,2.556,461,1.558,462,3.249,463,1.558,464,1.558,465,1.558,466,1.558,467,1.558,468,2.556,469,2.556,470,1.558,471,1.558,472,2.556,473,2.556,474,1.558,475,1.558,476,2.556,477,2.556,478,1.558,479,1.558,480,2.556]],["component/9",[4,0.326,12,0.482]],["title/10-1",[167,8.938,168,7.19]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[383,15.121]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10",[199,18.155,398,12.143]],["name/10",[199,0.692,398,0.463]],["text/10",[4,1.239,11,1.221,12,0.703,13,0.976,15,1.221,23,1.085,25,1.399,26,2.067,27,1.085,28,1.221,34,3.18,45,2.219,48,1.399,51,2.407,56,2.14,58,2.772,65,1.166,66,1.514,72,1.221,76,1.028,87,1.221,94,3.767,112,2.388,160,1.303,167,1.27,168,0.455,174,1.028,176,1.085,189,1.028,198,1.221,199,3.904,208,1.722,218,1.631,219,2.307,220,2.656,226,1.937,228,3.254,237,1.631,239,1.823,240,1.722,241,1.722,243,1.221,244,2.74,245,1.303,262,2.067,265,2.067,266,2.663,272,1.221,273,2.067,281,1.303,285,1.303,288,1.303,302,1.303,319,1.303,327,1.514,330,1.399,333,1.937,340,1.303,347,1.303,363,1.303,380,1.399,383,0.735,398,0.769,399,1.399,409,1.399,410,1.399,411,2.569,412,2.758,413,1.399,414,1.399,415,1.399,416,1.399,417,2.219,418,2.219,419,1.399,420,1.399,421,2.219,422,1.399,423,2.758,424,3.14,425,2.219,426,2.219,427,1.399,428,1.399,429,1.399,430,1.399,438,1.514,481,1.514,486,1.658,487,1.658]],["component/10",[4,0.326,12,0.482]],["title/11-1",[167,8.938,168,7.19]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[383,15.121]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11",[270,16.24,398,12.143]],["name/11",[270,0.619,398,0.463]],["text/11",[4,1.199,23,1.009,26,1.95,27,1.009,28,3.475,34,3.078,48,1.3,51,2.293,56,2.336,58,2.711,65,1.38,72,1.135,76,2.426,87,1.135,94,3.682,112,1.833,160,1.211,166,0.683,167,1.335,168,0.423,172,2.628,174,0.955,176,1.009,189,0.955,208,1.624,218,1.538,219,2.213,220,2.737,221,2.627,226,1.827,228,3.047,237,0.955,239,1.72,240,1.624,241,2.038,243,1.135,244,2.628,245,1.211,249,1.211,262,1.95,265,1.95,266,2.691,270,3.533,272,1.827,273,1.95,280,1.541,281,2.447,285,1.211,288,2.805,289,2.266,319,1.211,320,1.407,324,2.481,326,2.481,333,1.827,340,1.211,347,1.95,363,1.211,374,1.541,383,0.683,399,1.3,409,1.3,410,1.3,411,2.447,412,1.3,413,1.3,414,1.3,415,1.3,416,1.3,417,2.093,418,2.093,419,1.3,420,1.3,421,2.093,422,1.3,423,2.093,424,3.011,425,2.093,426,2.093,427,1.3,428,1.3,429,1.3,430,1.3,481,1.407,482,1.721,483,1.721,484,1.721,485,1.721]],["component/11",[4,0.326,12,0.482]],["title/12-1",[166,15.121]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[167,8.938,168,7.19]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[383,15.121]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12",[13,15.415,398,12.143]],["name/12",[12,0.423,398,0.463]],["text/12",[4,1.162,12,0.701,13,2.186,23,3.533,26,2.062,27,1.082,28,1.217,34,3.176,51,2.403,56,2.136,58,2.703,65,0.733,72,1.217,76,1.025,87,1.217,94,3.721,112,2.384,160,1.299,167,1.268,168,0.454,174,1.025,176,1.082,183,1.217,184,1.932,186,1.217,189,1.025,193,2.136,194,1.395,198,1.217,199,1.146,208,2.136,218,1.627,219,2.303,220,3.24,226,1.932,228,2.989,237,1.627,239,1.819,240,1.718,241,1.718,243,1.217,244,2.736,245,1.299,262,2.062,265,2.062,266,2.538,272,1.217,273,2.062,281,1.299,285,1.299,288,1.299,302,1.299,306,2.214,319,1.299,333,1.932,340,1.299,347,2.062,363,1.299,383,0.733,398,1.722,399,1.395,400,1.846,401,1.846,402,1.846,403,1.846,404,1.846,405,1.846,406,1.846,407,1.653,408,1.846,409,1.395,410,1.395,411,2.564,412,1.395,413,1.395,414,1.395,415,1.395,416,1.395,417,2.214,418,2.214,419,1.395,420,1.395,421,2.214,422,1.395,423,2.753,424,3.134,425,2.214,426,2.214,427,1.395,428,1.395,429,1.395,430,1.395]],["component/12",[4,0.326,12,0.482]],["title/13-1",[167,8.938,168,7.19]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[383,15.121]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13",[193,17.147,398,12.143]],["name/13",[193,0.653,398,0.463]],["text/13",[2,1.38,4,1.251,11,1.113,12,0.641,13,0.889,15,1.113,23,0.989,25,1.275,26,1.919,27,0.989,28,1.798,34,3.051,44,1.275,45,2.593,48,1.275,51,2.263,56,2.012,58,2.694,65,1.082,66,1.38,72,1.113,76,0.937,87,1.113,94,3.734,112,2.28,127,1.512,135,1.512,138,1.048,160,1.188,167,1.204,168,0.415,170,1.38,172,1.113,173,1.512,174,0.937,176,0.989,189,0.937,193,3.633,198,1.113,208,1.599,218,1.514,219,2.188,220,2.536,226,1.798,228,3.146,237,1.514,239,1.693,240,1.599,241,1.599,243,1.798,244,2.599,245,1.188,257,1.512,262,1.919,265,1.919,266,2.671,272,1.113,273,1.919,281,1.188,285,1.188,288,1.188,302,1.188,306,2.593,319,1.188,327,2.806,330,2.061,333,1.798,340,1.188,347,1.188,363,1.188,369,1.512,373,1.512,380,1.275,383,0.67,398,0.701,399,1.275,409,1.275,410,1.275,411,2.773,412,2.593,413,1.275,414,1.275,415,1.275,416,1.275,417,2.061,418,2.061,419,1.275,420,1.275,421,2.061,422,1.275,423,2.593,424,3.268,425,2.061,426,2.061,427,1.275,428,1.275,429,1.275,430,1.275,438,1.38,481,1.38,486,1.512,487,1.512,488,1.687,489,2.727,490,1.687,491,1.687,492,1.687,493,1.687]],["component/13",[4,0.326,12,0.482]]],"invertedIndex":[["",{"_index":220,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["0",{"_index":397,"title":{},"name":{},"text":{"7":{},"8":{},"9":{}},"component":{}}],["1",{"_index":182,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"9":{}},"component":{}}],["1.0",{"_index":95,"title":{},"name":{},"text":{"3":{}},"component":{}}],["100",{"_index":379,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["12",{"_index":200,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["13",{"_index":194,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"12":{}},"component":{}}],["14.3",{"_index":204,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["17",{"_index":216,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["17,20",{"_index":196,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["17th",{"_index":97,"title":{},"name":{},"text":{"3":{}},"component":{}}],["2",{"_index":197,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"9":{}},"component":{}}],["2003",{"_index":98,"title":{},"name":{},"text":{"3":{}},"component":{}}],["3",{"_index":201,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{}},"component":{}}],["3.20",{"_index":297,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["3.8",{"_index":440,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["32,64",{"_index":205,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["4",{"_index":206,"title":{},"name":{},"text":{"4":{},"5":{},"8":{}},"component":{}}],["5",{"_index":209,"title":{},"name":{},"text":{"4":{},"5":{},"8":{}},"component":{}}],["6",{"_index":213,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["7",{"_index":217,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["8",{"_index":215,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["abov",{"_index":127,"title":{},"name":{},"text":{"3":{},"8":{},"13":{}},"component":{}}],["absolut",{"_index":423,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["accompani",{"_index":107,"title":{},"name":{},"text":{"3":{}},"component":{}}],["accord",{"_index":277,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["action",{"_index":4,"title":{"2":{},"8":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}}}],["actions/b2",{"_index":187,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["actions/boost",{"_index":258,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["actions/checkout@v3",{"_index":378,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["actions/cmak",{"_index":296,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["actions/cr",{"_index":381,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["actions/packag",{"_index":435,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["actions/setup",{"_index":404,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["ad",{"_index":493,"title":{},"name":{},"text":{"8":{},"13":{}},"component":{}}],["adapt",{"_index":10,"title":{},"name":{},"text":{"1":{}},"component":{}}],["add",{"_index":399,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["address",{"_index":43,"title":{},"name":{},"text":{"2":{},"4":{},"8":{}},"component":{}}],["adjust",{"_index":276,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["aim",{"_index":52,"title":{},"name":{},"text":{"2":{}},"component":{}}],["alandefreitas/cpp",{"_index":186,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"12":{}},"component":{}}],["allow",{"_index":66,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"13":{}},"component":{}}],["altern",{"_index":487,"title":{},"name":{},"text":{"8":{},"10":{},"13":{}},"component":{}}],["alway",{"_index":362,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["analyz",{"_index":385,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["annot",{"_index":292,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["anyon",{"_index":156,"title":{},"name":{},"text":{"3":{}},"component":{}}],["appli",{"_index":389,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["appropri",{"_index":401,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["apt",{"_index":438,"title":{},"name":{},"text":{"8":{},"9":{},"10":{},"13":{}},"component":{}}],["architectur",{"_index":26,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["arg",{"_index":307,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["argument",{"_index":332,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["aris",{"_index":163,"title":{},"name":{},"text":{"3":{}},"component":{}}],["associ",{"_index":394,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["assum",{"_index":263,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["attempt",{"_index":243,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["august",{"_index":96,"title":{},"name":{},"text":{"3":{}},"component":{}}],["autoconf",{"_index":453,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["autom",{"_index":351,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["automak",{"_index":454,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["autotool",{"_index":452,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["auxiliari",{"_index":481,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"13":{}},"component":{}}],["avail",{"_index":411,"title":{},"name":{},"text":{"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["b",{"_index":280,"title":{},"name":{},"text":{"6":{},"8":{},"11":{}},"component":{}}],["b2",{"_index":169,"title":{"4":{},"8-15":{}},"name":{"4":{}},"text":{"4":{},"8":{}},"component":{}}],["base",{"_index":253,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["be",{"_index":339,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["behavior",{"_index":235,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["besid",{"_index":246,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["binari",{"_index":327,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"13":{}},"component":{}}],["bodi",{"_index":350,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["boolean",{"_index":428,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["boost",{"_index":93,"title":{"5":{},"8-12":{}},"name":{"5":{}},"text":{"3":{},"4":{},"5":{},"8":{}},"component":{}}],["boost.variant2",{"_index":185,"title":{},"name":{},"text":{"4":{},"5":{},"8":{}},"component":{}}],["boost_src_dir=$github_workspace/boost",{"_index":309,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["both",{"_index":434,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["branch",{"_index":260,"title":{},"name":{},"text":{"5":{},"8":{},"9":{}},"component":{}}],["break",{"_index":367,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["build",{"_index":221,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"11":{}},"component":{}}],["built",{"_index":492,"title":{},"name":{},"text":{"8":{},"13":{}},"component":{}}],["bump|set)\\s+vers",{"_index":390,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["c",{"_index":13,"title":{"2":{},"12":{},"8-1":{}},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"9":{},"10":{},"12":{},"13":{}},"component":{}}],["cach",{"_index":244,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["call",{"_index":483,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["case",{"_index":340,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["categori",{"_index":365,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["caus",{"_index":474,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["cc",{"_index":302,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"10":{},"12":{},"13":{}},"component":{}}],["ccach",{"_index":463,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["challeng",{"_index":16,"title":{},"name":{},"text":{"2":{}},"component":{}}],["chang",{"_index":368,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["changelog",{"_index":342,"title":{"7":{},"8-18":{}},"name":{"7":{}},"text":{"7":{},"8":{}},"component":{}}],["changelog.md",{"_index":352,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["changelog@mast",{"_index":382,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["charg",{"_index":102,"title":{},"name":{},"text":{"3":{}},"component":{}}],["check",{"_index":417,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["checkout",{"_index":375,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["ci",{"_index":373,"title":{},"name":{},"text":{"7":{},"8":{},"13":{}},"component":{}}],["circumstanti",{"_index":486,"title":{},"name":{},"text":{"8":{},"10":{},"13":{}},"component":{}}],["clang",{"_index":199,"title":{"10":{},"8-27":{}},"name":{"10":{}},"text":{"4":{},"8":{},"9":{},"10":{},"12":{}},"component":{}}],["clone",{"_index":242,"title":{"5":{},"8-12":{}},"name":{"5":{}},"text":{"5":{},"7":{},"8":{},"9":{}},"component":{}}],["clone@mast",{"_index":259,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["cmake",{"_index":270,"title":{"6":{},"11":{},"8-9":{},"8-21":{}},"name":{"6":{},"11":{}},"text":{"6":{},"8":{},"9":{},"11":{}},"component":{}}],["cmake_build_typ",{"_index":286,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["cmake_configuration_typ",{"_index":284,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["cmake_minimum_requir",{"_index":324,"title":{},"name":{},"text":{"6":{},"8":{},"11":{}},"component":{}}],["cmakelists.txt",{"_index":326,"title":{},"name":{},"text":{"6":{},"8":{},"11":{}},"component":{}}],["code",{"_index":87,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["collect",{"_index":46,"title":{},"name":{},"text":{"2":{}},"component":{}}],["command",{"_index":241,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["commit",{"_index":344,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["common",{"_index":54,"title":{},"name":{},"text":{"2":{},"8":{},"9":{}},"component":{}}],["compat",{"_index":75,"title":{},"name":{},"text":{"2":{}},"component":{}}],["compil",{"_index":23,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["complet",{"_index":171,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{}},"component":{}}],["complex",{"_index":31,"title":{},"name":{},"text":{"2":{}},"component":{}}],["compos",{"_index":271,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["comprehens",{"_index":39,"title":{},"name":{},"text":{"2":{}},"component":{}}],["config",{"_index":283,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["config.jam",{"_index":179,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["configur",{"_index":59,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["conflict",{"_index":475,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["connect",{"_index":164,"title":{},"name":{},"text":{"3":{}},"component":{}}],["consid",{"_index":20,"title":{},"name":{},"text":{"2":{},"7":{},"8":{}},"component":{}}],["constraint",{"_index":388,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["contain",{"_index":347,"title":{},"name":{},"text":{"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["contract",{"_index":160,"title":{},"name":{},"text":{"3":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["contribut",{"_index":0,"title":{"1":{}},"name":{"1":{}},"text":{},"component":{}}],["convent",{"_index":357,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["copi",{"_index":106,"title":{},"name":{},"text":{"3":{}},"component":{}}],["copyright",{"_index":122,"title":{},"name":{},"text":{"3":{}},"component":{}}],["correctli",{"_index":74,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cover",{"_index":40,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["cpio",{"_index":459,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["cpp",{"_index":12,"title":{},"name":{"12":{}},"text":{"8":{},"10":{},"12":{},"13":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}}}],["cpp.outputs.cc",{"_index":304,"title":{},"name":{},"text":{"6":{},"8":{},"9":{}},"component":{}}],["cpp.outputs.cxx",{"_index":305,"title":{},"name":{},"text":{"6":{},"8":{},"9":{}},"component":{}}],["cpp@master",{"_index":405,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["creat",{"_index":53,"title":{"7":{},"8-18":{}},"name":{"7":{}},"text":{"2":{},"4":{},"6":{},"7":{},"8":{}},"component":{}}],["curl",{"_index":445,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["current",{"_index":275,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["custom",{"_index":223,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["cxx",{"_index":198,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"10":{},"12":{},"13":{}},"component":{}}],["cxxflag",{"_index":210,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["cxxstd",{"_index":195,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["d",{"_index":308,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["damag",{"_index":158,"title":{},"name":{},"text":{"3":{}},"component":{}}],["deal",{"_index":165,"title":{},"name":{},"text":{"3":{}},"component":{}}],["debug",{"_index":315,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["default",{"_index":219,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["defin",{"_index":325,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["delimit",{"_index":387,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["deliv",{"_index":88,"title":{},"name":{},"text":{"2":{}},"component":{}}],["depend",{"_index":249,"title":{"9":{},"8-5":{}},"name":{},"text":{"5":{},"8":{},"9":{},"11":{}},"component":{}}],["depth",{"_index":372,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["deriv",{"_index":115,"title":{},"name":{},"text":{"3":{}},"component":{}}],["describ",{"_index":335,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["descript",{"_index":218,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["design",{"_index":49,"title":{},"name":{},"text":{"2":{}},"component":{}}],["determin",{"_index":251,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["dev",{"_index":450,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["develop",{"_index":64,"title":{},"name":{},"text":{"2":{}},"component":{}}],["differ",{"_index":22,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["difficult",{"_index":37,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dir",{"_index":189,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["directori",{"_index":174,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["disclaim",{"_index":129,"title":{},"name":{},"text":{"3":{}},"component":{}}],["display",{"_index":110,"title":{},"name":{},"text":{"3":{}},"component":{}}],["dispos",{"_index":83,"title":{},"name":{},"text":{"2":{}},"component":{}}],["distribut",{"_index":111,"title":{},"name":{},"text":{"3":{}},"component":{}}],["distutil",{"_index":465,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["document",{"_index":108,"title":{},"name":{},"text":{"3":{}},"component":{}}],["download",{"_index":413,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["each",{"_index":291,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["easili",{"_index":62,"title":{},"name":{},"text":{"2":{}},"component":{}}],["effici",{"_index":68,"title":{},"name":{},"text":{"2":{}},"component":{}}],["effort",{"_index":70,"title":{},"name":{},"text":{"2":{}},"component":{}}],["emit",{"_index":295,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["enough",{"_index":341,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["ensur",{"_index":72,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["entir",{"_index":124,"title":{},"name":{},"text":{"3":{}},"component":{}}],["entri",{"_index":429,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["environ",{"_index":51,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["error",{"_index":294,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["essenti",{"_index":451,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["event",{"_index":153,"title":{},"name":{},"text":{"3":{}},"component":{}}],["exact",{"_index":409,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["exampl",{"_index":166,"title":{"4-1":{},"5-1":{},"6-1":{},"7-1":{},"8-2":{},"8-6":{},"8-10":{},"8-13":{},"8-16":{},"8-19":{},"9-1":{},"12-1":{}},"name":{},"text":{"4":{},"6":{},"8":{},"9":{},"11":{}},"component":{}}],["execut",{"_index":112,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["exist",{"_index":318,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["explicitli",{"_index":247,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["express",{"_index":143,"title":{},"name":{},"text":{"3":{}},"component":{}}],["extra",{"_index":229,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["factor",{"_index":19,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fail",{"_index":479,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["fals",{"_index":237,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["featur",{"_index":35,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["feel",{"_index":6,"title":{},"name":{},"text":{"1":{}},"component":{}}],["fetch",{"_index":371,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["file",{"_index":172,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"11":{},"13":{}},"component":{}}],["filenam",{"_index":337,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["find",{"_index":412,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["first",{"_index":245,"title":{},"name":{},"text":{"5":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["fit",{"_index":147,"title":{},"name":{},"text":{"3":{}},"component":{}}],["flag",{"_index":230,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["fmt",{"_index":437,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["focu",{"_index":84,"title":{},"name":{},"text":{"2":{}},"component":{}}],["follow",{"_index":121,"title":{},"name":{},"text":{"3":{},"6":{},"7":{},"8":{}},"component":{}}],["footer",{"_index":361,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["footer(",{"_index":360,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["forc",{"_index":329,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["form",{"_index":134,"title":{},"name":{},"text":{"3":{}},"component":{}}],["format",{"_index":358,"title":{},"name":{},"text":{"7":{},"8":{},"9":{}},"component":{}}],["found",{"_index":430,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["free",{"_index":7,"title":{},"name":{},"text":{"1":{},"3":{}},"component":{}}],["fsanitize=undefin",{"_index":311,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["function",{"_index":73,"title":{},"name":{},"text":{"2":{}},"component":{}}],["furnish",{"_index":119,"title":{},"name":{},"text":{"3":{}},"component":{}}],["furthermor",{"_index":29,"title":{},"name":{},"text":{"2":{}},"component":{}}],["g",{"_index":306,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"12":{},"13":{}},"component":{}}],["gcc",{"_index":193,"title":{"13":{},"8-24":{}},"name":{"13":{}},"text":{"4":{},"6":{},"8":{},"9":{},"12":{},"13":{}},"component":{}}],["gener",{"_index":137,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"8":{}},"component":{}}],["git",{"_index":467,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["github",{"_index":47,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["github_workspace/.loc",{"_index":301,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["given",{"_index":424,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["go",{"_index":346,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["goe",{"_index":364,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["grant",{"_index":101,"title":{},"name":{},"text":{"3":{}},"component":{}}],["great",{"_index":89,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hash",{"_index":393,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["help",{"_index":71,"title":{},"name":{},"text":{"2":{}},"component":{}}],["helper",{"_index":456,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["herebi",{"_index":100,"title":{},"name":{},"text":{"3":{}},"component":{}}],["high",{"_index":85,"title":{},"name":{},"text":{"2":{}},"component":{}}],["histori",{"_index":345,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["hit",{"_index":427,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["holder",{"_index":155,"title":{},"name":{},"text":{"3":{}},"component":{}}],["hour",{"_index":491,"title":{},"name":{},"text":{"8":{},"13":{}},"component":{}}],["http",{"_index":447,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["id",{"_index":407,"title":{},"name":{},"text":{"8":{},"9":{},"12":{}},"component":{}}],["identifi",{"_index":274,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["ignor",{"_index":269,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{}},"component":{}}],["impli",{"_index":144,"title":{},"name":{},"text":{"3":{}},"component":{}}],["implicitli",{"_index":250,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["import",{"_index":470,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["imposs",{"_index":490,"title":{},"name":{},"text":{"8":{},"13":{}},"component":{}}],["includ",{"_index":126,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"8":{}},"component":{}}],["independ",{"_index":268,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["index",{"_index":14,"title":{},"name":{"2":{},"8":{}},"text":{},"component":{}}],["indic",{"_index":363,"title":{},"name":{},"text":{"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["infer",{"_index":416,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["infring",{"_index":152,"title":{},"name":{},"text":{"3":{}},"component":{}}],["initi",{"_index":343,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["input",{"_index":167,"title":{"4-2":{},"5-2":{},"6-2":{},"7-2":{},"8-3":{},"8-7":{},"8-11":{},"8-14":{},"8-17":{},"8-20":{},"8-22":{},"8-25":{},"8-28":{},"9-2":{},"10-1":{},"11-1":{},"12-2":{},"13-1":{}},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["instal",{"_index":266,"title":{"9":{},"8-5":{}},"name":{"9":{}},"text":{"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["install.outputs.vcpkg",{"_index":299,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["install@mast",{"_index":436,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["instanc",{"_index":278,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["instead",{"_index":285,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["integr",{"_index":63,"title":{},"name":{},"text":{"2":{}},"component":{}}],["itself",{"_index":30,"title":{},"name":{},"text":{"2":{}},"component":{}}],["j",{"_index":485,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["job",{"_index":353,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["key",{"_index":480,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["kind",{"_index":142,"title":{},"name":{},"text":{"3":{}},"component":{}}],["languag",{"_index":32,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["later",{"_index":287,"title":{},"name":{},"text":{"6":{},"8":{},"9":{}},"component":{}}],["latest",{"_index":333,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["leverag",{"_index":60,"title":{},"name":{},"text":{"2":{}},"component":{}}],["liabil",{"_index":159,"title":{},"name":{},"text":{"3":{}},"component":{}}],["liabl",{"_index":157,"title":{},"name":{},"text":{"3":{}},"component":{}}],["libc",{"_index":455,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["libpython",{"_index":464,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["librari",{"_index":15,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"13":{}},"component":{}}],["libssl",{"_index":449,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["libstdc",{"_index":473,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["licens",{"_index":92,"title":{"3":{}},"name":{"3":{}},"text":{"3":{}},"component":{}}],["limit",{"_index":145,"title":{},"name":{},"text":{"3":{},"7":{},"8":{}},"component":{}}],["link",{"_index":472,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["linker",{"_index":231,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["linkflag",{"_index":211,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["linux",{"_index":471,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["list",{"_index":224,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{}},"component":{}}],["local",{"_index":369,"title":{},"name":{},"text":{"7":{},"8":{},"13":{}},"component":{}}],["local/usr",{"_index":331,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["loos",{"_index":356,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["machin",{"_index":135,"title":{},"name":{},"text":{"3":{},"8":{},"13":{}},"component":{}}],["major",{"_index":425,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["make",{"_index":36,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"9":{}},"component":{}}],["makefil",{"_index":314,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["manag",{"_index":432,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["master",{"_index":261,"title":{},"name":{},"text":{"5":{},"8":{},"9":{}},"component":{}}],["match",{"_index":323,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["matrix.instal",{"_index":406,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["merchant",{"_index":146,"title":{},"name":{},"text":{"3":{}},"component":{}}],["messag",{"_index":366,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["method",{"_index":489,"title":{},"name":{},"text":{"8":{},"13":{}},"component":{}}],["min",{"_index":321,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["minim",{"_index":69,"title":{},"name":{},"text":{"2":{}},"component":{}}],["minimum",{"_index":273,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["minor",{"_index":426,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["minut",{"_index":256,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["miss",{"_index":439,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["model",{"_index":202,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["modul",{"_index":177,"title":{},"name":{},"text":{"4":{},"5":{},"8":{}},"component":{}}],["msvc",{"_index":203,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["multi",{"_index":282,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["multilib",{"_index":460,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["multipl",{"_index":289,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"11":{}},"component":{}}],["name",{"_index":184,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"12":{}},"component":{}}],["need",{"_index":27,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["non",{"_index":151,"title":{},"name":{},"text":{"3":{}},"component":{}}],["note",{"_index":370,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["notic",{"_index":123,"title":{},"name":{},"text":{"3":{}},"component":{}}],["number",{"_index":380,"title":{},"name":{},"text":{"7":{},"8":{},"9":{},"10":{},"13":{}},"component":{}}],["object",{"_index":136,"title":{},"name":{},"text":{"3":{}},"component":{}}],["obtain",{"_index":105,"title":{},"name":{},"text":{"3":{}},"component":{}}],["offici",{"_index":488,"title":{},"name":{},"text":{"8":{},"13":{}},"component":{}}],["on",{"_index":3,"title":{},"name":{},"text":{"1":{}},"component":{}}],["onc",{"_index":290,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["oper",{"_index":24,"title":{},"name":{},"text":{"2":{}},"component":{}}],["option",{"_index":239,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["organ",{"_index":104,"title":{},"name":{},"text":{"3":{}},"component":{}}],["otherwis",{"_index":162,"title":{},"name":{},"text":{"3":{}},"component":{}}],["out",{"_index":79,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["output",{"_index":383,"title":{"8-4":{},"8-8":{},"8-23":{},"8-26":{},"8-29":{},"9-3":{},"10-2":{},"11-2":{},"12-3":{},"13-2":{}},"name":{},"text":{"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["overrid",{"_index":408,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["packag",{"_index":431,"title":{},"name":{"9":{}},"text":{"8":{},"9":{}},"component":{}}],["parallel",{"_index":484,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["paramet",{"_index":168,"title":{"4-2":{},"5-2":{},"6-2":{},"7-2":{},"8-3":{},"8-7":{},"8-11":{},"8-14":{},"8-17":{},"8-20":{},"8-22":{},"8-25":{},"8-28":{},"9-2":{},"10-1":{},"11-1":{},"12-2":{},"13-1":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["pars",{"_index":355,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["part",{"_index":131,"title":{},"name":{},"text":{"3":{}},"component":{}}],["parti",{"_index":118,"title":{},"name":{},"text":{"3":{}},"component":{}}],["particular",{"_index":148,"title":{},"name":{},"text":{"3":{}},"component":{}}],["particularli",{"_index":180,"title":{},"name":{},"text":{"4":{},"8":{},"9":{}},"component":{}}],["pass",{"_index":402,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["patch",{"_index":265,"title":{},"name":{},"text":{"5":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["path",{"_index":228,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["pattern",{"_index":348,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["perform",{"_index":376,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["permiss",{"_index":99,"title":{},"name":{},"text":{"3":{}},"component":{}}],["permit",{"_index":116,"title":{},"name":{},"text":{"3":{}},"component":{}}],["person",{"_index":103,"title":{},"name":{},"text":{"3":{}},"component":{}}],["pip",{"_index":466,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["pkgconf",{"_index":461,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["platform",{"_index":2,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"13":{}},"component":{}}],["possibl",{"_index":41,"title":{},"name":{},"text":{"2":{}},"component":{}}],["power",{"_index":61,"title":{},"name":{},"text":{"2":{}},"component":{}}],["pr",{"_index":9,"title":{},"name":{},"text":{"1":{}},"component":{}}],["prefix",{"_index":300,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["prepar",{"_index":114,"title":{},"name":{},"text":{"3":{}},"component":{}}],["processor",{"_index":139,"title":{},"name":{},"text":{"3":{}},"component":{}}],["program",{"_index":233,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["project",{"_index":254,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["proper",{"_index":178,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["properti",{"_index":442,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["propos",{"_index":181,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["provid",{"_index":45,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"10":{},"13":{}},"component":{}}],["purpos",{"_index":149,"title":{},"name":{},"text":{"3":{}},"component":{}}],["python",{"_index":457,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["python3",{"_index":462,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["qualiti",{"_index":86,"title":{},"name":{},"text":{"2":{}},"component":{}}],["quickli",{"_index":67,"title":{},"name":{},"text":{"2":{}},"component":{}}],["rang",{"_index":34,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["read",{"_index":482,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["ref",{"_index":310,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["refer",{"_index":336,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["regex",{"_index":386,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["rel",{"_index":328,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["releas",{"_index":330,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"10":{},"13":{}},"component":{}}],["reliabl",{"_index":82,"title":{},"name":{},"text":{"2":{}},"component":{}}],["repositori",{"_index":44,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"13":{}},"component":{}}],["reproduc",{"_index":109,"title":{},"name":{},"text":{"3":{}},"component":{}}],["requir",{"_index":320,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"11":{}},"component":{}}],["resili",{"_index":55,"title":{},"name":{},"text":{"2":{}},"component":{}}],["respect",{"_index":419,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["restrict",{"_index":128,"title":{},"name":{},"text":{"3":{}},"component":{}}],["result",{"_index":349,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["retri",{"_index":477,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["robust",{"_index":81,"title":{},"name":{},"text":{"2":{}},"component":{}}],["root",{"_index":190,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{}},"component":{}}],["rout",{"_index":400,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["rubi",{"_index":458,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["run",{"_index":170,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"13":{}},"component":{}}],["s",{"_index":279,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["same",{"_index":392,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["sanit",{"_index":236,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["satisfi",{"_index":319,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["save",{"_index":255,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["scan",{"_index":248,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["scenario",{"_index":42,"title":{},"name":{},"text":{"2":{}},"component":{}}],["scope",{"_index":359,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["script",{"_index":257,"title":{},"name":{},"text":{"5":{},"8":{},"13":{}},"component":{}}],["season",{"_index":77,"title":{},"name":{},"text":{"2":{}},"component":{}}],["semver",{"_index":316,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["semver’",{"_index":410,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["separ",{"_index":469,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["set",{"_index":56,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["setup",{"_index":398,"title":{"10":{},"11":{},"12":{},"13":{},"8-1":{},"8-21":{},"8-24":{},"8-27":{}},"name":{"10":{},"11":{},"12":{},"13":{}},"text":{"8":{},"10":{},"12":{},"13":{}},"component":{}}],["shall",{"_index":154,"title":{},"name":{},"text":{"3":{}},"component":{}}],["shallow",{"_index":377,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["softwar",{"_index":90,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"9":{}},"component":{}}],["sole",{"_index":133,"title":{},"name":{},"text":{"3":{}},"component":{}}],["sourc",{"_index":138,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"13":{}},"component":{}}],["spec",{"_index":418,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["special",{"_index":225,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["specif",{"_index":48,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"11":{},"13":{}},"component":{}}],["specifi",{"_index":176,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["standard",{"_index":232,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["start",{"_index":78,"title":{},"name":{},"text":{"2":{}},"component":{}}],["statement",{"_index":125,"title":{},"name":{},"text":{"3":{}},"component":{}}],["std",{"_index":334,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["stdlib=libc",{"_index":212,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["step",{"_index":183,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"12":{}},"component":{}}],["steps.packag",{"_index":298,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["steps.setup",{"_index":303,"title":{},"name":{},"text":{"6":{},"8":{},"9":{}},"component":{}}],["store",{"_index":396,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["streamlin",{"_index":80,"title":{},"name":{},"text":{"2":{}},"component":{}}],["string",{"_index":317,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["subject",{"_index":120,"title":{},"name":{},"text":{"3":{}},"component":{}}],["submit",{"_index":8,"title":{},"name":{},"text":{"1":{}},"component":{}}],["submodul",{"_index":267,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["such",{"_index":21,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["sudo",{"_index":441,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["summari",{"_index":354,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["super",{"_index":264,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["support",{"_index":28,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["syntax",{"_index":281,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["system",{"_index":25,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"10":{},"13":{}},"component":{}}],["tag",{"_index":391,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["take",{"_index":173,"title":{},"name":{},"text":{"4":{},"8":{},"13":{}},"component":{}}],["target",{"_index":288,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["task",{"_index":17,"title":{},"name":{},"text":{"2":{}},"component":{}}],["term",{"_index":420,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["test",{"_index":11,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"10":{},"13":{}},"component":{}}],["there’",{"_index":1,"title":{},"name":{},"text":{"1":{},"5":{},"8":{}},"component":{}}],["third",{"_index":117,"title":{},"name":{},"text":{"3":{}},"component":{}}],["thread",{"_index":238,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["through",{"_index":403,"title":{},"name":{},"text":{"8":{},"12":{}},"component":{}}],["time",{"_index":478,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["titl",{"_index":150,"title":{},"name":{},"text":{"3":{}},"component":{}}],["tool",{"_index":57,"title":{},"name":{},"text":{"2":{}},"component":{}}],["toolchain",{"_index":214,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"9":{}},"component":{}}],["toolset",{"_index":192,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["tort",{"_index":161,"title":{},"name":{},"text":{"3":{}},"component":{}}],["trace",{"_index":240,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["transmit",{"_index":113,"title":{},"name":{},"text":{"3":{}},"component":{}}],["transport",{"_index":446,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["triplet",{"_index":476,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["true",{"_index":208,"title":{},"name":{},"text":{"4":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["type",{"_index":312,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["typic",{"_index":338,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["tzdata",{"_index":443,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["ubsan",{"_index":207,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["undefin",{"_index":234,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["union",{"_index":252,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["unix",{"_index":313,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["unless",{"_index":132,"title":{},"name":{},"text":{"3":{}},"component":{}}],["unset",{"_index":374,"title":{},"name":{},"text":{"7":{},"8":{},"11":{}},"component":{}}],["unzip",{"_index":448,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["up",{"_index":272,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["updat",{"_index":226,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["us",{"_index":58,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["user",{"_index":91,"title":{},"name":{},"text":{"2":{},"4":{},"8":{}},"component":{}}],["usual",{"_index":322,"title":{},"name":{},"text":{"6":{},"8":{},"9":{}},"component":{}}],["v",{"_index":395,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["valid",{"_index":227,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["valu",{"_index":262,"title":{},"name":{},"text":{"5":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["variabl",{"_index":422,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["variant",{"_index":222,"title":{},"name":{},"text":{"4":{},"7":{},"8":{}},"component":{}}],["variant2",{"_index":191,"title":{},"name":{},"text":{"4":{},"5":{},"8":{}},"component":{}}],["varieti",{"_index":50,"title":{},"name":{},"text":{"2":{}},"component":{}}],["variou",{"_index":18,"title":{},"name":{},"text":{"2":{}},"component":{}}],["vcpkg",{"_index":433,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["version",{"_index":94,"title":{},"name":{},"text":{"3":{},"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["want",{"_index":421,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["warn",{"_index":293,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["warranti",{"_index":141,"title":{},"name":{},"text":{"3":{}},"component":{}}],["wget",{"_index":444,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["whatev",{"_index":175,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["whether",{"_index":76,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["whitespac",{"_index":468,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["whole",{"_index":130,"title":{},"name":{},"text":{"3":{}},"component":{}}],["whose",{"_index":384,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["wide",{"_index":33,"title":{},"name":{},"text":{"2":{}},"component":{}}],["without",{"_index":140,"title":{},"name":{},"text":{"3":{}},"component":{}}],["work",{"_index":5,"title":{},"name":{},"text":{"1":{},"3":{}},"component":{}}],["workflow",{"_index":65,"title":{"4":{},"6":{},"8-9":{},"8-15":{}},"name":{"4":{},"6":{}},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["workflow@mast",{"_index":188,"title":{},"name":{},"text":{"4":{},"6":{},"8":{}},"component":{}}],["write",{"_index":38,"title":{},"name":{},"text":{"2":{}},"component":{}}],["x64",{"_index":415,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}],["x86",{"_index":414,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"12":{},"13":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"If there’s a platform where one of the actions does not work, feel free to submit a PR with adaptations and tests.","title":"Contribute","component":"cpp-actions","version":"master","name":"contribute","url":"/cpp-actions/contribute.html","titles":[]},"2":{"id":2,"text":"Testing C++ libraries can be a challenging task, as there are various factors to consider such as the different compilers, operating systems, and architectures that the library may need to support. Furthermore, C++ itself is a complex language with a wide range of features, making it difficult to write comprehensive tests that cover all possible scenarios. To address these challenges, this repository provides a collection of GitHub actions that are specifically designed to test C++ libraries in a variety of environments. These actions aim to create a common and resilient set of tools that can be used to test libraries across a wide range of platforms and configurations. By leveraging the power of GitHub Actions, these C++ testing tools can be easily integrated into a development workflow, allowing developers to quickly and efficiently test their libraries with minimal effort. This can help to ensure that the library is functioning correctly and that it is compatible with a wide range of platforms and configurations. Whether you are a seasoned C++ developer or just starting out, these testing tools can help you to streamline your development workflow and ensure that your library is robust and reliable. With a comprehensive set of testing tools at your disposal, you can focus on writing high-quality code and delivering great software to your users.","title":"C++ Actions","component":"cpp-actions","version":"master","name":"index","url":"/cpp-actions/index.html","titles":[]},"3":{"id":3,"text":"Boost Software License - Version 1.0 - August 17th, 2003 Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and accompanying documentation covered by this license (the \"Software\") to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software is furnished to do so, all subject to the following: The copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License","component":"cpp-actions","version":"master","name":"license","url":"/cpp-actions/license.html","titles":[]},"4":{"id":4,"text":"This action runs a complete B2 workflow from Boost source files. It takes the Boost source directory and does whatever it needs to test the specified modules. This includes compiling b2 if needed and generating a proper user-config.jam file. This action is particularly useful for Boost library proposals. Example 1: steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: gcc-13 cxxstd: 17,20 Example 2 (cxx): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: clang cxx: clang++-12 cxxstd: 17,20 Example 3 (address-model): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: msvc-14.3 cxxstd: 17,20 address-model: 32,64 Example 4 (ubsan): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: gcc-13 cxxstd: 17,20 ubsan: 'true' Example 5 (cxxflags, linkflags): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: clang cxx: clang++-12 cxxstd: 17,20 cxxflags: -stdlib=libc++ linkflags: -stdlib=libc++ Example 6 (gcc-toolchain): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: clang cxx: clang++-8 cxxstd: '17' gcc-toolchain: '7' Parameter Description Default source-dir The boost source directory. . build-variant Custom build variants. modules The list of modules we should test. gcc-toolchain Create a special GCC toolchain for this version of GCC and update user-config.jam. toolset Toolset name. address-model Valid b2 list of address models. cxx Path to C++ compiler. cxxflags Extra compiler flags. linkflags Extra linker flags. cxxstd List of standards with which b2 will build and test the program. ubsan Whether the undefined behavior sanitizer should be used. false threading b2 threading option. trace-commands Trace commands executed by the workflow. false","title":"B2 Workflow","component":"cpp-actions","version":"master","name":"b2-workflow","url":"/cpp-actions/actions/b2-workflow.html","titles":[{"text":"Examples","hash":"_examples","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2}]},"5":{"id":5,"text":"This action clones the Boost source directory, attempting to get it from the cache first. Only the specified modules are cloned and cached. Besides the explicitly specified list of modules, the action can also scan directories for boost dependencies to implicitly determine what modules should be cloned. The union of the implicitly and explicitly specified modules is cloned. Caching is based only on these dependencies. For a project with about 5 boost dependencies, caching saves about 4 minutes in the workflow. When there’s no cache, the scanning scripting saves us about 3 minutes. steps: - name: Clone Boost.Variant2 uses: alandefreitas/cpp-actions/boost-clone@master with: boost-dir: boost-root branch: master modules: variant2 Parameter Description Default boost-dir The boost directory. The default value assumes boost is in-source. boost branch Branch of the super-project. master patches Libraries used to patch the boost installation. modules The boost submodules we need to clone. scan-modules-dir An independent directory we should scan for boost dependencies to clone. scan-modules-ignore List of modules that should be ignored in scan-modules. trace-commands Trace commands executed by the workflow. false","title":"Boost Clone","component":"cpp-actions","version":"master","name":"boost-clone","url":"/cpp-actions/actions/boost-clone.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2}]},"6":{"id":6,"text":"This action runs a complete CMake workflow from source files. A workflow is composed of the following steps: Configure Build Test Install The action also sets up the environment for the workflow: It validates the CMake version installed in the system, Updates CMake if the library has a different minimum version, Identifies what features the current CMake version supports, and Runs a complete cmake workflow The action will adjusts the parameters as needed according to the features that CMake version supports. For instance, If the CMake version does not support the -S …​ -B …​ syntax, the action will create the build directory and run the configuration step from there. If the specified or default generator is multi-config, CMAKE_CONFIGURATION_TYPES will be used instead of CMAKE_BUILD_TYPE, since the later is ignored by these generators. If the CMake version does not support the cmake --install syntax, the cmake --build --target install will be use instead. If the CMake version does not support multiple targets in the cmake --build syntax, the action will run the build step once for each target. The action also creates GitHub annotations when warnings or errors are emitted at any of these steps. This includes annotations for CMake errors at the configure step and build errors emitted from the compiler at the build step. Example 1: steps: - name: CMake Workflow uses: alandefreitas/cpp-actions/cmake-workflow@master with: cmake-version: '>=3.20' source-dir: tests toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }} run-tests: 'true' install-prefix: $GITHUB_WORKSPACE/.local cxxstd: 17,20 cc: ${{ steps.setup-cpp.outputs.cc || 'gcc-13' }} cxx: ${{ steps.setup-cpp.outputs.cxx || 'g++-13' }} extra-args: -D BOOST_SRC_DIR=$GITHUB_WORKSPACE/boost-root ref-source-dir: . Example 2 (cxxflags): steps: - name: CMake Workflow uses: alandefreitas/cpp-actions/cmake-workflow@master with: cmake-version: '>=3.20' source-dir: tests toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }} run-tests: 'true' install-prefix: $GITHUB_WORKSPACE/.local cxxstd: 17,20 cc: ${{ steps.setup-cpp.outputs.cc || 'gcc-13' }} cxx: ${{ steps.setup-cpp.outputs.cxx || 'g++-13' }} cxxflags: -fsanitize=undefined extra-args: -D BOOST_SRC_DIR=$GITHUB_WORKSPACE/boost-root ref-source-dir: . Example 3 (build-type, generator): steps: - name: CMake Workflow uses: alandefreitas/cpp-actions/cmake-workflow@master with: cmake-version: '>=3.20' source-dir: tests generator: Unix Makefiles toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }} build-type: Debug run-tests: 'true' install-prefix: $GITHUB_WORKSPACE/.local cc: ${{ steps.setup-cpp.outputs.cc || '' }} cxx: ${{ steps.setup-cpp.outputs.cxx || '' }} extra-args: -D BOOST_SRC_DIR=$GITHUB_WORKSPACE/boost-root ref-source-dir: . Parameter Description Default cmake-path The cmake executable. cmake cmake-version A semver range string with the cmake versions supported by this workflow. If the existing version in the environment does not satisfy this requirement, the action install the min CMake version that satisfies it. This should usually match the cmake_minimum_required defined in your CMakeLists.txt file. . source-dir Directory for the source files. . build-dir Directory for the binaries relative to the source directory. build cc Path to C compiler. cxx Path to C++ compiler. cxxstd List of standards with which cmake will build and test the program. cxxflags Force flags to be used with the C++ compiler. toolchain Path to toolchain. generator Generator name. build-type Build type. Release build-target Targets to build instead of the default target. install-prefix Path where the library should be installed. .local/usr extra-args Extra arguments to cmake configure command. run-tests Whether we should run tests. true install Whether we should install the library. The library is only installed once in the install-prefix. The latest std version described in cxxstd is used for the installed version. . true create-annotations Create github annotations on errors. true ref-source-dir A reference source directory for annotations. Any annotation filename will be relative to this directory. This is typically useful when the repository being tested is not the current directory, in which we need to make annotations relative to some other directory. In most cases, the default option should be enough. . . trace-commands Trace commands executed by the workflow. false","title":"CMake Workflow","component":"cpp-actions","version":"master","name":"cmake-workflow","url":"/cpp-actions/actions/cmake-workflow.html","titles":[{"text":"Examples","hash":"_examples","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2}]},"7":{"id":7,"text":"This action creates an initial Changelog from the commit history. The commits considered go from the latest commit up to a commit containing a version commit pattern specified by version-pattern. The result can be used as the initial body for an automated release, a CHANGELOG.md file, or a job summary. Each commit is parsed as a loose variant of a conventional commit in the following format: [optional scope]: [optional body] [optional footer(s)] The body and footer are always ignored. If no type is indicated, the description goes to an initial \"other\" category in the message. If no scope is indicated, the description goes to an initial \"general\" scope in the type messages. Breaking changes are indicated. This action uses the local commit history to generate the notes. Ensure the fetch-depth option is set when cloning your repository in CI. If this option is unset, the checkout action will perform a shallow clone and the Changelog will only include the latest commit. - uses: actions/checkout@v3 with: fetch-depth: 100 This parameter can also be used as a limit on the number of commits the action should consider. steps: - name: Create release notes uses: alandefreitas/cpp-actions/create-changelog@master with: output-path: CHANGELOG.md trace-commands: 'true' Parameter Description Default source-dir The source directory from whose commits will be analyzed . . version-pattern A regex pattern used to identify if a commit is a version delimiter. When a commit has a message that matches this pattern, the list of commits considered in the notes is complete. This constraint does not apply to the current and latest commit. . (Bump|Set)\\s+version tag-pattern A regex pattern used to identify if a commit is a tagged delimiter. When a commit has the same hash has the commit associated with a tag whose name matches this pattern, the list of commits considered in the notes is complete. This constraint does not apply to the current and latest commit. . v.\\..\\..* output-path The path where the changelog will be stored . CHANGELOG.md limit The limit on the number of commits considered in the Changelog . 0 trace-commands Trace commands executed by the workflow. false","title":"Create Changelog","component":"cpp-actions","version":"master","name":"create-changelog","url":"/cpp-actions/actions/create-changelog.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2}]},"8":{"id":8,"text":"Setup C++ Install dependencies CMake Workflow Boost Clone B2 Workflow Create Changelog Setup CMake Setup GCC Setup Clang Set up a C++ compiler and add it to the PATH. This action routes to the appropriate setup-gcc or setup-clang actions. Other compilers are passed through. steps: - name: Setup C++ uses: alandefreitas/cpp-actions/setup-cpp@master if: ${{ 'true' && !matrix.install }} id: setup-cpp with: compiler: g++-13 Parameter Description Default compiler Compiler name. If the compiler contains a version, it overrides 'version'. . * version Version range or exact version of GCC to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. . * path The compiler executable. We attempt to find the compiler at this path first. g++ cache Used to specify whether the compiler installation should be cached in case it needs to be downloaded.\" . true architecture The target architecture (x86, x64). By default, this value is inferred. . check-latest By default, when the compiler is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum GCC version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. . false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the C compiler executable. cxx The absolute path to the C++ compiler executable. dir The absolute path to the directory containing the executable. version The installed compiler version. Useful when given a version range as input. version-major The installed compiler version major. Useful when given a version range as input. version-minor The installed compiler version minor. Useful when given a version range as input. version-patch The installed compiler version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found This action installs dependencies from multiple package managers for a workflow. If vcpkg dependencies are required and vcpkg is not available, it will be installed. Both vcpkg and its dependencies are cached. Example 1: steps: - name: Install packages uses: alandefreitas/cpp-actions/package-install@master id: package-install with: vcpkg: fmt cxx: ${{ ( 'g++-13' && format ( '{0} {1}' , steps.setup-cpp.outputs.cxx || 'g++-13' , '' ) ) || '' }} cc: ${{ steps.setup-cpp.outputs.cc || 'gcc-13' }} Example 2 (apt-get-ignore-missing, apt-get): steps: - name: Install packages uses: alandefreitas/cpp-actions/package-install@master id: package-install with: vcpkg: fmt apt-get: clang-3.8 sudo software-properties-common tzdata wget curl apt-transport-https make apt-file unzip libssl-dev build-essential autotools-dev autoconf automake g++ libc++-helpers python ruby cpio gcc-multilib g++-multilib pkgconf python3 ccache libpython-dev python3-distutils python3-pip git cmake apt-get-ignore-missing: 'true' cxx: ${{ ( 'clang++-3.8' && format ( '{0} {1}' , steps.setup-cpp.outputs.cxx || 'clang++-3.8' , '' ) ) || '' }} cc: ${{ steps.setup-cpp.outputs.cc || 'clang-3.8' }} Parameter Description Default vcpkg List of packages we should install with vcpkg. (Whitespace-separated). apt-get List of packages we should install with apt-get. (Whitespace-separated). cxx C compiler used by vcpkg. Setting the compiler is particularly important in Linux workflows that use `clang`, since `clang` might link `libc` or libstdc`, while the default compiler used by vcpkg will usually be GCC linking `libstdc. This would cause conflict in workflows that later attempt to use vcpkg dependencies. . cc C compiler used by vcpkg. vcpkg-triplet The triplet used by vcpkg to install packages. vcpkg-dir The directory where vcpkg should be cloned and installed. vcpkg vcpkg-branch vcpkg branch we should use. master apt-get-retries Number of times we should retry when apt-get fails. 1 apt-get-sources List of sources for apt-get. apt-get-source-keys List of source keys for apt-get. apt-get-ignore-missing Whether apt-get should ignore missing packages. false Output Description vcpkg-toolchain vcpkg toolchain file vcpkg-executable vcpkg toolchain file This action runs a complete CMake workflow from source files. A workflow is composed of the following steps: Configure Build Test Install The action also sets up the environment for the workflow: It validates the CMake version installed in the system, Updates CMake if the library has a different minimum version, Identifies what features the current CMake version supports, and Runs a complete cmake workflow The action will adjusts the parameters as needed according to the features that CMake version supports. For instance, If the CMake version does not support the -S …​ -B …​ syntax, the action will create the build directory and run the configuration step from there. If the specified or default generator is multi-config, CMAKE_CONFIGURATION_TYPES will be used instead of CMAKE_BUILD_TYPE, since the later is ignored by these generators. If the CMake version does not support the cmake --install syntax, the cmake --build --target install will be use instead. If the CMake version does not support multiple targets in the cmake --build syntax, the action will run the build step once for each target. The action also creates GitHub annotations when warnings or errors are emitted at any of these steps. This includes annotations for CMake errors at the configure step and build errors emitted from the compiler at the build step. Example 1: steps: - name: CMake Workflow uses: alandefreitas/cpp-actions/cmake-workflow@master with: cmake-version: '>=3.20' source-dir: tests toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }} run-tests: 'true' install-prefix: $GITHUB_WORKSPACE/.local cxxstd: 17,20 cc: ${{ steps.setup-cpp.outputs.cc || 'gcc-13' }} cxx: ${{ steps.setup-cpp.outputs.cxx || 'g++-13' }} extra-args: -D BOOST_SRC_DIR=$GITHUB_WORKSPACE/boost-root ref-source-dir: . Example 2 (cxxflags): steps: - name: CMake Workflow uses: alandefreitas/cpp-actions/cmake-workflow@master with: cmake-version: '>=3.20' source-dir: tests toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }} run-tests: 'true' install-prefix: $GITHUB_WORKSPACE/.local cxxstd: 17,20 cc: ${{ steps.setup-cpp.outputs.cc || 'gcc-13' }} cxx: ${{ steps.setup-cpp.outputs.cxx || 'g++-13' }} cxxflags: -fsanitize=undefined extra-args: -D BOOST_SRC_DIR=$GITHUB_WORKSPACE/boost-root ref-source-dir: . Example 3 (build-type, generator): steps: - name: CMake Workflow uses: alandefreitas/cpp-actions/cmake-workflow@master with: cmake-version: '>=3.20' source-dir: tests generator: Unix Makefiles toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }} build-type: Debug run-tests: 'true' install-prefix: $GITHUB_WORKSPACE/.local cc: ${{ steps.setup-cpp.outputs.cc || '' }} cxx: ${{ steps.setup-cpp.outputs.cxx || '' }} extra-args: -D BOOST_SRC_DIR=$GITHUB_WORKSPACE/boost-root ref-source-dir: . Parameter Description Default cmake-path The cmake executable. cmake cmake-version A semver range string with the cmake versions supported by this workflow. If the existing version in the environment does not satisfy this requirement, the action install the min CMake version that satisfies it. This should usually match the cmake_minimum_required defined in your CMakeLists.txt file. . source-dir Directory for the source files. . build-dir Directory for the binaries relative to the source directory. build cc Path to C compiler. cxx Path to C++ compiler. cxxstd List of standards with which cmake will build and test the program. cxxflags Force flags to be used with the C++ compiler. toolchain Path to toolchain. generator Generator name. build-type Build type. Release build-target Targets to build instead of the default target. install-prefix Path where the library should be installed. .local/usr extra-args Extra arguments to cmake configure command. run-tests Whether we should run tests. true install Whether we should install the library. The library is only installed once in the install-prefix. The latest std version described in cxxstd is used for the installed version. . true create-annotations Create github annotations on errors. true ref-source-dir A reference source directory for annotations. Any annotation filename will be relative to this directory. This is typically useful when the repository being tested is not the current directory, in which we need to make annotations relative to some other directory. In most cases, the default option should be enough. . . trace-commands Trace commands executed by the workflow. false This action clones the Boost source directory, attempting to get it from the cache first. Only the specified modules are cloned and cached. Besides the explicitly specified list of modules, the action can also scan directories for boost dependencies to implicitly determine what modules should be cloned. The union of the implicitly and explicitly specified modules is cloned. Caching is based only on these dependencies. For a project with about 5 boost dependencies, caching saves about 4 minutes in the workflow. When there’s no cache, the scanning scripting saves us about 3 minutes. steps: - name: Clone Boost.Variant2 uses: alandefreitas/cpp-actions/boost-clone@master with: boost-dir: boost-root branch: master modules: variant2 Parameter Description Default boost-dir The boost directory. The default value assumes boost is in-source. boost branch Branch of the super-project. master patches Libraries used to patch the boost installation. modules The boost submodules we need to clone. scan-modules-dir An independent directory we should scan for boost dependencies to clone. scan-modules-ignore List of modules that should be ignored in scan-modules. trace-commands Trace commands executed by the workflow. false This action runs a complete B2 workflow from Boost source files. It takes the Boost source directory and does whatever it needs to test the specified modules. This includes compiling b2 if needed and generating a proper user-config.jam file. This action is particularly useful for Boost library proposals. Example 1: steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: gcc-13 cxxstd: 17,20 Example 2 (cxx): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: clang cxx: clang++-12 cxxstd: 17,20 Example 3 (address-model): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: msvc-14.3 cxxstd: 17,20 address-model: 32,64 Example 4 (ubsan): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: gcc-13 cxxstd: 17,20 ubsan: 'true' Example 5 (cxxflags, linkflags): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: clang cxx: clang++-12 cxxstd: 17,20 cxxflags: -stdlib=libc++ linkflags: -stdlib=libc++ Example 6 (gcc-toolchain): steps: - name: Test Boost.Variant2 uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: boost-root modules: variant2 toolset: clang cxx: clang++-8 cxxstd: '17' gcc-toolchain: '7' Parameter Description Default source-dir The boost source directory. . build-variant Custom build variants. modules The list of modules we should test. gcc-toolchain Create a special GCC toolchain for this version of GCC and update user-config.jam. toolset Toolset name. address-model Valid b2 list of address models. cxx Path to C++ compiler. cxxflags Extra compiler flags. linkflags Extra linker flags. cxxstd List of standards with which b2 will build and test the program. ubsan Whether the undefined behavior sanitizer should be used. false threading b2 threading option. trace-commands Trace commands executed by the workflow. false This action creates an initial Changelog from the commit history. The commits considered go from the latest commit up to a commit containing a version commit pattern specified by version-pattern. The result can be used as the initial body for an automated release, a CHANGELOG.md file, or a job summary. Each commit is parsed as a loose variant of a conventional commit in the following format: [optional scope]: [optional body] [optional footer(s)] The body and footer are always ignored. If no type is indicated, the description goes to an initial \"other\" category in the message. If no scope is indicated, the description goes to an initial \"general\" scope in the type messages. Breaking changes are indicated. This action uses the local commit history to generate the notes. Ensure the fetch-depth option is set when cloning your repository in CI. If this option is unset, the checkout action will perform a shallow clone and the Changelog will only include the latest commit. - uses: actions/checkout@v3 with: fetch-depth: 100 This parameter can also be used as a limit on the number of commits the action should consider. steps: - name: Create release notes uses: alandefreitas/cpp-actions/create-changelog@master with: output-path: CHANGELOG.md trace-commands: 'true' Parameter Description Default source-dir The source directory from whose commits will be analyzed . . version-pattern A regex pattern used to identify if a commit is a version delimiter. When a commit has a message that matches this pattern, the list of commits considered in the notes is complete. This constraint does not apply to the current and latest commit. . (Bump|Set)\\s+version tag-pattern A regex pattern used to identify if a commit is a tagged delimiter. When a commit has the same hash has the commit associated with a tag whose name matches this pattern, the list of commits considered in the notes is complete. This constraint does not apply to the current and latest commit. . v.\\..\\..* output-path The path where the changelog will be stored . CHANGELOG.md limit The limit on the number of commits considered in the Changelog . 0 trace-commands Trace commands executed by the workflow. false Set up a specific version of a CMake compiler and add it to the PATH. This action will also set-up any dependencies required by CMake. In most workflows, this is used as an auxiliary action for the cmake-workflow action. Parameter Description Default version Version range or exact version of CMake to use, using SemVer’s version range syntax. Reads from cmake-file input if unset. By default, it uses any version available in the environment. . * cmake-file File containing the CMake version to use in a cmake_minimum_required command. Example: A CMakeLists.txt file containing a call to cmake_minimum_required.\" . CMakeLists.txt cmake-path The cmake executable. We attempt to find cmake at this path first. cmake cache Used to specify whether the CMake installation should be cached in the case CMake needs to be downloaded.\" . True architecture The target architecture (x86, x64). By default, this value is inferred. . check-latest By default, when CMake is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum CMake version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. . update-environment Set this option if you want the action to update environment variables. True trace-commands Trace commands executed by the workflow. false Output Description version The installed CMake version. Useful when given a version range as input. version-major The installed CMake version major. Useful when given a version range as input. version-minor The installed CMake version minor. Useful when given a version range as input. version-patch The installed CMake version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found path The absolute path to the CMake executable. dir The absolute path to the CMake directory. supports-path-to-build Whether CMake supports the -B syntax supports-parallel-build Whether CMake supports the -j syntax supports-build-multiple-targets Whether CMake supports the --target with multiple targets supports-cmake-install Whether CMake supports the cmake --install Set up a specific version of a GCC compiler and add it to the PATH. In most workflows, this is used as an auxiliary action for the setup-cpp action. This allows us to test a C++ library with any GCC version, and not only the versions circumstantially provided by apt-get. This action uses a number of alternatives to find or install GCC: The GCC path provided to 'path' Any other version of GCC it can find in the system A version of GCC from our own binary releases The action will not attempt to install GCC from source files, which is the only officially supported method but impossible to run in CI because the machines would take hours to do that. If a version of GCC is not available by any other methods above, the GCC binaries for a given platform can be built locally with a script provided in this repository and added to our binary release. Parameter Description Default version Version range or exact version of GCC to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. . * path The gcc or g++ executable. We attempt to find GCC at this path first. g++ cache Used to specify whether the GCC installation should be cached in the case GCC needs to be downloaded.\" . true architecture The target architecture (x86, x64). By default, this value is inferred. . check-latest By default, when GCC is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum GCC version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. . false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the gcc executable. cxx The absolute path to the g++ executable. dir The absolute path to the GCC directory containing the executable. version The installed GCC version. Useful when given a version range as input. version-major The installed GCC version major. Useful when given a version range as input. version-minor The installed GCC version minor. Useful when given a version range as input. version-patch The installed GCC version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found Set up a specific version of a Clang compiler and add it to the PATH. In most workflows, this is used as an auxiliary action for the setup-cpp action. This allows us to test a C++ library with any Clang version, and not only the versions circumstantially provided by apt-get. This action uses a number of alternatives to find or install Clang: The Clang path provided to 'path' Any other version of Clang it can find in the system A version of Clang from our own binary releases Parameter Description Default version Version range or exact version of Clang to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. . * path The clang or clang++ executable. We attempt to find Clang at this path first. clang++ cache Used to specify whether the Clang installation should be cached in the case Clang needs to be downloaded.\" . true architecture The target architecture (x86, x64). By default, this value is inferred. . check-latest By default, when Clang is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum Clang version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. . false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the clang executable. cxx The absolute path to the clang++ executable. dir The absolute path to the Clang directory containing the executable. version The installed Clang version. Useful when given a version range as input. version-major The installed Clang version major. Useful when given a version range as input. version-minor The installed Clang version minor. Useful when given a version range as input. version-patch The installed Clang version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found","title":"Actions","component":"cpp-actions","version":"master","name":"index","url":"/cpp-actions/actions/index.html","titles":[{"text":"Setup C++","hash":"setup-cpp","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4},{"text":"Install dependencies","hash":"package-install","id":5},{"text":"Examples","hash":"_examples","id":6},{"text":"Input Parameters","hash":"_input_parameters_2","id":7},{"text":"Outputs","hash":"_outputs_2","id":8},{"text":"CMake Workflow","hash":"cmake-workflow","id":9},{"text":"Examples","hash":"_examples_2","id":10},{"text":"Input Parameters","hash":"_input_parameters_3","id":11},{"text":"Boost Clone","hash":"boost-clone","id":12},{"text":"Example","hash":"_example_2","id":13},{"text":"Input Parameters","hash":"_input_parameters_4","id":14},{"text":"B2 Workflow","hash":"b2-workflow","id":15},{"text":"Examples","hash":"_examples_3","id":16},{"text":"Input Parameters","hash":"_input_parameters_5","id":17},{"text":"Create Changelog","hash":"create-changelog","id":18},{"text":"Example","hash":"_example_3","id":19},{"text":"Input Parameters","hash":"_input_parameters_6","id":20},{"text":"Setup CMake","hash":"setup-cmake","id":21},{"text":"Input Parameters","hash":"_input_parameters_7","id":22},{"text":"Outputs","hash":"_outputs_3","id":23},{"text":"Setup GCC","hash":"setup-gcc","id":24},{"text":"Input Parameters","hash":"_input_parameters_8","id":25},{"text":"Outputs","hash":"_outputs_4","id":26},{"text":"Setup Clang","hash":"setup-clang","id":27},{"text":"Input Parameters","hash":"_input_parameters_9","id":28},{"text":"Outputs","hash":"_outputs_5","id":29}]},"9":{"id":9,"text":"This action installs dependencies from multiple package managers for a workflow. If vcpkg dependencies are required and vcpkg is not available, it will be installed. Both vcpkg and its dependencies are cached. Example 1: steps: - name: Install packages uses: alandefreitas/cpp-actions/package-install@master id: package-install with: vcpkg: fmt cxx: ${{ ( 'g++-13' && format ( '{0} {1}' , steps.setup-cpp.outputs.cxx || 'g++-13' , '' ) ) || '' }} cc: ${{ steps.setup-cpp.outputs.cc || 'gcc-13' }} Example 2 (apt-get-ignore-missing, apt-get): steps: - name: Install packages uses: alandefreitas/cpp-actions/package-install@master id: package-install with: vcpkg: fmt apt-get: clang-3.8 sudo software-properties-common tzdata wget curl apt-transport-https make apt-file unzip libssl-dev build-essential autotools-dev autoconf automake g++ libc++-helpers python ruby cpio gcc-multilib g++-multilib pkgconf python3 ccache libpython-dev python3-distutils python3-pip git cmake apt-get-ignore-missing: 'true' cxx: ${{ ( 'clang++-3.8' && format ( '{0} {1}' , steps.setup-cpp.outputs.cxx || 'clang++-3.8' , '' ) ) || '' }} cc: ${{ steps.setup-cpp.outputs.cc || 'clang-3.8' }} Parameter Description Default vcpkg List of packages we should install with vcpkg. (Whitespace-separated). apt-get List of packages we should install with apt-get. (Whitespace-separated). cxx C compiler used by vcpkg. Setting the compiler is particularly important in Linux workflows that use `clang`, since `clang` might link `libc` or libstdc`, while the default compiler used by vcpkg will usually be GCC linking `libstdc. This would cause conflict in workflows that later attempt to use vcpkg dependencies. . cc C compiler used by vcpkg. vcpkg-triplet The triplet used by vcpkg to install packages. vcpkg-dir The directory where vcpkg should be cloned and installed. vcpkg vcpkg-branch vcpkg branch we should use. master apt-get-retries Number of times we should retry when apt-get fails. 1 apt-get-sources List of sources for apt-get. apt-get-source-keys List of source keys for apt-get. apt-get-ignore-missing Whether apt-get should ignore missing packages. false Output Description vcpkg-toolchain vcpkg toolchain file vcpkg-executable vcpkg toolchain file","title":"Install dependencies","component":"cpp-actions","version":"master","name":"package-install","url":"/cpp-actions/actions/package-install.html","titles":[{"text":"Examples","hash":"_examples","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2},{"text":"Outputs","hash":"_outputs","id":3}]},"10":{"id":10,"text":"Set up a specific version of a Clang compiler and add it to the PATH. In most workflows, this is used as an auxiliary action for the setup-cpp action. This allows us to test a C++ library with any Clang version, and not only the versions circumstantially provided by apt-get. This action uses a number of alternatives to find or install Clang: The Clang path provided to 'path' Any other version of Clang it can find in the system A version of Clang from our own binary releases Parameter Description Default version Version range or exact version of Clang to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. . * path The clang or clang++ executable. We attempt to find Clang at this path first. clang++ cache Used to specify whether the Clang installation should be cached in the case Clang needs to be downloaded.\" . true architecture The target architecture (x86, x64). By default, this value is inferred. . check-latest By default, when Clang is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum Clang version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. . false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the clang executable. cxx The absolute path to the clang++ executable. dir The absolute path to the Clang directory containing the executable. version The installed Clang version. Useful when given a version range as input. version-major The installed Clang version major. Useful when given a version range as input. version-minor The installed Clang version minor. Useful when given a version range as input. version-patch The installed Clang version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found","title":"Setup Clang","component":"cpp-actions","version":"master","name":"setup-clang","url":"/cpp-actions/actions/setup-clang.html","titles":[{"text":"Input Parameters","hash":"_input_parameters","id":1},{"text":"Outputs","hash":"_outputs","id":2}]},"11":{"id":11,"text":"Set up a specific version of a CMake compiler and add it to the PATH. This action will also set-up any dependencies required by CMake. In most workflows, this is used as an auxiliary action for the cmake-workflow action. Parameter Description Default version Version range or exact version of CMake to use, using SemVer’s version range syntax. Reads from cmake-file input if unset. By default, it uses any version available in the environment. . * cmake-file File containing the CMake version to use in a cmake_minimum_required command. Example: A CMakeLists.txt file containing a call to cmake_minimum_required.\" . CMakeLists.txt cmake-path The cmake executable. We attempt to find cmake at this path first. cmake cache Used to specify whether the CMake installation should be cached in the case CMake needs to be downloaded.\" . True architecture The target architecture (x86, x64). By default, this value is inferred. . check-latest By default, when CMake is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum CMake version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. . update-environment Set this option if you want the action to update environment variables. True trace-commands Trace commands executed by the workflow. false Output Description version The installed CMake version. Useful when given a version range as input. version-major The installed CMake version major. Useful when given a version range as input. version-minor The installed CMake version minor. Useful when given a version range as input. version-patch The installed CMake version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found path The absolute path to the CMake executable. dir The absolute path to the CMake directory. supports-path-to-build Whether CMake supports the -B syntax supports-parallel-build Whether CMake supports the -j syntax supports-build-multiple-targets Whether CMake supports the --target with multiple targets supports-cmake-install Whether CMake supports the cmake --install","title":"Setup CMake","component":"cpp-actions","version":"master","name":"setup-cmake","url":"/cpp-actions/actions/setup-cmake.html","titles":[{"text":"Input Parameters","hash":"_input_parameters","id":1},{"text":"Outputs","hash":"_outputs","id":2}]},"12":{"id":12,"text":"Set up a C++ compiler and add it to the PATH. This action routes to the appropriate setup-gcc or setup-clang actions. Other compilers are passed through. steps: - name: Setup C++ uses: alandefreitas/cpp-actions/setup-cpp@master if: ${{ 'true' && !matrix.install }} id: setup-cpp with: compiler: g++-13 Parameter Description Default compiler Compiler name. If the compiler contains a version, it overrides 'version'. . * version Version range or exact version of GCC to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. . * path The compiler executable. We attempt to find the compiler at this path first. g++ cache Used to specify whether the compiler installation should be cached in case it needs to be downloaded.\" . true architecture The target architecture (x86, x64). By default, this value is inferred. . check-latest By default, when the compiler is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum GCC version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. . false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the C compiler executable. cxx The absolute path to the C++ compiler executable. dir The absolute path to the directory containing the executable. version The installed compiler version. Useful when given a version range as input. version-major The installed compiler version major. Useful when given a version range as input. version-minor The installed compiler version minor. Useful when given a version range as input. version-patch The installed compiler version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found","title":"Setup C++","component":"cpp-actions","version":"master","name":"setup-cpp","url":"/cpp-actions/actions/setup-cpp.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2},{"text":"Outputs","hash":"_outputs","id":3}]},"13":{"id":13,"text":"Set up a specific version of a GCC compiler and add it to the PATH. In most workflows, this is used as an auxiliary action for the setup-cpp action. This allows us to test a C++ library with any GCC version, and not only the versions circumstantially provided by apt-get. This action uses a number of alternatives to find or install GCC: The GCC path provided to 'path' Any other version of GCC it can find in the system A version of GCC from our own binary releases The action will not attempt to install GCC from source files, which is the only officially supported method but impossible to run in CI because the machines would take hours to do that. If a version of GCC is not available by any other methods above, the GCC binaries for a given platform can be built locally with a script provided in this repository and added to our binary release. Parameter Description Default version Version range or exact version of GCC to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. . * path The gcc or g++ executable. We attempt to find GCC at this path first. g++ cache Used to specify whether the GCC installation should be cached in the case GCC needs to be downloaded.\" . true architecture The target architecture (x86, x64). By default, this value is inferred. . check-latest By default, when GCC is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum GCC version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. . false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the gcc executable. cxx The absolute path to the g++ executable. dir The absolute path to the GCC directory containing the executable. version The installed GCC version. Useful when given a version range as input. version-major The installed GCC version major. Useful when given a version range as input. version-minor The installed GCC version minor. Useful when given a version range as input. version-patch The installed GCC version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found","title":"Setup GCC","component":"cpp-actions","version":"master","name":"setup-gcc","url":"/cpp-actions/actions/setup-gcc.html","titles":[{"text":"Input Parameters","hash":"_input_parameters","id":1},{"text":"Outputs","hash":"_outputs","id":2}]}},"components":{},"componentVersions":{"cpp-actions/master":{"displayVersion":"master","title":"C++ Actions","version":"master","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/index.html","urlType":"internal"},{"content":"Setup C++ Action","url":"/cpp-actions/actions/setup-cpp.html","urlType":"internal"},{"content":"Install dependencies Action","url":"/cpp-actions/actions/package-install.html","urlType":"internal"},{"content":"CMake Workflow Action","url":"/cpp-actions/actions/cmake-workflow.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/actions/boost-clone.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/actions/b2-workflow.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/actions/create-changelog.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/actions/setup-clang.html","urlType":"internal"},{"content":"Contribute","url":"/cpp-actions/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/develop":{"displayVersion":"develop","title":"C++ Actions","version":"develop","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/develop/index.html","navigation":[{"items":[{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/develop/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/develop/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/develop/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/develop/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/develop/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/develop/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/develop/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/develop/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/develop/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/develop/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/develop/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.1.0":{"displayVersion":"v1.1.0","title":"C++ Actions","version":"v1.1.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.1.0/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/v1.1.0/index.html","urlType":"internal"},{"content":"Install dependencies Action","url":"/cpp-actions/v1.1.0/actions/package-install.html","urlType":"internal"},{"content":"CMake Workflow Action","url":"/cpp-actions/v1.1.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.1.0/actions/boost-clone.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.1.0/actions/b2-workflow.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.1.0/actions/create-changelog.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.1.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.1.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Contribute","url":"/cpp-actions/v1.1.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.1.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.0.0":{"displayVersion":"v1.0.0","title":"C++ Actions","version":"v1.0.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{}]},"url":"/cpp-actions/v1.0.0/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/v1.0.0/index.html","urlType":"internal"},{"content":"Install dependencies Action","url":"/cpp-actions/v1.0.0/actions/package-install.html","urlType":"internal"},{"content":"CMake Workflow Action","url":"/cpp-actions/v1.0.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.0.0/actions/boost-clone.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.0.0/actions/b2-workflow.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.0.0/actions/create-changelog.html","urlType":"internal"},{"content":"Contribute","url":"/cpp-actions/v1.0.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.0.0/license.html","urlType":"internal"}],"root":true,"order":0}]}}}})