antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1",[0,35.096]],["name/1",[0,1.59]],["text/1",[1,4.641,2,3.629,3,3.629,4,1.398,5,4.056,6,6.391,7,5.042,8,5.577,9,5.577,10,5.577,11,2.892]],["component/1",[4,0.327,12,0.486]],["title/2-1",[13,29.586,14,25.362]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[11,13.866,15,24.173,16,11.885]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[17,27.237,18,37.504]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2-4",[16,14.546,19,23.801]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["title/2-5",[20,32.73,21,32.73]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["title/2-6",[22,32.73,23,13.068]],["name/2-6",[]],["text/2-6",[]],["component/2-6",[]],["title/2-7",[4,8.204,16,14.546]],["name/2-7",[]],["text/2-7",[]],["component/2-7",[]],["title/2-8",[24,32.73,25,18.47]],["name/2-8",[]],["text/2-8",[]],["component/2-8",[]],["title/2-9",[19,30.668]],["name/2-9",[]],["text/2-9",[]],["component/2-9",[]],["title/2-10",[26,19.32,27,19.32]],["name/2-10",[]],["text/2-10",[]],["component/2-10",[]],["title/2-11",[28,27.237,29,29.586]],["name/2-11",[]],["text/2-11",[]],["component/2-11",[]],["title/2-12",[30,22.464,31,22.464]],["name/2-12",[]],["text/2-12",[]],["component/2-12",[]],["title/2-13",[32,38.122]],["name/2-13",[]],["text/2-13",[]],["component/2-13",[]],["title/2-14",[4,8.204,33,29.586]],["name/2-14",[]],["text/2-14",[]],["component/2-14",[]],["title/2-15",[34,22.794]],["name/2-15",[]],["text/2-15",[]],["component/2-15",[]],["title/2-16",[35,21.868]],["name/2-16",[]],["text/2-16",[]],["component/2-16",[]],["title/2-17",[23,16.838]],["name/2-17",[]],["text/2-17",[]],["component/2-17",[]],["title/2-18",[36,29.586,37,23.801]],["name/2-18",[]],["text/2-18",[]],["component/2-18",[]],["title/2",[38,25.362,39,32.73]],["name/2",[38,1.48]],["text/2",[0,0.682,1,0.682,2,1.318,3,1.474,4,1.438,5,1.474,7,0.391,8,0.433,10,1.481,11,3.06,13,1.339,14,2.604,15,1.055,16,2.576,17,1.232,19,4.377,20,1.167,21,0.433,22,0.819,23,2.133,25,1.976,26,2.578,27,2.719,28,0.36,29,1.832,30,0.562,31,1.212,32,1.597,33,0.74,34,2.813,35,1.288,36,0.391,37,1.077,38,2.082,39,0.433,40,0.74,41,1.697,42,0.496,43,0.682,44,0.819,45,3.306,46,3.254,47,1.697,48,0.682,49,3.948,50,2.546,51,3.36,52,0.496,53,0.74,54,1.254,55,2.082,56,0.971,57,0.297,58,0.635,59,1.807,60,0.819,61,0.496,62,0.496,63,0.819,64,0.971,65,0.391,66,0.819,67,0.971,68,1.597,69,1.474,70,0.682,71,1.748,72,0.496,73,0.939,74,0.433,75,1.597,76,0.433,77,0.939,78,0.433,79,1.766,80,1.402,81,1.055,82,0.819,83,0.496,84,0.496,85,0.496,86,0.496,87,1.167,88,0.819,89,2.027,90,0.971,91,0.819,92,0.819,93,2.094,94,1.697,95,0.496,96,0.496,97,1.055,98,0.496,99,0.496,100,1.597,101,0.496,102,1.055,103,0.496,104,2.265,105,0.496,106,0.496,107,1.337,108,1.697,109,0.939,110,0.496,111,1.167,112,2.847,113,1.337,114,0.391,115,0.496,116,0.496,117,0.496,118,0.496,119,0.433,120,0.496,121,2.443,122,1.697,123,1.055,124,1.167,125,1.167,126,1.055,127,0.496,128,0.496,129,0.963,130,0.496,131,0.391,132,0.496,133,0.819,134,0.496,135,0.496,136,0.496,137,0.939,138,0.496,139,2.444,140,0.433,141,0.904,142,1.391,143,2.227,144,2.636,145,1.47,146,2.428,147,1.055,148,1.844,149,0.596,150,1.799,151,1.148,152,0.433,153,0.682,154,1.055,155,0.36,156,1.055,157,0.433,158,0.496,159,2.494,160,1.337,161,0.391,162,0.819,163,0.496,164,0.496,165,0.433,166,0.939,167,0.939,168,0.496,169,0.433,170,0.819,171,0.939,172,1.167,173,0.939,174,2.42,175,1.167,176,0.5,177,1.925,178,1.481,179,1.925,180,1.339,181,0.74,182,0.496,183,0.433,184,0.496,185,1.481,186,1.337,187,2.847,188,0.939,189,0.939,190,0.939,191,2.91,192,0.939,193,0.939,194,1.337,195,0.939,196,0.496,197,1.167,198,1.339,199,1.481,200,0.682,201,1.337,202,0.496,203,1.055,204,0.939,205,1.697,206,0.939,207,0.971,208,0.819,209,0.819,210,0.939,211,1.167,212,0.74,213,0.496,214,1.393,215,1.337,216,0.939,217,0.74,218,0.939,219,0.939,220,0.496,221,2.024,222,0.391,223,0.496,224,0.496,225,0.848,226,0.315,227,0.496,228,0.971,229,0.939,230,0.433,231,0.939,232,0.433,233,0.496,234,0.433,235,0.36,236,2.027,237,0.496,238,0.658,239,1.232,240,1.766,241,0.433,242,2.12,243,4.292,244,1.886,245,3.633,246,1.705,247,1.832,248,0.391,249,0.433,250,0.433,251,1.055,252,0.682,253,0.433,254,0.939,255,0.496,256,0.496,257,0.496,258,0.939,259,0.496,260,1.337,261,0.496,262,1.466,263,0.682,264,0.391,265,0.433,266,1.148,267,0.36,268,0.722,269,0.36,270,0.433,271,1.339,272,1.58,273,1.49,274,0.36,275,0.819,276,0.433,277,0.433,278,1.095,279,2.364,280,1.647,281,1.337,282,0.682,283,0.335,284,3.677,285,0.74,286,1.597,287,0.819,288,0.74,289,0.496,290,1.254,291,0.224,292,1.167,293,0.74,294,0.819,295,1.337,296,1.167,297,1.016,298,0.496,299,3.047,300,1.766,301,0.496,302,0.496,303,2.322,304,1.337,305,0.819,306,1.555,307,0.74,308,1.339,309,0.496,310,1.167,311,0.433,312,0.939,313,0.36,314,1.697,315,0.819,316,0.496,317,1.537,318,0.496,319,0.496,320,0.496,321,0.433,322,0.496,323,0.496,324,0.496,325,0.496,326,2.027,327,0.496,328,0.496,329,0.391,330,0.496,331,1.481,332,1.811,333,1.337,334,0.939,335,0.496,336,0.297,337,1.755,338,0.819,339,1.016,340,1.369,341,0.36,342,0.939,343,0.496,344,0.496,345,0.939,346,0.496,347,0.496,348,0.496,349,1.925,350,0.596,351,0.391,352,1.481,353,0.596,354,0.819,355,1.149,356,2.082,357,0.682,358,0.496,359,1.055,360,1.766,361,0.496,362,1.167,363,3.293,364,0.939,365,2.755,366,0.562,367,2.227,368,2.236,369,1.055,370,0.496,371,0.496,372,0.496,373,0.496,374,0.496,375,0.496,376,0.433,377,0.496,378,0.496,379,0.433,380,2.082,381,0.496,382,0.224,383,0.939,384,1.664,385,0.682,386,0.496,387,0.433,388,0.939,389,0.74,390,1.481,391,1.055,392,1.577,393,0.819,394,0.496,395,0.939,396,0.36,397,0.433,398,0.819,399,0.433,400,0.496,401,0.433,402,0.759,403,0.682,404,0.722,405,1.093,406,0.819,407,0.496,408,0.496,409,0.315,410,0.682,411,0.496,412,0.433,413,1.055,414,1.686,415,0.433,416,0.433,417,0.819,418,0.819,419,0.484,420,0.939,421,0.682,422,0.496,423,0.496,424,0.391,425,1.077,426,0.819,427,1.167,428,0.939,429,1.016,430,2.082,431,0.335,432,0.819,433,0.496,434,0.433,435,2.186,436,0.297,437,1.055,438,0.315,439,0.74,440,0.955,441,0.939,442,0.496,443,0.496,444,0.496,445,0.496,446,0.848,447,0.496,448,0.496,449,1.337,450,0.496,451,0.939,452,0.939,453,0.939,454,0.391,455,0.496,456,0.255,457,0.36,458,1.481,459,1.766,460,0.939,461,0.496,462,1.232,463,0.496,464,0.496,465,0.496,466,0.939,467,0.496,468,0.635,469,0.391,470,0.819,471,0.496,472,0.391,473,1.686,474,0.939,475,0.335,476,0.391,477,0.496,478,0.496,479,0.433,480,1.232,481,1.167,482,1.337,483,1.481,484,0.496,485,0.496,486,1.337,487,1.686,488,1.167,489,0.496,490,0.971,491,1.948,492,0.533,493,0.391,494,0.496,495,0.496,496,1.597,497,1.167,498,0.74,499,0.496,500,0.496,501,0.819,502,0.268,503,0.315,504,0.939,505,1.481,506,0.496,507,0.391,508,0.496,509,0.391,510,0.433,511,0.215,512,0.496,513,0.819,514,0.74,515,0.496,516,0.631,517,0.484,518,0.268,519,0.433,520,0.391,521,0.939,522,0.297,523,0.297,524,0.255,525,0.433,526,0.635,527,0.433,528,0.433,529,0.433,530,0.36,531,0.335,532,0.904,533,0.433,534,0.939,535,0.496,536,0.433,537,0.433,538,0.391,539,0.391,540,0.768,541,0.939,542,0.496,543,0.496,544,0.496,545,1.148,546,0.315,547,0.433,548,0.496,549,0.316,550,0.433,551,0.391,552,0.433,553,0.596,554,0.391,555,0.391,556,0.819,557,0.315,558,0.74,559,0.496,560,0.496,561,0.391,562,0.496,563,0.496,564,0.496,565,0.496,566,0.496,567,0.496,568,0.496,569,0.496,570,0.496,571,0.496,572,0.433,573,0.433,574,1.93,575,1.697,576,0.496,577,0.682,578,0.433,579,0.335,580,0.635,581,0.801,582,0.433,583,0.635,584,0.74,585,0.234,586,0.167,587,0.496,588,0.36,589,0.801,590,0.36,591,0.496,592,0.391,593,0.391,594,0.635,595,1.697,596,0.496,597,0.496,598,0.433,599,0.391,600,0.391,601,0.433,602,0.496,603,0.315,604,0.391,605,0.255,606,0.36,607,0.36,608,0.496,609,0.391,610,0.496,611,0.74,612,0.433,613,0.335,614,0.433]],["component/2",[4,0.327,12,0.486]],["title/3",[4,8.204,16,14.546]],["name/3",[615,2.189]],["text/3",[2,3.143,4,1.383,11,3.478,14,2.726,15,4.367,16,2.766,19,2.558,23,1.929,34,1.902,38,2.726,43,2.928,46,3.716,50,4.318,54,2.177,57,2.415,64,2.928,70,4.02,71,3.143,75,3.18,87,3.518,92,3.518,93,1.902,114,3.18,119,3.518,121,2.558,123,3.18,124,3.518,125,3.518,126,3.18,129,2.289,139,2.289,140,3.518,141,2.726,142,2.415,143,2.726,146,3.18,147,3.18,148,2.415,149,2.558,150,2.077,151,2.726,152,3.518,153,4.02,154,4.367,155,2.928,156,3.18,157,3.518,170,3.518,174,1.685,203,3.18,214,1.824,290,2.177,293,3.18,321,3.518,340,3.743,349,2.726,353,3.513,362,3.518,366,4.076,385,2.928,397,3.518,398,3.518,399,3.518,405,2.177,415,3.518,456,3.256,491,2.505,616,4.031,617,4.031,618,6.321,619,4.031,620,4.031,621,4.031,622,4.031,623,3.518,624,4.031,625,2.928,626,2.415,627,4.031,628,4.031,629,4.031]],["component/3",[4,0.327,12,0.486]],["title/4",[630,38.122]],["name/4",[630,1.727]],["text/4",[5,4.055,7,3.246,40,3.246,54,2.222,80,2.222,126,6.401,142,2.465,144,1.941,155,2.989,174,2.347,203,3.246,207,2.989,212,3.246,214,1.862,242,3.147,293,3.246,341,2.989,357,4.64,425,3.563,429,2.465,435,2.336,457,2.989,476,3.246,510,3.591,511,2.44,547,3.591,551,3.246,589,2.465,593,3.246,626,2.465,630,5.04,631,4.115,632,4.115,633,4.115,634,4.115,635,4.115,636,4.115,637,5.614,638,4.115,639,4.115,640,4.115,641,4.115,642,4.115,643,3.591,644,4.115,645,5.614,646,4.115,647,4.115,648,6.389,649,4.115,650,4.115,651,4.115,652,4.115,653,3.591,654,5.614,655,4.115,656,3.591,657,4.115,658,4.115,659,4.115,660,3.591,661,4.115,662,4.115,663,3.591,664,3.591,665,3.246,666,5.614,667,4.115,668,3.591,669,4.115,670,3.591,671,4.115,672,3.591,673,4.115,674,4.115,675,4.115,676,4.115,677,4.115,678,4.115,679,4.115,680,4.115,681,4.115,682,4.115,683,4.115,684,4.115]],["component/4",[4,0.327,12,0.486]],["title/5-1",[392,12.623,685,13.535]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[291,21.868]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5-3",[549,12.623,686,11.402]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["title/5",[23,13.068,446,23.801]],["name/5",[23,0.455,446,0.828]],["text/5",[3,0.666,4,1.474,11,2.068,13,0.926,14,0.794,16,2.15,23,1.993,25,0.578,31,2.737,34,2.52,35,0.531,37,1.315,40,1.634,45,3.089,46,1.887,48,0.852,50,0.745,55,0.794,56,2.782,58,1.401,59,0.745,63,1.024,64,2.437,67,0.852,69,3.867,80,2.285,81,1.634,89,3.692,93,3.057,121,2.431,131,0.926,139,0.666,142,0.703,144,0.554,145,2.437,148,0.703,150,1.729,151,1.401,159,1.241,161,1.634,169,1.024,174,3.066,179,1.881,181,0.926,191,3.378,214,1.734,225,0.745,226,0.745,232,1.024,234,1.024,238,0.578,242,1.887,244,2.993,266,2.591,267,4.154,268,1.502,269,2.02,270,1.024,271,2.647,272,0.531,273,2.068,274,0.852,276,1.024,277,2.427,278,3.14,279,1.176,282,1.505,283,0.794,290,0.634,297,2.01,306,1.666,313,1.505,317,1.119,326,1.024,332,0.578,336,0.703,341,0.852,350,0.745,353,2.13,355,0.666,356,1.881,366,0.703,380,1.881,382,1.914,384,1.259,391,0.926,392,1.538,393,1.024,405,1.502,410,0.852,417,2.427,421,0.852,424,1.634,430,3.976,435,2.761,438,0.745,440,1.995,446,4.365,468,1.401,469,0.926,473,3.532,475,0.794,487,2.02,491,0.937,496,1.634,507,0.926,511,0.901,514,1.634,517,1.973,518,1.812,520,0.926,530,3.718,531,0.794,532,1.401,537,1.024,538,0.926,539,1.634,540,1.914,545,0.794,549,1.798,553,0.745,554,0.926,555,1.634,574,2.114,585,2.841,586,0.395,589,2.737,590,3.319,593,0.926,594,0.794,601,1.024,605,2.354,607,1.505,613,0.794,625,0.852,665,0.926,685,1.004,686,0.63,687,0.794,688,2.294,689,4.093,690,3.831,691,2.295,692,1.173,693,2.072,694,2.427,695,2.251,696,2.929,697,0.794,698,1.024,699,0.794,700,0.926,701,1.024,702,0.634,703,1.173,704,1.024,705,1.024,706,1.024,707,1.024,708,1.173,709,1.024,710,0.852,711,0.852,712,2.194,713,0.926,714,2.929,715,1.024,716,1.173,717,1.173,718,1.173,719,1.024,720,0.554,721,2.614,722,1.401,723,3.356,724,1.173,725,1.173,726,1.024,727,1.173,728,1.024,729,3.5,730,3.072,731,0.926,732,1.024,733,0.794,734,1.401,735,1.024,736,1.173,737,4.638,738,1.173,739,1.173,740,1.024,741,1.173,742,1.173,743,1.173,744,1.173,745,1.024,746,1.634,747,2.647,748,1.173,749,1.024,750,1.173,751,1.173,752,4.863,753,4.638,754,1.024,755,1.024,756,1.173,757,1.024,758,1.173,759,1.173,760,2.781,761,2.072,762,2.072,763,1.401,764,1.173,765,2.781,766,1.173,767,1.024,768,1.173,769,1.173,770,1.173,771,1.173,772,1.024,773,2.072,774,1.173,775,1.173,776,2.929,777,3.356,778,2.437,779,2.781,780,1.173,781,1.173,782,1.401,783,1.024,784,1.173,785,0.794,786,1.173,787,1.173,788,2.781,789,1.173]],["component/5",[4,0.327,12,0.486]],["title/6-1",[392,12.623,685,13.535]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[291,21.868]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[549,12.623,686,11.402]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6-4",[586,16.264]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["title/6",[589,22.464,790,22.464]],["name/6",[589,0.782,790,0.782]],["text/6",[1,1.785,3,1.396,4,1.036,11,2.143,16,1.837,23,2.148,25,1.21,33,1.939,34,1.159,35,2.143,45,3.14,46,2.638,48,1.785,50,1.56,80,3.33,93,1.159,139,1.396,144,1.159,153,1.785,174,2.578,176,0.919,177,1.662,183,3.356,191,1.159,200,1.785,217,1.939,228,1.785,239,3.44,242,3.036,244,1.327,251,1.939,252,1.785,262,1.266,272,2.143,273,2.143,278,2.234,279,3.981,280,1.56,294,4.134,329,3.737,332,1.21,336,1.472,337,1.662,355,1.396,382,1.74,384,2.424,389,1.939,392,1.803,404,1.327,409,4.898,413,1.939,419,2.76,440,2.234,446,1.56,454,1.939,462,1.785,475,1.662,490,4.223,491,2.143,493,3.033,502,1.327,511,1.068,517,1.266,518,2.077,524,2.76,540,1.74,546,2.44,553,1.56,574,1.068,579,1.662,581,1.472,585,2.234,586,0.827,588,1.785,589,4.753,590,5.677,594,1.662,598,2.145,605,1.266,613,1.662,685,1.709,686,1.169,687,1.662,688,3.146,689,2.689,694,4.134,695,2.333,702,1.327,707,2.145,720,1.814,721,1.814,722,1.662,734,1.662,763,3.932,782,2.6,790,4.2,791,2.145,792,3.356,793,7.012,794,3.845,795,2.458,796,1.939,797,2.793,798,2.458,799,2.458,800,2.458,801,1.472,802,3.44,803,3.356,804,2.458,805,3.845,806,2.458,807,2.145,808,2.145,809,2.458,810,2.458,811,2.458,812,2.458,813,2.458]],["component/6",[4,0.327,12,0.486]],["title/7-1",[814,42.173]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[392,12.623,685,13.535]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[291,21.868]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[549,12.623,686,11.402]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7",[23,13.068,574,16.304]],["name/7",[23,0.455,574,0.567]],["text/7",[2,0.799,3,0.434,4,1.684,5,0.893,11,2.519,14,0.517,16,1.477,23,1.637,25,0.376,31,2.573,34,2.216,35,2.569,37,0.893,43,1.022,45,1.056,46,2.002,53,0.603,54,1.311,55,0.517,56,1.419,57,2.573,58,1.641,59,0.485,60,1.228,69,3.566,80,3.223,93,3.329,97,0.603,100,1.11,104,1.228,121,0.893,131,0.603,139,0.799,142,0.458,143,0.517,144,2.375,145,3.412,146,1.11,148,0.843,149,1.24,150,2.42,151,0.517,159,0.458,174,3.115,177,0.517,179,1.322,191,3.414,198,0.603,207,0.555,214,0.637,225,1.24,226,0.485,235,0.555,238,0.693,239,0.555,242,1.195,244,3.613,262,0.725,266,2.164,268,0.413,272,0.884,273,1.448,274,0.555,278,2.216,279,0.434,283,0.517,285,0.603,286,0.603,287,0.667,290,0.76,297,3.263,306,1.171,307,0.603,313,0.555,317,1.311,332,0.693,336,1.171,337,0.517,340,0.951,351,1.11,353,2.982,356,0.517,357,2.062,359,0.603,366,0.458,367,1.322,369,1.11,380,0.951,382,1.723,384,2.616,392,1.834,402,1.612,403,0.555,404,1.729,405,2.434,410,0.555,412,0.667,414,0.555,419,0.394,425,0.485,430,4.837,435,3.566,440,1.339,456,0.394,457,0.555,480,0.555,487,0.555,491,1.593,498,0.603,502,0.76,505,1.228,511,0.612,516,0.361,517,2.213,518,1.311,524,1.007,526,2.575,530,2.557,531,0.951,532,1.322,540,1.098,545,1.322,546,0.893,549,2.137,550,2.477,553,0.893,557,0.485,561,1.542,574,3.135,579,0.517,580,1.641,581,0.458,585,2.57,590,0.555,592,1.915,594,0.517,600,0.603,603,0.485,604,1.11,605,2.867,606,0.555,607,0.555,611,0.603,626,2.109,665,0.603,685,0.508,686,0.428,687,0.517,688,3.054,689,4.154,691,1.171,695,2.219,696,0.667,697,0.517,698,1.228,699,0.517,700,0.603,701,0.667,702,0.413,704,0.667,705,0.667,706,0.667,709,0.667,710,1.022,711,0.555,712,3.845,713,0.603,719,0.667,720,0.361,721,2.772,729,3.811,730,3.12,731,0.603,732,0.667,733,1.322,734,0.951,735,1.228,745,1.228,746,1.11,747,2.239,753,3.004,755,0.667,763,0.517,772,1.228,776,2.118,778,1.763,783,0.667,785,0.517,790,0.843,796,0.603,802,0.555,814,4.643,815,0.764,816,0.764,817,1.24,818,1.228,819,1.407,820,1.954,821,0.667,822,4.506,823,1.407,824,1.11,825,0.764,826,0.764,827,0.764,828,0.764,829,1.407,830,2.793,831,0.764,832,0.764,833,1.706,834,1.24,835,0.603,836,0.667,837,0.667,838,1.407,839,1.228,840,0.764,841,0.764,842,1.407,843,2.477,844,0.667,845,1.407,846,0.517,847,0.843,848,0.764,849,3.201,850,0.667,851,1.706,852,1.228,853,0.603,854,1.407,855,1.706,856,1.419,857,1.228,858,0.764,859,0.764,860,0.764,861,0.764,862,1.542,863,0.764,864,0.764,865,0.764,866,0.667,867,0.764,868,0.764,869,0.764,870,0.764,871,0.764,872,0.764,873,0.764,874,1.407,875,0.764,876,1.706,877,0.764,878,4.698,879,0.764,880,0.764,881,0.764,882,0.764,883,0.764,884,0.764,885,1.11,886,0.764,887,0.764,888,0.764,889,0.764,890,0.764,891,0.764,892,0.764,893,0.764,894,0.764,895,0.517,896,0.764]],["component/7",[4,0.327,12,0.486]],["title/8-1",[897,48.324]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[19,30.668]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[26,19.32,27,19.32]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8-4",[27,15.785,244,16.549,306,18.354]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["title/8-5",[27,19.32,853,29.586]],["name/8-5",[]],["text/8-5",[]],["component/8-5",[]],["title/8-6",[456,19.32,846,25.362]],["name/8-6",[]],["text/8-6",[]],["component/8-6",[]],["title/8-7",[24,32.73,133,32.73]],["name/8-7",[]],["text/8-7",[]],["component/8-7",[]],["title/8-8",[516,12.219,524,13.344,578,22.607,898,22.607]],["name/8-8",[]],["text/8-8",[]],["component/8-8",[]],["title/8-9",[392,12.623,685,13.535]],["name/8-9",[]],["text/8-9",[]],["component/8-9",[]],["title/8-10",[291,21.868]],["name/8-10",[]],["text/8-10",[]],["component/8-10",[]],["title/8-11",[549,12.623,686,11.402]],["name/8-11",[]],["text/8-11",[]],["component/8-11",[]],["title/8-12",[586,16.264]],["name/8-12",[]],["text/8-12",[]],["component/8-12",[]],["title/8",[16,14.546,26,19.32]],["name/8",[12,0.424,26,0.672]],["text/8",[1,0.36,2,0.533,3,0.282,4,1.28,5,0.315,11,3.073,12,0.926,16,1.494,19,4.292,23,1.591,25,2.363,26,3.369,27,3.469,28,0.36,29,0.741,30,0.801,31,2.403,32,3.285,34,3.477,35,1.289,37,0.596,38,0.635,43,0.971,44,0.433,45,0.268,46,2.187,51,0.433,54,0.268,55,0.335,56,1.886,59,1.285,64,1.687,65,0.391,66,0.433,67,0.36,68,0.391,69,2.842,70,0.682,71,0.759,75,0.391,81,0.391,90,0.682,93,0.631,111,0.433,114,0.391,121,0.596,123,0.391,129,0.759,139,1.319,141,1.369,142,1.391,143,0.635,144,3.539,145,2.537,150,1.043,153,0.36,154,0.391,155,0.36,156,0.391,159,3.851,161,0.391,174,2.862,176,1.152,177,1.148,179,2.082,180,0.741,185,0.433,191,3.566,197,1.167,198,0.741,207,0.971,209,0.819,212,0.391,214,0.605,222,0.391,225,0.596,228,0.36,238,0.659,239,0.36,240,0.819,242,2.249,243,1.832,244,3.279,245,3.885,246,2.579,247,2.048,248,1.597,249,1.481,250,0.819,251,0.391,252,0.682,253,0.433,262,2.352,263,1.687,266,3.003,267,0.682,268,0.917,271,1.339,272,1.289,273,1.175,278,0.955,279,0.964,280,0.315,282,0.682,283,0.335,288,0.741,290,0.507,291,0.224,292,0.433,296,0.819,297,2.494,299,1.767,300,0.433,305,0.433,306,1.844,307,0.391,308,0.391,310,0.433,311,0.433,313,0.682,315,0.433,317,0.268,329,0.391,336,0.297,337,1.148,338,2.027,340,1.756,341,0.36,349,0.335,351,0.391,352,0.433,353,1.807,354,0.433,355,0.282,356,2.487,357,0.36,359,0.391,365,2.048,366,0.297,367,3.512,368,0.682,379,0.433,380,1.926,382,0.425,384,1.051,385,0.36,387,0.433,391,0.391,392,0.958,396,0.36,402,0.533,403,0.682,405,0.722,406,0.433,409,0.596,413,0.391,414,2.068,418,0.433,421,0.36,424,0.391,425,1.077,426,1.481,427,2.266,429,0.297,430,2.487,432,0.819,435,3.387,436,0.801,437,0.391,438,0.596,439,1.055,440,1.452,446,1.954,454,0.391,456,2.915,458,0.433,459,0.433,468,1.148,470,0.433,472,0.741,473,0.36,475,0.335,479,0.433,480,0.682,481,1.767,483,0.819,487,1.886,488,1.767,490,3.316,491,2.219,492,0.282,493,0.391,496,2.246,497,2.687,498,0.741,501,2.687,503,0.315,509,0.741,511,0.581,513,0.433,514,1.055,516,2.839,517,2.72,518,2.53,519,0.819,520,0.741,522,0.801,523,0.801,524,0.484,526,0.335,527,0.433,528,1.167,529,0.433,530,2.914,531,1.148,532,1.369,533,0.819,538,0.391,539,1.055,540,1.051,545,1.148,546,0.315,549,0.958,551,1.597,552,1.167,553,0.596,554,0.391,555,0.741,556,0.433,557,2.444,558,0.741,561,4.097,574,1.238,577,0.36,579,0.335,582,0.433,584,0.391,586,1.176,588,0.36,599,1.055,605,0.689,609,0.741,611,1.055,625,0.36,626,1.706,643,0.433,656,0.819,660,0.819,670,0.433,686,0.936,687,0.904,688,0.234,689,2.278,691,0.562,702,0.507,710,0.682,711,0.36,712,1.339,713,0.741,714,1.767,715,0.433,720,0.443,721,0.801,722,0.904,728,0.433,729,0.507,730,0.36,734,1.148,737,2.755,740,0.433,749,0.433,754,0.433,763,1.369,767,0.433,782,0.335,785,0.904,790,0.297,796,1.339,797,0.682,801,0.562,807,0.433,818,3.21,821,0.819,834,0.596,835,0.391,839,0.819,846,2.714,847,0.297,853,0.741,855,0.433,856,0.36,862,3.503,876,0.433,898,0.433,899,0.496,900,0.496,901,0.496,902,0.819,903,1.167,904,0.939,905,0.496,906,2.323,907,0.496,908,0.939,909,0.496,910,0.496,911,0.496,912,0.496,913,0.496,914,0.496,915,0.939,916,0.939,917,0.433,918,0.433,919,0.433,920,0.433,921,0.496,922,0.496,923,0.496,924,0.496,925,0.433,926,2.323,927,0.496,928,0.496,929,0.496,930,3.079,931,0.433,932,0.939,933,0.433,934,0.315,935,0.496,936,0.496,937,1.337,938,0.496,939,0.496,940,0.496,941,0.433,942,0.433,943,0.496,944,0.939,945,0.939,946,0.939,947,0.496,948,1.339,949,0.496,950,0.496,951,0.496,952,0.939,953,0.496,954,0.496,955,0.496,956,0.496,957,0.496,958,0.939,959,0.939,960,1.337,961,1.337,962,0.496,963,0.939,964,0.741,965,0.496,966,0.496,967,0.496,968,0.496,969,0.496,970,0.496,971,1.337,972,0.496,973,0.496,974,0.496,975,1.697,976,0.496,977,1.767,978,0.433,979,0.496,980,0.496,981,0.433,982,0.496,983,0.939,984,0.496,985,0.496,986,3.048,987,2.755,988,0.939,989,0.939,990,0.939,991,3.048,992,2.875,993,4.566,994,2.598,995,3.294,996,0.496,997,1.337,998,0.496,999,0.939,1000,0.939,1001,1.697,1002,1.337,1003,2.027,1004,0.939,1005,0.939,1006,0.496,1007,0.496,1008,0.496,1009,1.167,1010,0.496,1011,0.433,1012,0.496,1013,1.337,1014,0.496,1015,0.496,1016,0.496,1017,0.496,1018,0.433,1019,0.496,1020,0.939,1021,0.496]],["component/8",[4,0.327,12,0.486]],["title/9-1",[291,21.868]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[549,12.623,686,11.402]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9",[405,20.255,699,25.362]],["name/9",[405,0.705,699,0.882]],["text/9",[0,1.219,3,0.953,4,1.354,5,1.79,9,2.461,11,0.759,17,1.219,23,1.661,25,0.826,26,0.864,45,0.906,46,0.826,48,2.048,49,1.324,50,1.065,53,2.225,55,2.891,57,2.561,68,1.324,69,0.953,70,1.219,71,1.601,74,1.465,76,1.465,78,1.465,80,1.97,88,4.79,90,1.219,91,2.461,97,6.397,102,1.324,121,1.065,129,0.953,139,0.953,141,3.896,142,2.185,144,2.589,151,1.907,159,1.005,165,1.465,174,2.724,177,1.135,179,1.907,191,2.717,199,1.465,200,1.219,214,0.759,235,1.219,236,1.465,238,0.826,241,1.465,242,3.134,244,1.523,262,2.456,266,1.907,268,2.574,269,3.986,272,1.935,273,1.276,274,1.219,278,2.248,280,1.79,285,2.225,286,2.878,306,1.005,317,2.309,331,1.465,332,1.389,336,2.855,339,1.689,340,4.187,365,2.225,367,2.467,368,4.496,382,1.276,392,0.565,396,1.219,402,0.953,404,0.906,405,1.97,414,2.048,416,1.465,419,1.453,425,2.315,435,1.601,440,2.017,457,1.219,468,2.891,472,1.324,473,1.219,475,1.907,491,1.935,511,0.73,516,0.792,517,1.453,518,2.574,526,1.135,536,2.461,540,1.276,545,3.224,546,1.065,557,2.315,572,1.465,574,0.73,585,2.017,586,1.439,594,1.135,599,1.324,605,0.864,612,2.461,613,3.491,623,1.465,653,1.465,668,4.506,672,4.506,685,0.606,686,0.857,687,3.491,688,1.33,689,0.953,695,0.826,699,4.497,702,0.906,720,1.721,721,0.792,730,3.462,746,1.324,757,1.465,763,1.907,790,1.689,792,1.465,801,2.561,802,1.219,824,1.324,850,1.465,851,4.79,852,2.461,857,1.465,862,2.225,885,1.324,902,3.731,917,1.465,925,4.506,933,2.461,934,1.065,948,3.372,964,1.324,981,1.465,994,2.878,1018,3.731,1022,4.767,1023,3.648,1024,3.648,1025,1.678,1026,3.648,1027,3.648,1028,1.678,1029,1.678,1030,2.82,1031,5.761,1032,2.82,1033,1.465,1034,1.465,1035,1.678,1036,1.678,1037,1.678,1038,4.767,1039,1.678,1040,1.678,1041,5.163,1042,2.461,1043,1.678,1044,2.82,1045,2.82,1046,2.82,1047,1.678,1048,1.678,1049,2.82,1050,2.82,1051,1.678,1052,2.82,1053,1.678,1054,1.678,1055,1.678,1056,1.79,1057,1.678,1058,1.678,1059,1.678,1060,3.648,1061,2.82,1062,1.678,1063,1.465,1064,1.678,1065,1.678,1066,1.678,1067,1.678,1068,1.678,1069,1.678,1070,1.678,1071,1.678,1072,1.678,1073,1.678]],["component/9",[4,0.327,12,0.486]],["title/10-1",[291,21.868]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[549,12.623,686,11.402]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10-3",[586,16.264]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["title/10",[405,20.255,697,25.362]],["name/10",[697,1.48]],["text/10",[4,0.984,11,2.036,17,2.193,23,1.874,31,1.808,36,2.382,37,4.517,45,1.63,46,1.487,59,4.395,69,4.13,79,3.927,80,2.905,159,1.808,174,2.249,175,2.635,191,2.812,228,2.193,242,1.487,243,5.615,246,2.695,272,2.698,273,1.366,282,2.193,288,2.382,376,2.635,382,2.036,392,1.514,403,2.193,419,2.318,435,4.267,440,2.122,502,2.43,511,1.312,516,2.537,517,1.555,526,4.521,540,3.541,557,1.916,573,2.635,574,1.312,585,3.589,586,2.006,605,3.962,614,2.635,664,2.635,685,1.09,686,0.918,688,2.812,695,3.411,697,4.311,700,4.703,702,1.63,720,2.122,721,1.424,797,2.193,801,1.808,843,5.202,885,3.55,903,3.927,948,3.55,992,2.635,1034,2.635,1042,2.635,1063,2.635,1074,2.635,1075,6.925,1076,3.019,1077,3.019,1078,3.019,1079,3.019,1080,3.019,1081,3.019,1082,3.019,1083,4.499,1084,4.499,1085,3.019,1086,3.019,1087,3.019,1088,3.019,1089,3.019,1090,3.019]],["component/10",[4,0.327,12,0.486]],["title/11-1",[392,12.623,685,13.535]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[291,21.868]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[549,12.623,686,11.402]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11-4",[586,16.264]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["title/11",[35,16.971,384,16.971]],["name/11",[35,0.59,384,0.59]],["text/11",[2,0.953,3,2.071,4,1.043,11,0.759,16,2.234,23,2.007,25,2.105,30,1.005,31,2.855,34,2.92,35,3.347,45,1.523,46,2.105,57,1.005,58,1.907,59,1.79,65,1.324,67,1.219,69,0.953,80,2.964,82,1.465,90,1.219,93,2.017,129,1.601,143,1.907,149,3.025,150,0.864,159,1.689,162,1.465,174,3.015,176,1.055,191,3.33,200,1.219,211,2.461,214,1.276,217,1.324,222,1.324,225,1.79,238,0.826,242,0.826,244,2.964,252,1.219,263,2.048,265,2.461,267,1.219,272,1.276,273,2.157,275,2.461,278,2.717,279,3.515,280,1.065,297,1.005,308,1.324,317,2.309,332,2.348,336,1.005,349,1.135,350,1.065,353,1.065,356,1.135,366,1.005,369,2.225,380,2.467,382,1.935,384,3.322,389,2.878,392,1.738,404,0.906,409,3.276,430,1.135,439,1.324,440,2.017,462,1.219,468,1.135,490,3.105,491,1.935,492,2.427,507,1.324,509,1.324,511,1.586,516,0.792,517,1.879,518,2.964,531,1.907,532,2.467,540,1.276,546,2.713,574,1.226,579,1.135,580,1.135,583,5.101,584,1.324,585,0.792,586,0.949,588,5.75,589,2.185,605,1.879,606,3.105,607,1.219,609,2.225,626,2.185,685,1.543,686,1.109,688,1.33,689,2.931,691,2.185,695,0.826,702,0.906,710,2.048,711,1.219,720,1.33,721,2.017,722,2.467,729,2.309,731,1.324,733,1.135,734,1.135,778,1.219,782,1.135,785,1.135,790,1.689,791,1.465,797,1.219,801,1.005,802,2.649,803,2.461,830,3.183,834,2.315,835,1.324,836,1.465,837,1.465,844,1.465,866,1.465,895,2.891,941,1.465,942,3.183,964,2.225,977,1.465,986,1.465,987,1.324,991,1.465,1003,4.79,1009,1.465,1011,1.465,1091,1.678,1092,2.82,1093,1.678,1094,1.678,1095,1.678,1096,1.678,1097,1.678,1098,4.275,1099,1.678,1100,4.275,1101,2.82,1102,1.678,1103,1.678,1104,4.275,1105,1.678,1106,1.678,1107,1.678,1108,1.678,1109,1.678,1110,1.678,1111,1.678,1112,1.678,1113,1.678,1114,2.713,1115,2.82,1116,1.678,1117,4.275,1118,1.678,1119,1.678,1120,1.678,1121,1.678,1122,1.678,1123,1.678,1124,1.678,1125,1.678,1126,1.678]],["component/11",[4,0.327,12,0.486]],["title/12-1",[392,12.623,685,13.535]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[549,12.623,686,11.402]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[586,16.264]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12",[176,14.027,246,22.464]],["name/12",[176,0.488,246,0.782]],["text/12",[4,1.597,11,1.384,12,0.995,16,2.102,23,2.09,26,1.575,27,1.575,30,2.721,34,2.143,35,1.384,46,1.506,54,1.651,71,1.736,93,2.556,129,1.736,144,3.902,148,1.832,150,1.575,174,3.105,176,1.699,191,1.442,214,2.056,238,2.954,246,4.852,262,2.34,268,1.651,272,1.384,273,2.056,278,2.143,290,1.651,317,1.651,332,2.237,339,3.246,350,1.941,355,1.736,382,2.056,384,3.147,392,1.029,402,1.736,404,1.651,419,2.34,429,1.832,431,2.068,436,3.593,438,1.941,440,1.442,456,3.46,491,2.715,492,2.579,502,2.927,503,1.941,511,2.786,516,1.442,522,2.721,523,2.721,524,2.34,540,2.056,549,2.019,581,1.832,583,3.072,585,3.37,586,1.029,603,2.883,685,1.104,686,0.93,688,1.442,691,1.832,695,1.506,720,2.143,721,2.556,729,1.651,817,1.941,834,1.941,847,1.832,895,2.068,934,1.941,1056,2.883,1114,1.941,1127,2.669,1128,2.068,1129,2.068,1130,3.072,1131,2.221]],["component/12",[4,0.327,12,0.486]],["title/13-1",[549,12.623,686,11.402]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[586,16.264]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13",[176,14.027,574,16.304]],["name/13",[176,0.488,574,0.567]],["text/13",[4,1.501,23,1.743,25,1.319,27,1.38,30,1.605,34,1.264,54,1.447,58,2.78,69,2.84,71,1.521,93,2.359,100,2.114,139,1.521,144,3.815,149,2.609,150,3.624,174,3.002,214,1.212,238,2.763,244,2.22,262,2.118,263,1.946,264,2.114,268,1.447,272,1.86,273,1.86,278,2.646,279,1.521,290,1.447,291,1.212,332,2.025,337,1.812,339,2.462,355,2.334,382,2.264,384,3.105,396,1.946,402,1.521,404,2.22,409,3.56,410,1.946,419,2.118,421,1.946,429,1.605,431,1.812,436,3.36,456,3.29,491,2.539,492,2.334,502,2.22,503,1.7,511,2.439,516,1.939,522,2.462,523,2.462,524,2.118,525,2.338,540,1.86,549,2.037,574,3.565,580,1.812,581,1.605,585,3.446,586,0.902,600,3.243,603,2.609,604,3.243,605,2.89,625,1.946,626,3.625,686,0.815,688,1.264,689,1.521,695,1.319,720,1.939,721,2.646,729,1.447,753,4.426,817,3.174,847,1.605,856,1.946,895,2.78,934,1.7,987,2.114,994,2.114,1033,2.338,1056,2.609,1114,1.7,1128,1.812,1129,1.812,1130,2.78,1131,1.946,1132,2.679,1133,2.679,1134,2.679,1135,2.679,1136,2.679,1137,2.679,1138,2.679,1139,2.679]],["component/13",[4,0.327,12,0.486]],["title/14-1",[392,12.623,685,13.535]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[291,21.868]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[549,12.623,686,11.402]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14-4",[586,16.264]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["title/14",[16,14.546,176,14.027]],["name/14",[12,0.424,176,0.488]],["text/14",[4,1.461,12,0.803,16,2.503,23,1.655,25,2.644,26,2.446,27,1.271,34,3.802,35,1.117,50,1.566,54,1.333,71,1.401,93,2.533,144,3.845,150,1.271,174,2.935,176,2.31,191,3.044,214,1.746,238,2.339,242,1.9,245,4.238,246,3.49,247,1.947,248,1.947,262,1.987,272,1.117,273,1.746,278,1.82,283,1.669,291,1.117,332,1.9,339,1.478,355,2.19,360,2.154,367,1.669,382,2.149,384,2.92,392,1.598,402,1.401,404,1.333,419,1.987,429,1.478,431,1.669,434,2.154,435,1.401,436,3.216,438,1.566,440,1.82,456,3.182,480,3.9,491,2.43,492,2.19,502,2.9,511,2.533,516,2.24,517,3.001,518,1.333,522,2.311,523,2.311,524,1.987,540,1.746,549,1.807,557,1.566,558,1.947,577,1.792,585,3.238,586,1.298,603,2.448,606,1.792,613,1.669,685,0.891,686,1.632,688,2.24,691,1.478,695,1.215,702,1.333,720,1.82,721,2.24,729,2.083,733,1.669,737,1.947,778,1.792,785,2.609,801,1.478,817,1.566,834,1.566,846,3.212,847,1.478,918,2.154,919,2.154,920,2.154,931,2.154,1056,2.448,1114,1.566,1128,1.669,1129,1.669,1130,2.609,1131,1.792,1140,2.468,1141,2.468,1142,4.145,1143,3.858,1144,2.468,1145,2.468,1146,2.468,1147,2.468,1148,2.468,1149,2.468,1150,2.468,1151,2.468,1152,2.154,1153,2.468,1154,2.468]],["component/14",[4,0.327,12,0.486]],["title/15-1",[392,12.623,685,13.535]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[549,12.623,686,11.402]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[586,16.264]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15",[176,14.027,245,23.801]],["name/15",[176,0.488,245,0.828]],["text/15",[2,1.604,4,1.593,11,1.279,12,0.919,16,2.005,23,2.009,26,1.456,27,1.456,30,2.564,34,2.019,35,1.279,46,1.391,49,2.229,54,1.526,57,1.692,71,1.604,80,1.526,93,2.438,129,1.604,144,3.881,148,1.692,150,2.205,174,3.045,176,1.601,181,2.229,191,1.333,214,2.339,235,2.052,238,3.051,245,5.089,262,2.205,268,2.312,272,1.279,273,1.937,278,2.019,290,1.526,297,1.692,317,1.526,332,2.108,339,3.096,350,1.793,355,1.604,382,1.937,384,3.157,392,0.951,402,1.604,404,2.312,419,2.205,429,1.692,431,1.911,436,3.711,438,1.793,440,1.333,456,3.359,476,2.229,491,2.609,492,2.431,502,2.791,503,1.793,511,2.694,516,1.333,522,2.564,523,2.564,524,2.205,540,1.937,549,1.941,553,1.793,581,3.096,583,2.895,585,3.369,586,0.951,603,2.717,605,1.456,663,2.466,685,1.02,686,0.859,688,1.333,691,1.692,695,1.391,720,2.019,721,2.438,722,1.911,729,1.526,817,1.793,834,1.793,847,1.692,895,1.911,934,1.793,978,2.466,1056,2.717,1114,1.793,1127,2.466,1128,1.911,1129,1.911,1130,2.895,1131,2.052,1142,3.736,1155,2.825,1156,4.281,1157,2.825,1158,2.825]],["component/15",[4,0.327,12,0.486]],["title/16-1",[392,12.623,685,13.535]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[291,21.868]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[549,12.623,686,11.402]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[586,16.264]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16",[176,14.027,226,23.801]],["name/16",[176,0.488,226,0.828]],["text/16",[2,1.906,4,1.372,16,1.302,23,1.862,25,1.021,28,1.505,35,1.519,45,1.119,57,1.241,93,2.959,102,1.635,129,1.177,141,1.402,144,3.858,147,1.635,148,2.011,149,1.315,172,1.809,174,2.848,176,1.819,178,3.693,180,2.648,191,3.744,208,2.93,214,1.519,225,2.685,226,4.908,230,2.93,238,2.967,242,1.021,262,2.18,264,1.635,268,1.119,269,1.505,272,2.201,273,1.519,278,1.996,279,1.177,280,1.315,290,1.119,297,1.241,306,1.241,317,1.119,332,1.653,339,3.201,349,1.402,350,1.315,366,2.011,368,1.505,382,1.915,384,3.194,385,1.505,390,1.809,392,1.13,401,1.809,409,1.315,419,2.18,425,1.315,436,2.914,437,1.635,440,0.978,456,2.947,462,1.505,469,1.635,491,2.201,492,1.906,502,1.813,503,1.315,511,2.323,516,1.584,517,3.43,518,1.119,522,2.914,523,2.914,524,2.506,540,1.519,549,2.111,574,1.459,577,1.505,580,4.074,581,2.011,583,1.402,585,3.057,586,0.698,592,3.838,626,1.241,685,0.748,686,1.286,688,2.295,689,1.177,695,1.021,702,1.119,720,1.584,721,2.295,726,1.809,729,1.119,733,1.402,747,2.648,782,1.402,801,1.241,808,1.809,817,1.315,824,1.635,833,2.93,846,1.402,847,1.241,856,4.155,934,1.315,1056,2.685,1074,1.809,1114,1.315,1128,1.402,1129,1.402,1130,1.402,1152,3.693,1159,2.073,1160,2.073,1161,2.073,1162,2.073,1163,2.073,1164,2.073,1165,2.073,1166,4.231,1167,2.073,1168,2.073,1169,2.073,1170,2.073,1171,4.865,1172,2.073,1173,2.073,1174,2.073,1175,2.073,1176,4.865,1177,3.357,1178,2.073,1179,2.073,1180,2.073]],["component/16",[4,0.327,12,0.486]]],"invertedIndex":[["",{"_index":191,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{}},"component":{}}],["0",{"_index":1052,"title":{},"name":{},"text":{"9":{}},"component":{}}],["1",{"_index":111,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["1.0",{"_index":631,"title":{},"name":{},"text":{"4":{}},"component":{}}],["1.0.0",{"_index":1048,"title":{},"name":{},"text":{"9":{}},"component":{}}],["1.9",{"_index":1168,"title":{},"name":{},"text":{"16":{}},"component":{}}],["1.9.7",{"_index":1170,"title":{},"name":{},"text":{"16":{}},"component":{}}],["10",{"_index":480,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"14":{}},"component":{}}],["10.0.0",{"_index":1144,"title":{},"name":{},"text":{"14":{}},"component":{}}],["100",{"_index":1035,"title":{},"name":{},"text":{"9":{}},"component":{}}],["11",{"_index":481,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["11,14,17,20,23",{"_index":973,"title":{},"name":{},"text":{"8":{}},"component":{}}],["11.1",{"_index":990,"title":{},"name":{},"text":{"8":{}},"component":{}}],["12",{"_index":482,"title":{},"name":{},"text":{"2":{}},"component":{}}],["13",{"_index":483,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["13.1",{"_index":993,"title":{},"name":{},"text":{"8":{}},"component":{}}],["14",{"_index":959,"title":{},"name":{},"text":{"8":{}},"component":{}}],["14.1",{"_index":428,"title":{},"name":{},"text":{"2":{}},"component":{}}],["17th",{"_index":633,"title":{},"name":{},"text":{"4":{}},"component":{}}],["1998",{"_index":970,"title":{},"name":{},"text":{"8":{}},"component":{}}],["2",{"_index":197,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["20",{"_index":371,"title":{},"name":{},"text":{"2":{}},"component":{}}],["20,23",{"_index":974,"title":{},"name":{},"text":{"8":{}},"component":{}}],["2003",{"_index":634,"title":{},"name":{},"text":{"4":{}},"component":{}}],["2011",{"_index":969,"title":{},"name":{},"text":{"8":{}},"component":{}}],["2017",{"_index":254,"title":{},"name":{},"text":{"2":{}},"component":{}}],["2019",{"_index":255,"title":{},"name":{},"text":{"2":{}},"component":{}}],["22.04",{"_index":935,"title":{},"name":{},"text":{"8":{}},"component":{}}],["240",{"_index":372,"title":{},"name":{},"text":{"2":{}},"component":{}}],["3",{"_index":454,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["3.0.2",{"_index":1132,"title":{},"name":{},"text":{"13":{}},"component":{}}],["3.20",{"_index":828,"title":{},"name":{},"text":{"7":{}},"component":{}}],["3.8",{"_index":426,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["30",{"_index":184,"title":{},"name":{},"text":{"2":{}},"component":{}}],["32",{"_index":941,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["4",{"_index":251,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["4.8",{"_index":427,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["471aec5",{"_index":1060,"title":{},"name":{},"text":{"9":{}},"component":{}}],["5",{"_index":252,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"11":{}},"component":{}}],["6",{"_index":253,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["6.0",{"_index":958,"title":{},"name":{},"text":{"8":{}},"component":{}}],["64",{"_index":942,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["7",{"_index":477,"title":{},"name":{},"text":{"2":{}},"component":{}}],["8",{"_index":478,"title":{},"name":{},"text":{"2":{}},"component":{}}],["8.0.0",{"_index":957,"title":{},"name":{},"text":{"8":{}},"component":{}}],["8.1",{"_index":954,"title":{},"name":{},"text":{"8":{}},"component":{}}],["866,304",{"_index":298,"title":{},"name":{},"text":{"2":{}},"component":{}}],["9",{"_index":479,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["9.2",{"_index":1143,"title":{},"name":{},"text":{"14":{}},"component":{}}],["9.2.0",{"_index":1145,"title":{},"name":{},"text":{"14":{}},"component":{}}],["9.3.0",{"_index":1146,"title":{},"name":{},"text":{"14":{}},"component":{}}],["98",{"_index":968,"title":{},"name":{},"text":{"8":{}},"component":{}}],["a[cod",{"_index":96,"title":{},"name":{},"text":{"2":{}},"component":{}}],["a[matrix",{"_index":187,"title":{},"name":{},"text":{"2":{}},"component":{}}],["abbrevi",{"_index":760,"title":{},"name":{},"text":{"5":{}},"component":{}}],["abov",{"_index":476,"title":{},"name":{},"text":{"2":{},"4":{},"15":{}},"component":{}}],["absolut",{"_index":502,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["abstract",{"_index":205,"title":{},"name":{},"text":{"2":{}},"component":{}}],["accept",{"_index":515,"title":{},"name":{},"text":{"2":{}},"component":{}}],["access",{"_index":519,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["accompani",{"_index":642,"title":{},"name":{},"text":{"4":{}},"component":{}}],["accord",{"_index":611,"title":{},"name":{},"text":{"2":{},"7":{},"8":{}},"component":{}}],["account",{"_index":608,"title":{},"name":{},"text":{"2":{}},"component":{}}],["accumul",{"_index":394,"title":{},"name":{},"text":{"2":{}},"component":{}}],["achiev",{"_index":506,"title":{},"name":{},"text":{"2":{}},"component":{}}],["acquire::retri",{"_index":1108,"title":{},"name":{},"text":{"11":{}},"component":{}}],["action",{"_index":4,"title":{"3":{},"2-7":{},"2-14":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}}}],["actions/b2",{"_index":703,"title":{},"name":{},"text":{"5":{}},"component":{}}],["actions/boost",{"_index":799,"title":{},"name":{},"text":{"6":{}},"component":{}}],["actions/checkout",{"_index":894,"title":{},"name":{},"text":{"7":{}},"component":{}}],["actions/checkout@v3",{"_index":917,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["actions/cmak",{"_index":827,"title":{},"name":{},"text":{"7":{}},"component":{}}],["actions/cpp",{"_index":909,"title":{},"name":{},"text":{"8":{}},"component":{}}],["actions/cr",{"_index":1036,"title":{},"name":{},"text":{"9":{}},"component":{}}],["actions/flamegraph@mast",{"_index":1081,"title":{},"name":{},"text":{"10":{}},"component":{}}],["actions/packag",{"_index":1093,"title":{},"name":{},"text":{"11":{}},"component":{}}],["actions/setup",{"_index":577,"title":{},"name":{},"text":{"2":{},"8":{},"14":{},"16":{}},"component":{}}],["actual",{"_index":826,"title":{},"name":{},"text":{"7":{}},"component":{}}],["ad",{"_index":978,"title":{},"name":{},"text":{"8":{},"15":{}},"component":{}}],["adapt",{"_index":10,"title":{},"name":{},"text":{"1":{},"2":{}},"component":{}}],["add",{"_index":1114,"title":{},"name":{},"text":{"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["add_librari",{"_index":859,"title":{},"name":{},"text":{"7":{}},"component":{}}],["addit",{"_index":782,"title":{},"name":{},"text":{"5":{},"6":{},"8":{},"11":{},"16":{}},"component":{}}],["address",{"_index":64,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"8":{}},"component":{}}],["adjust",{"_index":815,"title":{},"name":{},"text":{"7":{}},"component":{}}],["advantag",{"_index":610,"title":{},"name":{},"text":{"2":{}},"component":{}}],["advis",{"_index":979,"title":{},"name":{},"text":{"8":{}},"component":{}}],["affect",{"_index":201,"title":{},"name":{},"text":{"2":{}},"component":{}}],["afigur",{"_index":110,"title":{},"name":{},"text":{"2":{}},"component":{}}],["aggreg",{"_index":467,"title":{},"name":{},"text":{"2":{}},"component":{}}],["agil",{"_index":136,"title":{},"name":{},"text":{"2":{}},"component":{}}],["aim",{"_index":397,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["alandefreitas/cpp",{"_index":702,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{},"16":{}},"component":{}}],["align",{"_index":127,"title":{},"name":{},"text":{"2":{}},"component":{}}],["allow",{"_index":129,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"9":{},"11":{},"12":{},"15":{},"16":{}},"component":{}}],["alreadi",{"_index":934,"title":{},"name":{},"text":{"8":{},"9":{},"12":{},"13":{},"15":{},"16":{}},"component":{}}],["altern",{"_index":350,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"12":{},"15":{},"16":{}},"component":{}}],["although",{"_index":199,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["altogeth",{"_index":334,"title":{},"name":{},"text":{"2":{}},"component":{}}],["alway",{"_index":200,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"11":{}},"component":{}}],["amd64",{"_index":1116,"title":{},"name":{},"text":{"11":{}},"component":{}}],["analog",{"_index":575,"title":{},"name":{},"text":{"2":{}},"component":{}}],["analysi",{"_index":36,"title":{"2-18":{}},"name":{},"text":{"2":{},"10":{}},"component":{}}],["analyz",{"_index":612,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["annot",{"_index":822,"title":{},"name":{},"text":{"7":{}},"component":{}}],["anoth",{"_index":594,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"9":{}},"component":{}}],["anyon",{"_index":677,"title":{},"name":{},"text":{"4":{}},"component":{}}],["anywher",{"_index":343,"title":{},"name":{},"text":{"2":{}},"component":{}}],["api",{"_index":416,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["append",{"_index":1099,"title":{},"name":{},"text":{"11":{}},"component":{}}],["appl",{"_index":250,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["appli",{"_index":862,"title":{},"name":{},"text":{"7":{},"8":{},"9":{}},"component":{}}],["applic",{"_index":855,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["approach",{"_index":311,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["appropri",{"_index":931,"title":{},"name":{},"text":{"8":{},"14":{}},"component":{}}],["approxim",{"_index":182,"title":{},"name":{},"text":{"2":{}},"component":{}}],["apt",{"_index":583,"title":{},"name":{},"text":{"2":{},"11":{},"12":{},"15":{},"16":{}},"component":{}}],["arbitrari",{"_index":591,"title":{},"name":{},"text":{"2":{}},"component":{}}],["arch",{"_index":1178,"title":{},"name":{},"text":{"16":{}},"component":{}}],["architectur",{"_index":149,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"11":{},"13":{},"16":{}},"component":{}}],["arg",{"_index":745,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["argument",{"_index":607,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"11":{}},"component":{}}],["aris",{"_index":682,"title":{},"name":{},"text":{"4":{}},"component":{}}],["arm",{"_index":265,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["arm64",{"_index":1121,"title":{},"name":{},"text":{"11":{}},"component":{}}],["armhf",{"_index":1119,"title":{},"name":{},"text":{"11":{}},"component":{}}],["array",{"_index":1012,"title":{},"name":{},"text":{"8":{}},"component":{}}],["artifact",{"_index":843,"title":{},"name":{},"text":{"7":{},"10":{}},"component":{}}],["asan",{"_index":496,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["asan+ubsan",{"_index":513,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["associ",{"_index":1018,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["assum",{"_index":475,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"8":{},"9":{}},"component":{}}],["assumpt",{"_index":1006,"title":{},"name":{},"text":{"8":{}},"component":{}}],["attempt",{"_index":404,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["attribut",{"_index":904,"title":{},"name":{},"text":{"8":{}},"component":{}}],["august",{"_index":632,"title":{},"name":{},"text":{"4":{}},"component":{}}],["autom",{"_index":68,"title":{},"name":{},"text":{"2":{},"8":{},"9":{}},"component":{}}],["automat",{"_index":53,"title":{},"name":{},"text":{"2":{},"7":{},"9":{}},"component":{}}],["auxiliari",{"_index":30,"title":{"2-12":{}},"name":{},"text":{"2":{},"8":{},"11":{},"12":{},"13":{},"15":{}},"component":{}}],["avail",{"_index":238,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["avoid",{"_index":333,"title":{},"name":{},"text":{"2":{}},"component":{}}],["away",{"_index":206,"title":{},"name":{},"text":{"2":{}},"component":{}}],["b",{"_index":100,"title":{},"name":{},"text":{"2":{},"7":{},"13":{}},"component":{}}],["b1",{"_index":445,"title":{},"name":{},"text":{"2":{}},"component":{}}],["b1[instal",{"_index":442,"title":{},"name":{},"text":{"2":{}},"component":{}}],["b2",{"_index":446,"title":{"5":{}},"name":{"5":{}},"text":{"2":{},"5":{},"6":{},"8":{}},"component":{}}],["b2[instal",{"_index":443,"title":{},"name":{},"text":{"2":{}},"component":{}}],["b2_build_typ",{"_index":743,"title":{},"name":{},"text":{"5":{}},"component":{}}],["b2_build_vari",{"_index":742,"title":{},"name":{},"text":{"5":{}},"component":{}}],["b2_job",{"_index":789,"title":{},"name":{},"text":{"5":{}},"component":{}}],["b2_toolset",{"_index":738,"title":{},"name":{},"text":{"5":{}},"component":{}}],["b3",{"_index":447,"title":{},"name":{},"text":{"2":{}},"component":{}}],["b3[instal",{"_index":444,"title":{},"name":{},"text":{"2":{}},"component":{}}],["b[ci",{"_index":98,"title":{},"name":{},"text":{"2":{}},"component":{}}],["b[setup",{"_index":563,"title":{},"name":{},"text":{"2":{}},"component":{}}],["backoff",{"_index":1113,"title":{},"name":{},"text":{"11":{}},"component":{}}],["backward",{"_index":1133,"title":{},"name":{},"text":{"13":{}},"component":{}}],["base",{"_index":796,"title":{},"name":{},"text":{"6":{},"7":{},"8":{}},"component":{}}],["bash",{"_index":552,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["basic",{"_index":28,"title":{"2-11":{}},"name":{},"text":{"2":{},"8":{},"16":{}},"component":{}}],["be",{"_index":356,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"11":{}},"component":{}}],["becom",{"_index":81,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["befor",{"_index":579,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"11":{}},"component":{}}],["behav",{"_index":202,"title":{},"name":{},"text":{"2":{}},"component":{}}],["behavior",{"_index":275,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["behind",{"_index":42,"title":{},"name":{},"text":{"2":{}},"component":{}}],["benefit",{"_index":495,"title":{},"name":{},"text":{"2":{}},"component":{}}],["besid",{"_index":598,"title":{},"name":{},"text":{"2":{},"6":{}},"component":{}}],["best",{"_index":363,"title":{},"name":{},"text":{"2":{}},"component":{}}],["better",{"_index":509,"title":{},"name":{},"text":{"2":{},"8":{},"11":{}},"component":{}}],["between",{"_index":1008,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bin",{"_index":726,"title":{},"name":{},"text":{"5":{},"16":{}},"component":{}}],["binari",{"_index":581,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"12":{},"13":{},"15":{},"16":{}},"component":{}}],["bindir",{"_index":1154,"title":{},"name":{},"text":{"14":{}},"component":{}}],["bit",{"_index":1117,"title":{},"name":{},"text":{"11":{}},"component":{}}],["bodi",{"_index":1023,"title":{},"name":{},"text":{"9":{}},"component":{}}],["boolean",{"_index":525,"title":{},"name":{},"text":{"2":{},"13":{}},"component":{}}],["boost",{"_index":589,"title":{"6":{}},"name":{"6":{}},"text":{"2":{},"4":{},"5":{},"6":{},"11":{}},"component":{}}],["boost.variant2",{"_index":798,"title":{},"name":{},"text":{"6":{}},"component":{}}],["boost_src_dir=\\\"{0",{"_index":840,"title":{},"name":{},"text":{"7":{}},"component":{}}],["both",{"_index":609,"title":{},"name":{},"text":{"2":{},"8":{},"11":{}},"component":{}}],["branch",{"_index":802,"title":{},"name":{},"text":{"6":{},"7":{},"9":{},"11":{}},"component":{}}],["break",{"_index":599,"title":{},"name":{},"text":{"2":{},"8":{},"9":{}},"component":{}}],["broken",{"_index":330,"title":{},"name":{},"text":{"2":{}},"component":{}}],["browser",{"_index":1076,"title":{},"name":{},"text":{"10":{}},"component":{}}],["bug",{"_index":952,"title":{},"name":{},"text":{"8":{}},"component":{}}],["build",{"_index":69,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{}},"component":{}}],["build_shared_lib",{"_index":735,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["build_test",{"_index":874,"title":{},"name":{},"text":{"7":{}},"component":{}}],["built",{"_index":722,"title":{},"name":{},"text":{"5":{},"6":{},"8":{},"11":{},"15":{}},"component":{}}],["bulk",{"_index":1126,"title":{},"name":{},"text":{"11":{}},"component":{}}],["bump",{"_index":1047,"title":{},"name":{},"text":{"9":{}},"component":{}}],["bump|set)\\s+vers",{"_index":1046,"title":{},"name":{},"text":{"9":{}},"component":{}}],["busi",{"_index":377,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c",{"_index":16,"title":{"3":{},"8":{},"14":{},"2-2":{},"2-4":{},"2-7":{}},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{}},"component":{}}],["c++11",{"_index":258,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c++14",{"_index":259,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c++17",{"_index":260,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c++20",{"_index":261,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c1",{"_index":190,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c1[test",{"_index":188,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c2",{"_index":193,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c2[test",{"_index":189,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c3",{"_index":450,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c3[test",{"_index":448,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c[instal",{"_index":564,"title":{},"name":{},"text":{"2":{}},"component":{}}],["c[run",{"_index":101,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cach",{"_index":409,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"11":{},"13":{},"16":{}},"component":{}}],["call",{"_index":895,"title":{},"name":{},"text":{"7":{},"11":{},"12":{},"13":{},"15":{}},"component":{}}],["can’t",{"_index":234,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["case",{"_index":337,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"13":{}},"component":{}}],["catch",{"_index":379,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["categori",{"_index":472,"title":{},"name":{},"text":{"2":{},"8":{},"9":{}},"component":{}}],["caus",{"_index":769,"title":{},"name":{},"text":{"5":{}},"component":{}}],["cc",{"_index":834,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"14":{},"15":{}},"component":{}}],["ccflag",{"_index":531,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"11":{}},"component":{}}],["certain",{"_index":1161,"title":{},"name":{},"text":{"16":{}},"component":{}}],["certainli",{"_index":224,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cflag",{"_index":731,"title":{},"name":{},"text":{"5":{},"7":{},"11":{}},"component":{}}],["challeng",{"_index":15,"title":{"2-2":{}},"name":{},"text":{"2":{},"3":{}},"component":{}}],["chanc",{"_index":901,"title":{},"name":{},"text":{"8":{}},"component":{}}],["chang",{"_index":55,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{}},"component":{}}],["changelog",{"_index":699,"title":{"9":{}},"name":{"9":{}},"text":{"5":{},"7":{},"9":{}},"component":{}}],["changelog.md",{"_index":1024,"title":{},"name":{},"text":{"9":{}},"component":{}}],["changelog@mast",{"_index":1037,"title":{},"name":{},"text":{"9":{}},"component":{}}],["charg",{"_index":638,"title":{},"name":{},"text":{"4":{}},"component":{}}],["cheaper",{"_index":985,"title":{},"name":{},"text":{"8":{}},"component":{}}],["check",{"_index":1056,"title":{},"name":{},"text":{"9":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["checkout",{"_index":852,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["chosen",{"_index":400,"title":{},"name":{},"text":{"2":{}},"component":{}}],["chrome://trac",{"_index":1079,"title":{},"name":{},"text":{"10":{}},"component":{}}],["ci",{"_index":49,"title":{},"name":{},"text":{"2":{},"9":{},"15":{}},"component":{}}],["circumstanti",{"_index":1127,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{}}],["cl",{"_index":249,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["claim",{"_index":328,"title":{},"name":{},"text":{"2":{}},"component":{}}],["clang",{"_index":246,"title":{"12":{}},"name":{"12":{}},"text":{"2":{},"8":{},"10":{},"12":{},"14":{}},"component":{}}],["clangbuildanalyz",{"_index":1087,"title":{},"name":{},"text":{"10":{}},"component":{}}],["clangcl",{"_index":1000,"title":{},"name":{},"text":{"8":{}},"component":{}}],["clean",{"_index":752,"title":{},"name":{},"text":{"5":{}},"component":{}}],["clear",{"_index":981,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["client",{"_index":1089,"title":{},"name":{},"text":{"10":{}},"component":{}}],["clone",{"_index":790,"title":{"6":{}},"name":{"6":{}},"text":{"6":{},"7":{},"8":{},"9":{},"11":{}},"component":{}}],["clone.outputs.boost",{"_index":706,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["clone@mast",{"_index":800,"title":{},"name":{},"text":{"6":{}},"component":{}}],["cmake",{"_index":574,"title":{"7":{},"13":{}},"name":{"7":{},"13":{}},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"16":{}},"component":{}}],["cmake_build_typ",{"_index":820,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_configuration_typ",{"_index":819,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_create_annot",{"_index":888,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_export_compile_command",{"_index":869,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_export_compile_commands=on",{"_index":868,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_gener",{"_index":861,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_generator_architectur",{"_index":865,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_generator_toolset",{"_index":864,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_instal",{"_index":877,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_install_prefix",{"_index":870,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_job",{"_index":871,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_minimum_requir",{"_index":600,"title":{},"name":{},"text":{"2":{},"7":{},"13":{}},"component":{}}],["cmake_packag",{"_index":879,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_package_artifact",{"_index":886,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_run_test",{"_index":872,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmake_toolchain_fil",{"_index":860,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cmakelists.txt",{"_index":604,"title":{},"name":{},"text":{"2":{},"7":{},"13":{}},"component":{}}],["code",{"_index":54,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"7":{},"8":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["codebas",{"_index":72,"title":{},"name":{},"text":{"2":{}},"component":{}}],["coerc",{"_index":1176,"title":{},"name":{},"text":{"16":{}},"component":{}}],["collabor",{"_index":91,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["collect",{"_index":398,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["combin",{"_index":243,"title":{},"name":{},"text":{"2":{},"8":{},"10":{}},"component":{}}],["combinatori",{"_index":299,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["come",{"_index":351,"title":{},"name":{},"text":{"2":{},"7":{},"8":{}},"component":{}}],["comma",{"_index":732,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["command",{"_index":382,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["commit",{"_index":97,"title":{},"name":{},"text":{"2":{},"7":{},"9":{}},"component":{}}],["common",{"_index":349,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"11":{},"16":{}},"component":{}}],["compar",{"_index":165,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["comparison",{"_index":18,"title":{"2-3":{}},"name":{},"text":{},"component":{}}],["compat",{"_index":625,"title":{},"name":{},"text":{"3":{},"5":{},"8":{},"13":{}},"component":{}}],["compil",{"_index":34,"title":{"2-15":{}},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["complement",{"_index":966,"title":{},"name":{},"text":{"8":{}},"component":{}}],["complet",{"_index":545,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{}},"component":{}}],["complex",{"_index":362,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["compon",{"_index":520,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["compos",{"_index":412,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["comprehens",{"_index":154,"title":{},"name":{},"text":{"2":{},"3":{},"8":{}},"component":{}}],["compress",{"_index":761,"title":{},"name":{},"text":{"5":{}},"component":{}}],["comput",{"_index":724,"title":{},"name":{},"text":{"5":{}},"component":{}}],["concaten",{"_index":725,"title":{},"name":{},"text":{"5":{}},"component":{}}],["concis",{"_index":1059,"title":{},"name":{},"text":{"9":{}},"component":{}}],["condition",{"_index":595,"title":{},"name":{},"text":{"2":{}},"component":{}}],["confid",{"_index":118,"title":{},"name":{},"text":{"2":{}},"component":{}}],["config",{"_index":776,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["config.jam",{"_index":690,"title":{},"name":{},"text":{"5":{}},"component":{}}],["config=filenam",{"_index":777,"title":{},"name":{},"text":{"5":{}},"component":{}}],["configur",{"_index":353,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"11":{}},"component":{}}],["conflict",{"_index":387,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["conjunct",{"_index":1164,"title":{},"name":{},"text":{"16":{}},"component":{}}],["connect",{"_index":683,"title":{},"name":{},"text":{"4":{}},"component":{}}],["consid",{"_index":141,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"9":{},"16":{}},"component":{}}],["consist",{"_index":74,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["constantli",{"_index":364,"title":{},"name":{},"text":{"2":{}},"component":{}}],["constraint",{"_index":1049,"title":{},"name":{},"text":{"9":{}},"component":{}}],["consum",{"_index":1140,"title":{},"name":{},"text":{"14":{}},"component":{}}],["contain",{"_index":516,"title":{"8-8":{}},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["content",{"_index":963,"title":{},"name":{},"text":{"8":{}},"component":{}}],["content}}fmt{{/if",{"_index":965,"title":{},"name":{},"text":{"8":{}},"component":{}}],["context",{"_index":78,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["continu",{"_index":13,"title":{"2-1":{}},"name":{},"text":{"2":{},"5":{}},"component":{}}],["contract",{"_index":429,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["contribut",{"_index":0,"title":{"1":{}},"name":{"1":{}},"text":{"2":{},"9":{}},"component":{}}],["contributor",{"_index":88,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["conveni",{"_index":1014,"title":{},"name":{},"text":{"8":{}},"component":{}}],["convent",{"_index":1026,"title":{},"name":{},"text":{"9":{}},"component":{}}],["convert",{"_index":1074,"title":{},"name":{},"text":{"10":{},"16":{}},"component":{}}],["copi",{"_index":357,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"8":{}},"component":{}}],["copy/past",{"_index":352,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["copyright",{"_index":654,"title":{},"name":{},"text":{"4":{}},"component":{}}],["corner",{"_index":570,"title":{},"name":{},"text":{"2":{}},"component":{}}],["correctli",{"_index":624,"title":{},"name":{},"text":{"3":{}},"component":{}}],["correspond",{"_index":288,"title":{},"name":{},"text":{"2":{},"8":{},"10":{}},"component":{}}],["cost",{"_index":767,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["costli",{"_index":381,"title":{},"name":{},"text":{"2":{}},"component":{}}],["counter",{"_index":213,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cover",{"_index":155,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"8":{}},"component":{}}],["coverag",{"_index":487,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{}},"component":{}}],["cpack",{"_index":878,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cpack_gener",{"_index":884,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cpack_package_directori",{"_index":880,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cpack_package_vendor",{"_index":882,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cpp",{"_index":12,"title":{},"name":{"8":{},"14":{}},"text":{"8":{},"12":{},"14":{},"15":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}}}],["cpp.outputs.cc",{"_index":835,"title":{},"name":{},"text":{"7":{},"8":{},"11":{}},"component":{}}],["cpp.outputs.cxx",{"_index":711,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"11":{}},"component":{}}],["cpp@master",{"_index":918,"title":{},"name":{},"text":{"8":{},"14":{}},"component":{}}],["cpp_actions_no_deps=on",{"_index":841,"title":{},"name":{},"text":{"7":{}},"component":{}}],["creat",{"_index":405,"title":{"9":{},"10":{}},"name":{"9":{}},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"9":{}},"component":{}}],["criteria",{"_index":946,"title":{},"name":{},"text":{"8":{}},"component":{}}],["cross",{"_index":411,"title":{},"name":{},"text":{"2":{}},"component":{}}],["crucial",{"_index":83,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ctest",{"_index":875,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cultur",{"_index":116,"title":{},"name":{},"text":{"2":{}},"component":{}}],["cumbersom",{"_index":943,"title":{},"name":{},"text":{"8":{}},"component":{}}],["current",{"_index":336,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{}},"component":{}}],["custom",{"_index":380,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"11":{}},"component":{}}],["cxx",{"_index":691,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"11":{},"12":{},"14":{},"15":{}},"component":{}}],["cxxflag",{"_index":532,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"11":{}},"component":{}}],["cxxstd",{"_index":712,"title":{},"name":{},"text":{"5":{},"7":{},"8":{}},"component":{}}],["d",{"_index":104,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["d[deploy/integr",{"_index":103,"title":{},"name":{},"text":{"2":{}},"component":{}}],["d[report",{"_index":449,"title":{},"name":{},"text":{"2":{}},"component":{}}],["d[result",{"_index":192,"title":{},"name":{},"text":{"2":{}},"component":{}}],["d[workflow",{"_index":565,"title":{},"name":{},"text":{"2":{}},"component":{}}],["damag",{"_index":679,"title":{},"name":{},"text":{"4":{}},"component":{}}],["date",{"_index":597,"title":{},"name":{},"text":{"2":{}},"component":{}}],["day",{"_index":60,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["deal",{"_index":684,"title":{},"name":{},"text":{"4":{}},"component":{}}],["debug",{"_index":267,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"11":{}},"component":{}}],["declar",{"_index":601,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["default",{"_index":721,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["defect",{"_index":84,"title":{},"name":{},"text":{"2":{}},"component":{}}],["defin",{"_index":430,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"11":{}},"component":{}}],["definit",{"_index":784,"title":{},"name":{},"text":{"5":{}},"component":{}}],["delay",{"_index":1111,"title":{},"name":{},"text":{"11":{}},"component":{}}],["delimit",{"_index":1045,"title":{},"name":{},"text":{"9":{}},"component":{}}],["deliv",{"_index":123,"title":{},"name":{},"text":{"2":{},"3":{},"8":{}},"component":{}}],["dep",{"_index":839,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["depend",{"_index":279,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"11":{},"13":{},"16":{}},"component":{}}],["deploy",{"_index":77,"title":{},"name":{},"text":{"2":{}},"component":{}}],["deprec",{"_index":1136,"title":{},"name":{},"text":{"13":{}},"component":{}}],["depth",{"_index":1032,"title":{},"name":{},"text":{"9":{}},"component":{}}],["deriv",{"_index":648,"title":{},"name":{},"text":{"4":{}},"component":{}}],["describ",{"_index":41,"title":{},"name":{},"text":{"2":{}},"component":{}}],["descript",{"_index":720,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["design",{"_index":38,"title":{"2":{}},"name":{"2":{}},"text":{"2":{},"3":{},"8":{}},"component":{}}],["desir",{"_index":470,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["detail",{"_index":573,"title":{},"name":{},"text":{"2":{},"10":{}},"component":{}}],["detect",{"_index":63,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["determin",{"_index":734,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"11":{}},"component":{}}],["develop",{"_index":50,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"9":{},"14":{}},"component":{}}],["dictionari",{"_index":1013,"title":{},"name":{},"text":{"8":{}},"component":{}}],["differ",{"_index":143,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"11":{}},"component":{}}],["difficult",{"_index":152,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["difficulti",{"_index":322,"title":{},"name":{},"text":{"2":{}},"component":{}}],["diminish",{"_index":210,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dir",{"_index":695,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["direct",{"_index":810,"title":{},"name":{},"text":{"6":{}},"component":{}}],["directli",{"_index":228,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"10":{}},"component":{}}],["directori",{"_index":688,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["disabl",{"_index":507,"title":{},"name":{},"text":{"2":{},"5":{},"11":{}},"component":{}}],["disclaim",{"_index":659,"title":{},"name":{},"text":{"4":{}},"component":{}}],["disjunct",{"_index":949,"title":{},"name":{},"text":{"8":{}},"component":{}}],["display",{"_index":644,"title":{},"name":{},"text":{"4":{}},"component":{}}],["dispos",{"_index":629,"title":{},"name":{},"text":{"3":{}},"component":{}}],["distribut",{"_index":645,"title":{},"name":{},"text":{"4":{}},"component":{}}],["docker",{"_index":997,"title":{},"name":{},"text":{"8":{}},"component":{}}],["document",{"_index":40,"title":{},"name":{},"text":{"2":{},"4":{},"5":{}},"component":{}}],["doesn’t",{"_index":359,"title":{},"name":{},"text":{"2":{},"7":{},"8":{}},"component":{}}],["don’t",{"_index":326,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["download",{"_index":580,"title":{},"name":{},"text":{"2":{},"7":{},"11":{},"13":{},"16":{}},"component":{}}],["doxygen",{"_index":1166,"title":{},"name":{},"text":{"16":{}},"component":{}}],["dpkg",{"_index":1115,"title":{},"name":{},"text":{"11":{}},"component":{}}],["dri",{"_index":771,"title":{},"name":{},"text":{"5":{}},"component":{}}],["due",{"_index":162,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["duplic",{"_index":488,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["dynam",{"_index":133,"title":{"8-7":{}},"name":{},"text":{"2":{}},"component":{}}],["e",{"_index":108,"title":{},"name":{},"text":{"2":{}},"component":{}}],["e.g",{"_index":521,"title":{},"name":{},"text":{"2":{}},"component":{}}],["e[notifi",{"_index":106,"title":{},"name":{},"text":{"2":{}},"component":{}}],["e[report",{"_index":566,"title":{},"name":{},"text":{"2":{}},"component":{}}],["each",{"_index":159,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{}},"component":{}}],["earli",{"_index":66,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["earliest",{"_index":528,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["easi",{"_index":281,"title":{},"name":{},"text":{"2":{}},"component":{}}],["easili",{"_index":385,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"16":{}},"component":{}}],["ecosystem",{"_index":21,"title":{"2-5":{}},"name":{},"text":{"2":{}},"component":{}}],["edg",{"_index":388,"title":{},"name":{},"text":{"2":{}},"component":{}}],["effect",{"_index":20,"title":{"2-5":{}},"name":{},"text":{"2":{}},"component":{}}],["effici",{"_index":92,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["effort",{"_index":622,"title":{},"name":{},"text":{"3":{}},"component":{}}],["elimin",{"_index":951,"title":{},"name":{},"text":{"8":{}},"component":{}}],["embrac",{"_index":130,"title":{},"name":{},"text":{"2":{}},"component":{}}],["emit",{"_index":823,"title":{},"name":{},"text":{"7":{}},"component":{}}],["empti",{"_index":866,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{}}],["enabl",{"_index":89,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["enable/dis",{"_index":873,"title":{},"name":{},"text":{"7":{}},"component":{}}],["end",{"_index":331,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["endian",{"_index":1125,"title":{},"name":{},"text":{"11":{}},"component":{}}],["enforc",{"_index":544,"title":{},"name":{},"text":{"2":{}},"component":{}}],["enorm",{"_index":324,"title":{},"name":{},"text":{"2":{}},"component":{}}],["enough",{"_index":307,"title":{},"name":{},"text":{"2":{},"7":{},"8":{}},"component":{}}],["ensur",{"_index":71,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["entir",{"_index":656,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["entri",{"_index":27,"title":{"2-10":{},"8-3":{},"8-4":{},"8-5":{}},"name":{},"text":{"2":{},"8":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["env",{"_index":533,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["environ",{"_index":93,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["equival",{"_index":737,"title":{},"name":{},"text":{"5":{},"8":{},"14":{}},"component":{}}],["error",{"_index":747,"title":{},"name":{},"text":{"5":{},"7":{},"16":{}},"component":{}}],["essenti",{"_index":1002,"title":{},"name":{},"text":{"8":{}},"component":{}}],["even",{"_index":308,"title":{},"name":{},"text":{"2":{},"8":{},"11":{}},"component":{}}],["event",{"_index":674,"title":{},"name":{},"text":{"4":{}},"component":{}}],["evid",{"_index":173,"title":{},"name":{},"text":{"2":{}},"component":{}}],["evolv",{"_index":138,"title":{},"name":{},"text":{"2":{}},"component":{}}],["exact",{"_index":1128,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["exampl",{"_index":291,"title":{"5-2":{},"6-2":{},"7-3":{},"8-10":{},"9-1":{},"10-1":{},"11-2":{},"14-2":{},"16-2":{}},"name":{},"text":{"2":{},"8":{},"13":{},"14":{}},"component":{}}],["except",{"_index":287,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["exclud",{"_index":806,"title":{},"name":{},"text":{"6":{}},"component":{}}],["execut",{"_index":511,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["exhaust",{"_index":1110,"title":{},"name":{},"text":{"11":{}},"component":{}}],["exist",{"_index":414,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"9":{}},"component":{}}],["expect",{"_index":983,"title":{},"name":{},"text":{"8":{}},"component":{}}],["experi",{"_index":460,"title":{},"name":{},"text":{"2":{}},"component":{}}],["expir",{"_index":811,"title":{},"name":{},"text":{"6":{}},"component":{}}],["explicit",{"_index":1065,"title":{},"name":{},"text":{"9":{}},"component":{}}],["explicitli",{"_index":792,"title":{},"name":{},"text":{"6":{},"9":{}},"component":{}}],["explor",{"_index":463,"title":{},"name":{},"text":{"2":{}},"component":{}}],["explos",{"_index":300,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["exponenti",{"_index":1112,"title":{},"name":{},"text":{"11":{}},"component":{}}],["export",{"_index":842,"title":{},"name":{},"text":{"7":{}},"component":{}}],["express",{"_index":551,"title":{},"name":{},"text":{"2":{},"4":{},"8":{}},"component":{}}],["extra",{"_index":306,"title":{"8-4":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"16":{}},"component":{}}],["extract",{"_index":602,"title":{},"name":{},"text":{"2":{}},"component":{}}],["f[deploy/integr",{"_index":194,"title":{},"name":{},"text":{"2":{}},"component":{}}],["facilit",{"_index":85,"title":{},"name":{},"text":{"2":{}},"component":{}}],["factor",{"_index":19,"title":{"2-4":{},"2-9":{},"8-2":{}},"name":{},"text":{"2":{},"3":{},"8":{}},"component":{}}],["factori",{"_index":459,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["fail",{"_index":225,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"11":{},"16":{}},"component":{}}],["failur",{"_index":568,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fallback",{"_index":1162,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fals",{"_index":273,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["familiar",{"_index":936,"title":{},"name":{},"text":{"8":{}},"component":{}}],["fast",{"_index":912,"title":{},"name":{},"text":{"8":{}},"component":{}}],["featur",{"_index":146,"title":{},"name":{},"text":{"2":{},"3":{},"7":{}},"component":{}}],["feedback",{"_index":109,"title":{},"name":{},"text":{"2":{}},"component":{}}],["feel",{"_index":6,"title":{},"name":{},"text":{"1":{}},"component":{}}],["fetch",{"_index":687,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{}},"component":{}}],["few",{"_index":305,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["field",{"_index":29,"title":{"2-11":{}},"name":{},"text":{"2":{},"8":{}},"component":{}}],["file",{"_index":605,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{}},"component":{}}],["filenam",{"_index":854,"title":{},"name":{},"text":{"7":{}},"component":{}}],["filesystem",{"_index":762,"title":{},"name":{},"text":{"5":{}},"component":{}}],["fill:#cccccc,stroke:#000000,strok",{"_index":452,"title":{},"name":{},"text":{"2":{}},"component":{}}],["filter",{"_index":292,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["final",{"_index":500,"title":{},"name":{},"text":{"2":{}},"component":{}}],["find",{"_index":339,"title":{},"name":{},"text":{"2":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["find_program",{"_index":1160,"title":{},"name":{},"text":{"16":{}},"component":{}}],["first",{"_index":355,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"8":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["fit",{"_index":547,"title":{},"name":{},"text":{"2":{},"4":{}},"component":{}}],["fix",{"_index":1058,"title":{},"name":{},"text":{"9":{}},"component":{}}],["flag",{"_index":31,"title":{"2-12":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"10":{},"11":{}},"component":{}}],["flamegraph",{"_index":697,"title":{"10":{}},"name":{"10":{}},"text":{"5":{},"7":{},"10":{}},"component":{}}],["flavor",{"_index":1062,"title":{},"name":{},"text":{"9":{}},"component":{}}],["flawlessli",{"_index":223,"title":{},"name":{},"text":{"2":{}},"component":{}}],["float",{"_index":1120,"title":{},"name":{},"text":{"11":{}},"component":{}}],["focu",{"_index":170,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["follow",{"_index":425,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"8":{},"9":{},"16":{}},"component":{}}],["footer",{"_index":1029,"title":{},"name":{},"text":{"9":{}},"component":{}}],["footer(",{"_index":1028,"title":{},"name":{},"text":{"9":{}},"component":{}}],["forc",{"_index":964,"title":{},"name":{},"text":{"8":{},"9":{},"11":{}},"component":{}}],["form",{"_index":662,"title":{},"name":{},"text":{"4":{}},"component":{}}],["formal",{"_index":461,"title":{},"name":{},"text":{"2":{}},"component":{}}],["format",{"_index":557,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"10":{},"14":{}},"component":{}}],["foster",{"_index":115,"title":{},"name":{},"text":{"2":{}},"component":{}}],["found",{"_index":856,"title":{},"name":{},"text":{"7":{},"8":{},"13":{},"16":{}},"component":{}}],["fraction",{"_index":458,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["free",{"_index":7,"title":{},"name":{},"text":{"1":{},"2":{},"4":{}},"component":{}}],["fromjson(needs.cpp",{"_index":913,"title":{},"name":{},"text":{"8":{}},"component":{}}],["fsanitize=address",{"_index":542,"title":{},"name":{},"text":{"2":{}},"component":{}}],["fsanitize=address,undefin",{"_index":543,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ftime",{"_index":614,"title":{},"name":{},"text":{"2":{},"10":{}},"component":{}}],["full",{"_index":1061,"title":{},"name":{},"text":{"9":{}},"component":{}}],["function",{"_index":623,"title":{},"name":{},"text":{"3":{},"9":{}},"component":{}}],["furnish",{"_index":652,"title":{},"name":{},"text":{"4":{}},"component":{}}],["furthermor",{"_index":616,"title":{},"name":{},"text":{"3":{}},"component":{}}],["futur",{"_index":1137,"title":{},"name":{},"text":{"13":{}},"component":{}}],["g",{"_index":1142,"title":{},"name":{},"text":{"14":{},"15":{}},"component":{}}],["g[notifi",{"_index":195,"title":{},"name":{},"text":{"2":{}},"component":{}}],["gcc",{"_index":245,"title":{"15":{}},"name":{"15":{}},"text":{"2":{},"8":{},"14":{},"15":{}},"component":{}}],["gcc8.1",{"_index":956,"title":{},"name":{},"text":{"8":{}},"component":{}}],["gener",{"_index":435,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"14":{}},"component":{}}],["giant",{"_index":348,"title":{},"name":{},"text":{"2":{}},"component":{}}],["git",{"_index":849,"title":{},"name":{},"text":{"7":{}},"component":{}}],["github",{"_index":340,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"9":{}},"component":{}}],["github.ref_nam",{"_index":1043,"title":{},"name":{},"text":{"9":{}},"component":{}}],["github_token",{"_index":1083,"title":{},"name":{},"text":{"10":{}},"component":{}}],["github_workspac",{"_index":893,"title":{},"name":{},"text":{"7":{}},"component":{}}],["given",{"_index":436,"title":{},"name":{},"text":{"2":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["gnu",{"_index":1005,"title":{},"name":{},"text":{"8":{}},"component":{}}],["go",{"_index":933,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["goal",{"_index":62,"title":{},"name":{},"text":{"2":{}},"component":{}}],["goe",{"_index":1030,"title":{},"name":{},"text":{"9":{}},"component":{}}],["good",{"_index":1069,"title":{},"name":{},"text":{"9":{}},"component":{}}],["grant",{"_index":637,"title":{},"name":{},"text":{"4":{}},"component":{}}],["graph",{"_index":94,"title":{},"name":{},"text":{"2":{}},"component":{}}],["great",{"_index":415,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["grow",{"_index":318,"title":{},"name":{},"text":{"2":{}},"component":{}}],["guilti",{"_index":219,"title":{},"name":{},"text":{"2":{}},"component":{}}],["h[notifi",{"_index":569,"title":{},"name":{},"text":{"2":{}},"component":{}}],["hand",{"_index":812,"title":{},"name":{},"text":{"6":{}},"component":{}}],["handl",{"_index":314,"title":{},"name":{},"text":{"2":{}},"component":{}}],["handlebar",{"_index":944,"title":{},"name":{},"text":{"8":{}},"component":{}}],["happen",{"_index":1007,"title":{},"name":{},"text":{"8":{}},"component":{}}],["hard",{"_index":1011,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["hardwar",{"_index":229,"title":{},"name":{},"text":{"2":{}},"component":{}}],["has_major",{"_index":1015,"title":{},"name":{},"text":{"8":{}},"component":{}}],["has_minor",{"_index":1016,"title":{},"name":{},"text":{"8":{}},"component":{}}],["has_patch",{"_index":1017,"title":{},"name":{},"text":{"8":{}},"component":{}}],["hash",{"_index":763,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{}},"component":{}}],["help",{"_index":70,"title":{},"name":{},"text":{"2":{},"3":{},"8":{},"9":{}},"component":{}}],["herebi",{"_index":636,"title":{},"name":{},"text":{"4":{}},"component":{}}],["here’",{"_index":484,"title":{},"name":{},"text":{"2":{}},"component":{}}],["high",{"_index":124,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["hint",{"_index":1163,"title":{},"name":{},"text":{"16":{}},"component":{}}],["histori",{"_index":1022,"title":{},"name":{},"text":{"9":{}},"component":{}}],["hit",{"_index":1138,"title":{},"name":{},"text":{"13":{}},"component":{}}],["holder",{"_index":676,"title":{},"name":{},"text":{"4":{}},"component":{}}],["home/user/project/src",{"_index":891,"title":{},"name":{},"text":{"7":{}},"component":{}}],["home/user/project/src/main.cpp",{"_index":889,"title":{},"name":{},"text":{"7":{}},"component":{}}],["host",{"_index":401,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["hosttool",{"_index":1180,"title":{},"name":{},"text":{"16":{}},"component":{}}],["hour",{"_index":1158,"title":{},"name":{},"text":{"15":{}},"component":{}}],["https://api.imgur.com",{"_index":1090,"title":{},"name":{},"text":{"10":{}},"component":{}}],["https://github.com/doxygen/doxygen/releases/download/release_1_9_7/doxygen",{"_index":1169,"title":{},"name":{},"text":{"16":{}},"component":{}}],["https://github.com/jlfwong/speedscop",{"_index":1078,"title":{},"name":{},"text":{"10":{}},"component":{}}],["https://www.speedscope.app",{"_index":1077,"title":{},"name":{},"text":{"10":{}},"component":{}}],["huge",{"_index":168,"title":{},"name":{},"text":{"2":{}},"component":{}}],["i386",{"_index":1118,"title":{},"name":{},"text":{"11":{}},"component":{}}],["id",{"_index":801,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"10":{},"11":{},"14":{},"16":{}},"component":{}}],["idea",{"_index":1070,"title":{},"name":{},"text":{"9":{}},"component":{}}],["identifi",{"_index":730,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"9":{}},"component":{}}],["ignor",{"_index":546,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"9":{},"11":{}},"component":{}}],["imag",{"_index":992,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["imgur",{"_index":1088,"title":{},"name":{},"text":{"10":{}},"component":{}}],["impact",{"_index":535,"title":{},"name":{},"text":{"2":{}},"component":{}}],["implement",{"_index":289,"title":{},"name":{},"text":{"2":{}},"component":{}}],["impli",{"_index":667,"title":{},"name":{},"text":{"4":{}},"component":{}}],["implic",{"_index":325,"title":{},"name":{},"text":{"2":{}},"component":{}}],["implicitli",{"_index":794,"title":{},"name":{},"text":{"6":{}},"component":{}}],["import",{"_index":1092,"title":{},"name":{},"text":{"11":{}},"component":{}}],["imposs",{"_index":1157,"title":{},"name":{},"text":{"15":{}},"component":{}}],["improv",{"_index":408,"title":{},"name":{},"text":{"2":{}},"component":{}}],["includ",{"_index":242,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{},"16":{}},"component":{}}],["increas",{"_index":582,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["independ",{"_index":33,"title":{"2-14":{}},"name":{},"text":{"2":{},"6":{}},"component":{}}],["index",{"_index":615,"title":{},"name":{"3":{}},"text":{},"component":{}}],["indic",{"_index":994,"title":{},"name":{},"text":{"8":{},"9":{},"13":{}},"component":{}}],["indispens",{"_index":135,"title":{},"name":{},"text":{"2":{}},"component":{}}],["individu",{"_index":389,"title":{},"name":{},"text":{"2":{},"6":{},"11":{}},"component":{}}],["infer",{"_index":987,"title":{},"name":{},"text":{"8":{},"11":{},"13":{}},"component":{}}],["influenc",{"_index":534,"title":{},"name":{},"text":{"2":{}},"component":{}}],["inform",{"_index":468,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"9":{},"11":{}},"component":{}}],["infring",{"_index":673,"title":{},"name":{},"text":{"4":{}},"component":{}}],["inherit",{"_index":417,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["initi",{"_index":902,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["inject",{"_index":926,"title":{},"name":{},"text":{"8":{}},"component":{}}],["innoc",{"_index":216,"title":{},"name":{},"text":{"2":{}},"component":{}}],["input",{"_index":549,"title":{"5-3":{},"6-3":{},"7-4":{},"8-11":{},"9-2":{},"10-2":{},"11-3":{},"12-2":{},"13-1":{},"14-3":{},"15-2":{},"16-3":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["inputs.report",{"_index":1080,"title":{},"name":{},"text":{"10":{}},"component":{}}],["inspir",{"_index":1159,"title":{},"name":{},"text":{"16":{}},"component":{}}],["instal",{"_index":384,"title":{"11":{}},"name":{"11":{}},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["install.outputs.vcpkg",{"_index":832,"title":{},"name":{},"text":{"7":{}},"component":{}}],["install@mast",{"_index":1094,"title":{},"name":{},"text":{"11":{}},"component":{}}],["instanc",{"_index":367,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"14":{}},"component":{}}],["instead",{"_index":402,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["instruct",{"_index":596,"title":{},"name":{},"text":{"2":{}},"component":{}}],["integr",{"_index":14,"title":{"2-1":{}},"name":{},"text":{"2":{},"3":{},"5":{},"7":{}},"component":{}}],["interact",{"_index":227,"title":{},"name":{},"text":{"2":{}},"component":{}}],["intermediari",{"_index":497,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["invalid",{"_index":294,"title":{},"name":{},"text":{"2":{},"6":{}},"component":{}}],["involv",{"_index":52,"title":{},"name":{},"text":{"2":{}},"component":{}}],["irrelev",{"_index":295,"title":{},"name":{},"text":{"2":{}},"component":{}}],["issu",{"_index":65,"title":{},"name":{},"text":{"2":{},"8":{},"11":{}},"component":{}}],["iter",{"_index":131,"title":{},"name":{},"text":{"2":{},"5":{},"7":{}},"component":{}}],["itself",{"_index":617,"title":{},"name":{},"text":{"3":{}},"component":{}}],["it’",{"_index":280,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"9":{},"11":{},"16":{}},"component":{}}],["j",{"_index":1139,"title":{},"name":{},"text":{"13":{}},"component":{}}],["jamfil",{"_index":758,"title":{},"name":{},"text":{"5":{}},"component":{}}],["jamroot",{"_index":723,"title":{},"name":{},"text":{"5":{}},"component":{}}],["javascript",{"_index":171,"title":{},"name":{},"text":{"2":{}},"component":{}}],["job",{"_index":179,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{}},"component":{}}],["json",{"_index":903,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["justifi",{"_index":499,"title":{},"name":{},"text":{"2":{}},"component":{}}],["keep",{"_index":313,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{}},"component":{}}],["key",{"_index":490,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"11":{}},"component":{}}],["kind",{"_index":510,"title":{},"name":{},"text":{"2":{},"4":{}},"component":{}}],["know",{"_index":466,"title":{},"name":{},"text":{"2":{}},"component":{}}],["known",{"_index":576,"title":{},"name":{},"text":{"2":{}},"component":{}}],["lack",{"_index":309,"title":{},"name":{},"text":{"2":{}},"component":{}}],["landscap",{"_index":134,"title":{},"name":{},"text":{"2":{}},"component":{}}],["languag",{"_index":203,"title":{},"name":{},"text":{"2":{},"3":{},"4":{}},"component":{}}],["language’",{"_index":163,"title":{},"name":{},"text":{"2":{}},"component":{}}],["larg",{"_index":222,"title":{},"name":{},"text":{"2":{},"8":{},"11":{}},"component":{}}],["last",{"_index":876,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["later",{"_index":821,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["latest",{"_index":262,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["lcov",{"_index":1021,"title":{},"name":{},"text":{"8":{}},"component":{}}],["left",{"_index":976,"title":{},"name":{},"text":{"8":{}},"component":{}}],["less",{"_index":393,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["let’",{"_index":474,"title":{},"name":{},"text":{"2":{}},"component":{}}],["level",{"_index":204,"title":{},"name":{},"text":{"2":{}},"component":{}}],["leverag",{"_index":620,"title":{},"name":{},"text":{"3":{}},"component":{}}],["liabil",{"_index":680,"title":{},"name":{},"text":{"4":{}},"component":{}}],["liabl",{"_index":678,"title":{},"name":{},"text":{"4":{}},"component":{}}],["lib",{"_index":693,"title":{},"name":{},"text":{"5":{}},"component":{}}],["libc",{"_index":257,"title":{},"name":{},"text":{"2":{}},"component":{}}],["librari",{"_index":46,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"15":{}},"component":{}}],["libs//test",{"_index":744,"title":{},"name":{},"text":{"5":{}},"component":{}}],["libstdc",{"_index":256,"title":{},"name":{},"text":{"2":{}},"component":{}}],["licens",{"_index":630,"title":{"4":{}},"name":{"4":{}},"text":{"4":{}},"component":{}}],["limit",{"_index":668,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["line",{"_index":561,"title":{},"name":{},"text":{"2":{},"7":{},"8":{}},"component":{}}],["linearli",{"_index":319,"title":{},"name":{},"text":{"2":{}},"component":{}}],["link",{"_index":269,"title":{},"name":{},"text":{"2":{},"5":{},"9":{},"16":{}},"component":{}}],["linker",{"_index":750,"title":{},"name":{},"text":{"5":{}},"component":{}}],["linkflag",{"_index":749,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["linux",{"_index":180,"title":{},"name":{},"text":{"2":{},"8":{},"16":{}},"component":{}}],["list",{"_index":518,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"14":{},"16":{}},"component":{}}],["littl",{"_index":1124,"title":{},"name":{},"text":{"11":{}},"component":{}}],["load",{"_index":780,"title":{},"name":{},"text":{"5":{}},"component":{}}],["local",{"_index":235,"title":{},"name":{},"text":{"2":{},"7":{},"9":{},"15":{}},"component":{}}],["locat",{"_index":808,"title":{},"name":{},"text":{"6":{},"16":{}},"component":{}}],["log",{"_index":1009,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["logic",{"_index":390,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["long",{"_index":560,"title":{},"name":{},"text":{"2":{}},"component":{}}],["longer",{"_index":161,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["look",{"_index":1152,"title":{},"name":{},"text":{"14":{},"16":{}},"component":{}}],["loos",{"_index":1025,"title":{},"name":{},"text":{"9":{}},"component":{}}],["lowercas",{"_index":537,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["lr",{"_index":186,"title":{},"name":{},"text":{"2":{}},"component":{}}],["luck",{"_index":358,"title":{},"name":{},"text":{"2":{}},"component":{}}],["machin",{"_index":663,"title":{},"name":{},"text":{"4":{},"15":{}},"component":{}}],["maco",{"_index":208,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["macro",{"_index":783,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["made",{"_index":1084,"title":{},"name":{},"text":{"10":{}},"component":{}}],["main",{"_index":177,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"9":{}},"component":{}}],["main.cpp",{"_index":892,"title":{},"name":{},"text":{"7":{}},"component":{}}],["maintain",{"_index":113,"title":{},"name":{},"text":{"2":{}},"component":{}}],["major",{"_index":522,"title":{},"name":{},"text":{"2":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["make",{"_index":151,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"9":{}},"component":{}}],["manag",{"_index":462,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"16":{}},"component":{}}],["mandatori",{"_index":692,"title":{},"name":{},"text":{"5":{}},"component":{}}],["mani",{"_index":937,"title":{},"name":{},"text":{"8":{}},"component":{}}],["manifest",{"_index":791,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["manner",{"_index":315,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["map",{"_index":739,"title":{},"name":{},"text":{"5":{}},"component":{}}],["markdown",{"_index":1063,"title":{},"name":{},"text":{"9":{},"10":{}},"component":{}}],["master",{"_index":803,"title":{},"name":{},"text":{"6":{},"11":{}},"component":{}}],["match",{"_index":285,"title":{},"name":{},"text":{"2":{},"7":{},"9":{}},"component":{}}],["matric",{"_index":24,"title":{"2-8":{},"8-7":{}},"name":{},"text":{},"component":{}}],["matrix",{"_index":26,"title":{"8":{},"2-10":{},"8-3":{}},"name":{"8":{}},"text":{"2":{},"8":{},"9":{},"12":{},"14":{},"15":{}},"component":{}}],["matrix.address",{"_index":715,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["matrix.asan",{"_index":716,"title":{},"name":{},"text":{"5":{}},"component":{}}],["matrix.b2",{"_index":708,"title":{},"name":{},"text":{"5":{}},"component":{}}],["matrix.build",{"_index":709,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["matrix.cc",{"_index":921,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matrix.ccflag",{"_index":836,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{}}],["matrix.compil",{"_index":919,"title":{},"name":{},"text":{"8":{},"14":{}},"component":{}}],["matrix.contain",{"_index":916,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matrix.coverag",{"_index":701,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["matrix.cxx",{"_index":922,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matrix.cxxflag",{"_index":837,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{}}],["matrix.cxxstd",{"_index":713,"title":{},"name":{},"text":{"5":{},"7":{},"8":{}},"component":{}}],["matrix.gener",{"_index":829,"title":{},"name":{},"text":{"7":{}},"component":{}}],["matrix.i",{"_index":844,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{}}],["matrix.instal",{"_index":1097,"title":{},"name":{},"text":{"11":{}},"component":{}}],["matrix.json",{"_index":1010,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matrix.nam",{"_index":914,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matrix.no",{"_index":838,"title":{},"name":{},"text":{"7":{}},"component":{}}],["matrix.outputs.matrix",{"_index":908,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matrix.run",{"_index":915,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matrix.shar",{"_index":719,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["matrix.tim",{"_index":698,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["matrix.triplet",{"_index":1096,"title":{},"name":{},"text":{"11":{}},"component":{}}],["matrix.tsan",{"_index":718,"title":{},"name":{},"text":{"5":{}},"component":{}}],["matrix.ubsan",{"_index":717,"title":{},"name":{},"text":{"5":{}},"component":{}}],["matrix.vcpkg",{"_index":1095,"title":{},"name":{},"text":{"11":{}},"component":{}}],["matrix.vers",{"_index":920,"title":{},"name":{},"text":{"8":{},"14":{}},"component":{}}],["matrix.x86",{"_index":940,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matrix@mast",{"_index":910,"title":{},"name":{},"text":{"8":{}},"component":{}}],["matter",{"_index":232,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["max",{"_index":971,"title":{},"name":{},"text":{"8":{}},"component":{}}],["maximum",{"_index":972,"title":{},"name":{},"text":{"8":{}},"component":{}}],["md5",{"_index":764,"title":{},"name":{},"text":{"5":{}},"component":{}}],["mean",{"_index":239,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"8":{}},"component":{}}],["meaning",{"_index":344,"title":{},"name":{},"text":{"2":{}},"component":{}}],["meant",{"_index":559,"title":{},"name":{},"text":{"2":{}},"component":{}}],["media",{"_index":727,"title":{},"name":{},"text":{"5":{}},"component":{}}],["meet",{"_index":407,"title":{},"name":{},"text":{"2":{}},"component":{}}],["memori",{"_index":276,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["merchant",{"_index":669,"title":{},"name":{},"text":{"4":{}},"component":{}}],["merg",{"_index":376,"title":{},"name":{},"text":{"2":{},"10":{}},"component":{}}],["messag",{"_index":1031,"title":{},"name":{},"text":{"9":{}},"component":{}}],["met",{"_index":433,"title":{},"name":{},"text":{"2":{}},"component":{}}],["method",{"_index":1156,"title":{},"name":{},"text":{"15":{}},"component":{}}],["microsoft",{"_index":1150,"title":{},"name":{},"text":{"14":{}},"component":{}}],["min",{"_index":848,"title":{},"name":{},"text":{"7":{}},"component":{}}],["mingw",{"_index":248,"title":{},"name":{},"text":{"2":{},"8":{},"14":{}},"component":{}}],["minim",{"_index":321,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["minimum",{"_index":603,"title":{},"name":{},"text":{"2":{},"7":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["minor",{"_index":523,"title":{},"name":{},"text":{"2":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["minut",{"_index":183,"title":{},"name":{},"text":{"2":{},"6":{}},"component":{}}],["miss",{"_index":1098,"title":{},"name":{},"text":{"11":{}},"component":{}}],["mode",{"_index":977,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["model",{"_index":714,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["model=32",{"_index":938,"title":{},"name":{},"text":{"8":{}},"component":{}}],["model=64",{"_index":939,"title":{},"name":{},"text":{"8":{}},"component":{}}],["modifi",{"_index":728,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["modul",{"_index":590,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{}},"component":{}}],["money",{"_index":302,"title":{},"name":{},"text":{"2":{}},"component":{}}],["month",{"_index":370,"title":{},"name":{},"text":{"2":{}},"component":{}}],["more",{"_index":90,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"11":{}},"component":{}}],["motiv",{"_index":44,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["move",{"_index":807,"title":{},"name":{},"text":{"6":{},"8":{}},"component":{}}],["msan",{"_index":538,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["msvc",{"_index":247,"title":{},"name":{},"text":{"2":{},"8":{},"14":{}},"component":{}}],["much",{"_index":508,"title":{},"name":{},"text":{"2":{}},"component":{}}],["multi",{"_index":818,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["multipl",{"_index":58,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"11":{},"13":{}},"component":{}}],["myriad",{"_index":929,"title":{},"name":{},"text":{"8":{}},"component":{}}],["n",{"_index":772,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["name",{"_index":517,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{},"16":{}},"component":{}}],["natur",{"_index":164,"title":{},"name":{},"text":{"2":{}},"component":{}}],["navig",{"_index":1072,"title":{},"name":{},"text":{"9":{}},"component":{}}],["necessari",{"_index":503,"title":{},"name":{},"text":{"2":{},"8":{},"12":{},"13":{},"15":{},"16":{}},"component":{}}],["need",{"_index":139,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"13":{}},"component":{}}],["network",{"_index":1106,"title":{},"name":{},"text":{"11":{}},"component":{}}],["never",{"_index":342,"title":{},"name":{},"text":{"2":{}},"component":{}}],["new",{"_index":365,"title":{},"name":{},"text":{"2":{},"8":{},"9":{}},"component":{}}],["next",{"_index":685,"title":{"5-1":{},"6-1":{},"7-2":{},"8-9":{},"11-1":{},"12-1":{},"14-1":{},"15-1":{},"16-1":{}},"name":{},"text":{"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{}},"component":{}}],["ninja",{"_index":999,"title":{},"name":{},"text":{"8":{}},"component":{}}],["node",{"_index":578,"title":{"8-8":{}},"name":{},"text":{"2":{}},"component":{}}],["non",{"_index":672,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["none",{"_index":554,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["notabl",{"_index":335,"title":{},"name":{},"text":{"2":{}},"component":{}}],["note",{"_index":613,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"9":{},"14":{}},"component":{}}],["notic",{"_index":655,"title":{},"name":{},"text":{"4":{}},"component":{}}],["notifi",{"_index":1055,"title":{},"name":{},"text":{"9":{}},"component":{}}],["now",{"_index":485,"title":{},"name":{},"text":{"2":{}},"component":{}}],["npm",{"_index":1147,"title":{},"name":{},"text":{"14":{}},"component":{}}],["number",{"_index":317,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"11":{},"12":{},"15":{},"16":{}},"component":{}}],["numpi",{"_index":167,"title":{},"name":{},"text":{"2":{}},"component":{}}],["o",{"_index":1107,"title":{},"name":{},"text":{"11":{}},"component":{}}],["o3",{"_index":1001,"title":{},"name":{},"text":{"8":{}},"component":{}}],["object",{"_index":664,"title":{},"name":{},"text":{"4":{},"10":{}},"component":{}}],["obtain",{"_index":641,"title":{},"name":{},"text":{"4":{}},"component":{}}],["offici",{"_index":1155,"title":{},"name":{},"text":{"15":{}},"component":{}}],["old",{"_index":898,"title":{"8-8":{}},"name":{},"text":{"8":{}},"component":{}}],["oldest",{"_index":947,"title":{},"name":{},"text":{"8":{}},"component":{}}],["omit",{"_index":995,"title":{},"name":{},"text":{"8":{}},"component":{}}],["on",{"_index":3,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{}},"component":{}}],["onc",{"_index":369,"title":{},"name":{},"text":{"2":{},"7":{},"11":{}},"component":{}}],["open",{"_index":79,"title":{},"name":{},"text":{"2":{},"10":{}},"component":{}}],["oper",{"_index":147,"title":{},"name":{},"text":{"2":{},"3":{},"16":{}},"component":{}}],["opinion",{"_index":928,"title":{},"name":{},"text":{"8":{}},"component":{}}],["oppos",{"_index":775,"title":{},"name":{},"text":{"5":{}},"component":{}}],["optimist",{"_index":809,"title":{},"name":{},"text":{"6":{}},"component":{}}],["option",{"_index":278,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["order",{"_index":853,"title":{"8-5":{}},"name":{},"text":{"7":{},"8":{}},"component":{}}],["organ",{"_index":640,"title":{},"name":{},"text":{"4":{}},"component":{}}],["origin",{"_index":489,"title":{},"name":{},"text":{"2":{}},"component":{}}],["os",{"_index":230,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["otherwis",{"_index":341,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{}},"component":{}}],["out",{"_index":293,"title":{},"name":{},"text":{"2":{},"3":{},"4":{}},"component":{}}],["output",{"_index":586,"title":{"6-4":{},"8-12":{},"10-3":{},"11-4":{},"12-3":{},"13-2":{},"14-4":{},"15-3":{},"16-4":{}},"name":{},"text":{"2":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["outsid",{"_index":1068,"title":{},"name":{},"text":{"9":{}},"component":{}}],["over",{"_index":1135,"title":{},"name":{},"text":{"13":{}},"component":{}}],["overrid",{"_index":778,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"14":{}},"component":{}}],["packag",{"_index":35,"title":{"11":{},"2-16":{}},"name":{"11":{}},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{}},"component":{}}],["pair",{"_index":988,"title":{},"name":{},"text":{"8":{}},"component":{}}],["parallel",{"_index":410,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"13":{}},"component":{}}],["paramet",{"_index":686,"title":{"5-3":{},"6-3":{},"7-4":{},"8-11":{},"9-2":{},"10-2":{},"11-3":{},"12-2":{},"13-1":{},"14-3":{},"15-2":{},"16-3":{}},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["parent",{"_index":757,"title":{},"name":{},"text":{"5":{},"9":{}},"component":{}}],["pars",{"_index":824,"title":{},"name":{},"text":{"7":{},"9":{},"16":{}},"component":{}}],["part",{"_index":457,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"9":{}},"component":{}}],["parti",{"_index":651,"title":{},"name":{},"text":{"4":{}},"component":{}}],["particular",{"_index":593,"title":{},"name":{},"text":{"2":{},"4":{},"5":{}},"component":{}}],["particularli",{"_index":82,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["pass",{"_index":606,"title":{},"name":{},"text":{"2":{},"7":{},"11":{},"14":{}},"component":{}}],["passthrough",{"_index":967,"title":{},"name":{},"text":{"8":{}},"component":{}}],["patch",{"_index":524,"title":{"8-8":{}},"name":{},"text":{"2":{},"6":{},"7":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["path",{"_index":585,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["pattern",{"_index":368,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"16":{}},"component":{}}],["per",{"_index":962,"title":{},"name":{},"text":{"8":{}},"component":{}}],["perform",{"_index":1034,"title":{},"name":{},"text":{"9":{},"10":{}},"component":{}}],["permiss",{"_index":635,"title":{},"name":{},"text":{"4":{}},"component":{}}],["permit",{"_index":649,"title":{},"name":{},"text":{"4":{}},"component":{}}],["person",{"_index":639,"title":{},"name":{},"text":{"4":{}},"component":{}}],["pipelin",{"_index":112,"title":{},"name":{},"text":{"2":{}},"component":{}}],["placehold",{"_index":1175,"title":{},"name":{},"text":{"16":{}},"component":{}}],["platform",{"_index":2,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"8":{},"11":{},"15":{},"16":{}},"component":{}}],["point",{"_index":209,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["polici",{"_index":961,"title":{},"name":{},"text":{"8":{}},"component":{}}],["pollut",{"_index":571,"title":{},"name":{},"text":{"2":{}},"component":{}}],["pop",{"_index":1067,"title":{},"name":{},"text":{"9":{}},"component":{}}],["posit",{"_index":527,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["possibl",{"_index":156,"title":{},"name":{},"text":{"2":{},"3":{},"8":{}},"component":{}}],["potenti",{"_index":996,"title":{},"name":{},"text":{"8":{}},"component":{}}],["power",{"_index":621,"title":{},"name":{},"text":{"3":{}},"component":{}}],["powerpc",{"_index":1123,"title":{},"name":{},"text":{"11":{}},"component":{}}],["ppc64el",{"_index":1122,"title":{},"name":{},"text":{"11":{}},"component":{}}],["pr",{"_index":9,"title":{},"name":{},"text":{"1":{},"9":{}},"component":{}}],["practic",{"_index":51,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["precis",{"_index":504,"title":{},"name":{},"text":{"2":{}},"component":{}}],["prefix",{"_index":833,"title":{},"name":{},"text":{"7":{},"16":{}},"component":{}}],["prepar",{"_index":647,"title":{},"name":{},"text":{"4":{}},"component":{}}],["preset",{"_index":814,"title":{"7-1":{}},"name":{},"text":{"7":{}},"component":{}}],["prevent",{"_index":982,"title":{},"name":{},"text":{"8":{}},"component":{}}],["previou",{"_index":584,"title":{},"name":{},"text":{"2":{},"8":{},"11":{}},"component":{}}],["primari",{"_index":61,"title":{},"name":{},"text":{"2":{}},"component":{}}],["primarili",{"_index":169,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["principl",{"_index":465,"title":{},"name":{},"text":{"2":{}},"component":{}}],["print",{"_index":555,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["prioriti",{"_index":1134,"title":{},"name":{},"text":{"13":{}},"component":{}}],["probabl",{"_index":422,"title":{},"name":{},"text":{"2":{}},"component":{}}],["problem",{"_index":303,"title":{},"name":{},"text":{"2":{}},"component":{}}],["procedur",{"_index":383,"title":{},"name":{},"text":{"2":{}},"component":{}}],["process",{"_index":67,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"11":{}},"component":{}}],["process.arch",{"_index":1179,"title":{},"name":{},"text":{"16":{}},"component":{}}],["process.platform",{"_index":1177,"title":{},"name":{},"text":{"16":{}},"component":{}}],["processor",{"_index":665,"title":{},"name":{},"text":{"4":{},"5":{},"7":{}},"component":{}}],["produc",{"_index":765,"title":{},"name":{},"text":{"5":{}},"component":{}}],["profil",{"_index":1054,"title":{},"name":{},"text":{"9":{}},"component":{}}],["program",{"_index":226,"title":{"16":{}},"name":{"16":{}},"text":{"2":{},"5":{},"7":{},"16":{}},"component":{}}],["program@mast",{"_index":1167,"title":{},"name":{},"text":{"16":{}},"component":{}}],["project",{"_index":45,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"16":{}},"component":{}}],["prompt",{"_index":1149,"title":{},"name":{},"text":{"14":{}},"component":{}}],["proper",{"_index":438,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"12":{},"14":{},"15":{}},"component":{}}],["properli",{"_index":327,"title":{},"name":{},"text":{"2":{}},"component":{}}],["properti",{"_index":781,"title":{},"name":{},"text":{"5":{}},"component":{}}],["propos",{"_index":48,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"9":{}},"component":{}}],["proprietari",{"_index":237,"title":{},"name":{},"text":{"2":{}},"component":{}}],["proven",{"_index":218,"title":{},"name":{},"text":{"2":{}},"component":{}}],["provid",{"_index":214,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["purpos",{"_index":670,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["python",{"_index":172,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["q",{"_index":774,"title":{},"name":{},"text":{"5":{}},"component":{}}],["qualiti",{"_index":125,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["quickli",{"_index":119,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["r[requir",{"_index":441,"title":{},"name":{},"text":{"2":{}},"component":{}}],["rang",{"_index":456,"title":{"8-6":{}},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["rapidli",{"_index":132,"title":{},"name":{},"text":{"2":{}},"component":{}}],["rational",{"_index":39,"title":{"2":{}},"name":{},"text":{"2":{}},"component":{}}],["read",{"_index":421,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"13":{}},"component":{}}],["reader",{"_index":1071,"title":{},"name":{},"text":{"9":{}},"component":{}}],["readili",{"_index":76,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["reason",{"_index":236,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["rebuild",{"_index":768,"title":{},"name":{},"text":{"5":{}},"component":{}}],["rebuilt",{"_index":770,"title":{},"name":{},"text":{"5":{}},"component":{}}],["recent",{"_index":950,"title":{},"name":{},"text":{"8":{}},"component":{}}],["recommend",{"_index":501,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["reduc",{"_index":312,"title":{},"name":{},"text":{"2":{}},"component":{}}],["redund",{"_index":320,"title":{},"name":{},"text":{"2":{}},"component":{}}],["ref",{"_index":845,"title":{},"name":{},"text":{"7":{}},"component":{}}],["refer",{"_index":550,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["reflect",{"_index":1020,"title":{},"name":{},"text":{"8":{}},"component":{}}],["refs/tag",{"_index":1040,"title":{},"name":{},"text":{"9":{}},"component":{}}],["regex",{"_index":1044,"title":{},"name":{},"text":{"9":{}},"component":{}}],["regular",{"_index":925,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["rel",{"_index":526,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"10":{}},"component":{}}],["relat",{"_index":1091,"title":{},"name":{},"text":{"11":{}},"component":{}}],["releas",{"_index":268,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"12":{},"13":{},"15":{},"16":{}},"component":{}}],["relev",{"_index":284,"title":{},"name":{},"text":{"2":{}},"component":{}}],["reli",{"_index":122,"title":{},"name":{},"text":{"2":{}},"component":{}}],["reliabl",{"_index":75,"title":{},"name":{},"text":{"2":{},"3":{},"8":{}},"component":{}}],["relwithdebinfo",{"_index":740,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["remain",{"_index":73,"title":{},"name":{},"text":{"2":{}},"component":{}}],["remov",{"_index":396,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"13":{}},"component":{}}],["repeat",{"_index":493,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["replac",{"_index":498,"title":{},"name":{},"text":{"2":{},"7":{},"8":{}},"component":{}}],["replic",{"_index":22,"title":{"2-6":{}},"name":{},"text":{"2":{}},"component":{}}],["report",{"_index":37,"title":{"2-18":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"10":{}},"component":{}}],["report.md",{"_index":1086,"title":{},"name":{},"text":{"10":{}},"component":{}}],["repositori",{"_index":57,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"9":{},"11":{},"15":{},"16":{}},"component":{}}],["repository’",{"_index":1053,"title":{},"name":{},"text":{"9":{}},"component":{}}],["repres",{"_index":558,"title":{},"name":{},"text":{"2":{},"8":{},"14":{}},"component":{}}],["reproduc",{"_index":643,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["request",{"_index":1073,"title":{},"name":{},"text":{"9":{}},"component":{}}],["requir",{"_index":25,"title":{"2-8":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"13":{},"14":{},"16":{}},"component":{}}],["resili",{"_index":619,"title":{},"name":{},"text":{"3":{}},"component":{}}],["resolv",{"_index":857,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["respect",{"_index":1131,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"15":{}},"component":{}}],["respons",{"_index":137,"title":{},"name":{},"text":{"2":{}},"component":{}}],["restrict",{"_index":658,"title":{},"name":{},"text":{"4":{}},"component":{}}],["result",{"_index":102,"title":{},"name":{},"text":{"2":{},"9":{},"16":{}},"component":{}}],["retent",{"_index":887,"title":{},"name":{},"text":{"7":{}},"component":{}}],["retest",{"_index":386,"title":{},"name":{},"text":{"2":{}},"component":{}}],["retri",{"_index":1104,"title":{},"name":{},"text":{"11":{}},"component":{}}],["retriev",{"_index":1100,"title":{},"name":{},"text":{"11":{}},"component":{}}],["return",{"_index":211,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["reus",{"_index":413,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["revel",{"_index":899,"title":{},"name":{},"text":{"8":{}},"component":{}}],["review",{"_index":120,"title":{},"name":{},"text":{"2":{}},"component":{}}],["robust",{"_index":114,"title":{},"name":{},"text":{"2":{},"3":{},"8":{}},"component":{}}],["root",{"_index":696,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["rout",{"_index":1148,"title":{},"name":{},"text":{"14":{}},"component":{}}],["rtti",{"_index":751,"title":{},"name":{},"text":{"5":{}},"component":{}}],["rule",{"_index":998,"title":{},"name":{},"text":{"8":{}},"component":{}}],["run",{"_index":297,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"11":{},"15":{},"16":{}},"component":{}}],["runner",{"_index":991,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["runner.o",{"_index":1171,"title":{},"name":{},"text":{"16":{}},"component":{}}],["runtim",{"_index":788,"title":{},"name":{},"text":{"5":{}},"component":{}}],["s",{"_index":816,"title":{},"name":{},"text":{"7":{}},"component":{}}],["safe",{"_index":924,"title":{},"name":{},"text":{"8":{}},"component":{}}],["safer",{"_index":984,"title":{},"name":{},"text":{"8":{}},"component":{}}],["same",{"_index":286,"title":{},"name":{},"text":{"2":{},"7":{},"9":{}},"component":{}}],["sanit",{"_index":271,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["satisfi",{"_index":847,"title":{},"name":{},"text":{"7":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["save",{"_index":797,"title":{},"name":{},"text":{"6":{},"8":{},"10":{},"11":{}},"component":{}}],["scale",{"_index":361,"title":{},"name":{},"text":{"2":{}},"component":{}}],["scan",{"_index":793,"title":{},"name":{},"text":{"6":{}},"component":{}}],["scenario",{"_index":157,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["scope",{"_index":1027,"title":{},"name":{},"text":{"9":{}},"component":{}}],["scratch",{"_index":1102,"title":{},"name":{},"text":{"11":{}},"component":{}}],["script",{"_index":553,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"15":{}},"component":{}}],["search",{"_index":469,"title":{},"name":{},"text":{"2":{},"5":{},"16":{}},"component":{}}],["season",{"_index":627,"title":{},"name":{},"text":{"3":{}},"component":{}}],["second",{"_index":185,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["secrets.github_token",{"_index":1042,"title":{},"name":{},"text":{"9":{},"10":{}},"component":{}}],["section",{"_index":424,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["see",{"_index":282,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"10":{}},"component":{}}],["seen",{"_index":423,"title":{},"name":{},"text":{"2":{}},"component":{}}],["select",{"_index":406,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["semicolon",{"_index":883,"title":{},"name":{},"text":{"7":{}},"component":{}}],["semver",{"_index":846,"title":{"8-6":{}},"name":{},"text":{"7":{},"8":{},"14":{},"16":{}},"component":{}}],["semver’",{"_index":1129,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["sensit",{"_index":231,"title":{},"name":{},"text":{"2":{}},"component":{}}],["separ",{"_index":733,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"14":{},"16":{}},"component":{}}],["serv",{"_index":1165,"title":{},"name":{},"text":{"16":{}},"component":{}}],["server",{"_index":99,"title":{},"name":{},"text":{"2":{}},"component":{}}],["set",{"_index":491,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["setup",{"_index":176,"title":{"12":{},"13":{},"14":{},"15":{},"16":{}},"name":{"12":{},"13":{},"14":{},"15":{},"16":{}},"text":{"2":{},"6":{},"8":{},"11":{},"12":{},"14":{},"15":{},"16":{}},"component":{}}],["shall",{"_index":675,"title":{},"name":{},"text":{"4":{}},"component":{}}],["shallow",{"_index":850,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["share",{"_index":56,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{}},"component":{}}],["shorter",{"_index":766,"title":{},"name":{},"text":{"5":{}},"component":{}}],["shorthand",{"_index":512,"title":{},"name":{},"text":{"2":{}},"component":{}}],["shoulder",{"_index":347,"title":{},"name":{},"text":{"2":{}},"component":{}}],["signific",{"_index":494,"title":{},"name":{},"text":{"2":{}},"component":{}}],["significantli",{"_index":900,"title":{},"name":{},"text":{"8":{}},"component":{}}],["simpl",{"_index":175,"title":{},"name":{},"text":{"2":{},"10":{}},"component":{}}],["simplest",{"_index":548,"title":{},"name":{},"text":{"2":{}},"component":{}}],["simpli",{"_index":418,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["simplifi",{"_index":437,"title":{},"name":{},"text":{"2":{},"8":{},"16":{}},"component":{}}],["singl",{"_index":403,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"10":{}},"component":{}}],["site",{"_index":779,"title":{},"name":{},"text":{"5":{}},"component":{}}],["situat",{"_index":220,"title":{},"name":{},"text":{"2":{}},"component":{}}],["skip",{"_index":529,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["small",{"_index":17,"title":{"2-3":{}},"name":{},"text":{"2":{},"9":{},"10":{}},"component":{}}],["smooth",{"_index":86,"title":{},"name":{},"text":{"2":{}},"component":{}}],["softwar",{"_index":126,"title":{},"name":{},"text":{"2":{},"3":{},"4":{}},"component":{}}],["sole",{"_index":661,"title":{},"name":{},"text":{"4":{}},"component":{}}],["solut",{"_index":47,"title":{},"name":{},"text":{"2":{}},"component":{}}],["solv",{"_index":304,"title":{},"name":{},"text":{"2":{}},"component":{}}],["someon",{"_index":953,"title":{},"name":{},"text":{"8":{}},"component":{}}],["someth",{"_index":541,"title":{},"name":{},"text":{"2":{}},"component":{}}],["somewhat",{"_index":736,"title":{},"name":{},"text":{"5":{}},"component":{}}],["sort",{"_index":927,"title":{},"name":{},"text":{"8":{}},"component":{}}],["sourc",{"_index":80,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"15":{}},"component":{}}],["sourcedir}/build/${hostsystemnam",{"_index":825,"title":{},"name":{},"text":{"7":{}},"component":{}}],["space",{"_index":867,"title":{},"name":{},"text":{"7":{}},"component":{}}],["sparsiti",{"_index":464,"title":{},"name":{},"text":{"2":{}},"component":{}}],["spec",{"_index":1130,"title":{},"name":{},"text":{"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["special",{"_index":975,"title":{},"name":{},"text":{"8":{}},"component":{}}],["specif",{"_index":290,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"12":{},"13":{},"15":{},"16":{}},"component":{}}],["specifi",{"_index":689,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"13":{},"16":{}},"component":{}}],["speed",{"_index":1101,"title":{},"name":{},"text":{"11":{}},"component":{}}],["spirit",{"_index":128,"title":{},"name":{},"text":{"2":{}},"component":{}}],["spread",{"_index":1019,"title":{},"name":{},"text":{"8":{}},"component":{}}],["src/main.cpp",{"_index":890,"title":{},"name":{},"text":{"7":{}},"component":{}}],["stabl",{"_index":354,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["stand",{"_index":346,"title":{},"name":{},"text":{"2":{}},"component":{}}],["standalon",{"_index":338,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["standard",{"_index":145,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{}},"component":{}}],["start",{"_index":43,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"8":{}},"component":{}}],["startswith(github.ref",{"_index":1039,"title":{},"name":{},"text":{"9":{}},"component":{}}],["statement",{"_index":657,"title":{},"name":{},"text":{"4":{}},"component":{}}],["static",{"_index":270,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["statu",{"_index":105,"title":{},"name":{},"text":{"2":{}},"component":{}}],["steer",{"_index":980,"title":{},"name":{},"text":{"8":{}},"component":{}}],["step",{"_index":392,"title":{"5-1":{},"6-1":{},"7-2":{},"8-9":{},"11-1":{},"12-1":{},"14-1":{},"15-1":{},"16-1":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{}},"component":{}}],["steps.boost",{"_index":705,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["steps.cpp",{"_index":907,"title":{},"name":{},"text":{"8":{}},"component":{}}],["steps.packag",{"_index":831,"title":{},"name":{},"text":{"7":{}},"component":{}}],["steps.setup",{"_index":710,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"11":{}},"component":{}}],["still",{"_index":296,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["stochast",{"_index":471,"title":{},"name":{},"text":{"2":{}},"component":{}}],["stop",{"_index":773,"title":{},"name":{},"text":{"5":{}},"component":{}}],["storag",{"_index":1103,"title":{},"name":{},"text":{"11":{}},"component":{}}],["store",{"_index":885,"title":{},"name":{},"text":{"7":{},"9":{},"10":{}},"component":{}}],["strategi",{"_index":911,"title":{},"name":{},"text":{"8":{}},"component":{}}],["strategy.matrix.includ",{"_index":905,"title":{},"name":{},"text":{"8":{}},"component":{}}],["streamlin",{"_index":628,"title":{},"name":{},"text":{"3":{}},"component":{}}],["string",{"_index":785,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"11":{},"14":{}},"component":{}}],["style",{"_index":451,"title":{},"name":{},"text":{"2":{}},"component":{}}],["sub",{"_index":754,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["subdirectori",{"_index":805,"title":{},"name":{},"text":{"6":{}},"component":{}}],["subgraph",{"_index":562,"title":{},"name":{},"text":{"2":{}},"component":{}}],["subject",{"_index":653,"title":{},"name":{},"text":{"4":{},"9":{}},"component":{}}],["submit",{"_index":8,"title":{},"name":{},"text":{"1":{},"2":{}},"component":{}}],["submodul",{"_index":804,"title":{},"name":{},"text":{"6":{}},"component":{}}],["subrang",{"_index":960,"title":{},"name":{},"text":{"8":{}},"component":{}}],["subsequ",{"_index":587,"title":{},"name":{},"text":{"2":{}},"component":{}}],["subset",{"_index":439,"title":{},"name":{},"text":{"2":{},"8":{},"11":{}},"component":{}}],["succe",{"_index":1109,"title":{},"name":{},"text":{"11":{}},"component":{}}],["success",{"_index":567,"title":{},"name":{},"text":{"2":{}},"component":{}}],["such",{"_index":142,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{}},"component":{}}],["suffix",{"_index":858,"title":{},"name":{},"text":{"7":{}},"component":{}}],["suggest",{"_index":32,"title":{"2-13":{}},"name":{},"text":{"2":{},"8":{}},"component":{}}],["summari",{"_index":948,"title":{},"name":{},"text":{"8":{},"9":{},"10":{}},"component":{}}],["super",{"_index":694,"title":{},"name":{},"text":{"5":{},"6":{}},"component":{}}],["support",{"_index":150,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["suppos",{"_index":486,"title":{},"name":{},"text":{"2":{}},"component":{}}],["svg",{"_index":1075,"title":{},"name":{},"text":{"10":{}},"component":{}}],["symbol",{"_index":786,"title":{},"name":{},"text":{"5":{}},"component":{}}],["symbol=valu",{"_index":787,"title":{},"name":{},"text":{"5":{}},"component":{}}],["symbols=on",{"_index":741,"title":{},"name":{},"text":{"5":{}},"component":{}}],["syntax",{"_index":817,"title":{},"name":{},"text":{"7":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["system",{"_index":148,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"12":{},"15":{},"16":{}},"component":{}}],["systemat",{"_index":310,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["t",{"_index":863,"title":{},"name":{},"text":{"7":{}},"component":{}}],["tag",{"_index":851,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["take",{"_index":181,"title":{},"name":{},"text":{"2":{},"5":{},"15":{}},"component":{}}],["tar.gz",{"_index":1173,"title":{},"name":{},"text":{"16":{}},"component":{}}],["target",{"_index":753,"title":{},"name":{},"text":{"5":{},"7":{},"13":{}},"component":{}}],["task",{"_index":140,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["td",{"_index":95,"title":{},"name":{},"text":{"2":{}},"component":{}}],["team",{"_index":107,"title":{},"name":{},"text":{"2":{}},"component":{}}],["team]figur",{"_index":196,"title":{},"name":{},"text":{"2":{}},"component":{}}],["temporari",{"_index":1105,"title":{},"name":{},"text":{"11":{}},"component":{}}],["tend",{"_index":160,"title":{},"name":{},"text":{"2":{}},"component":{}}],["term",{"_index":431,"title":{},"name":{},"text":{"2":{},"12":{},"13":{},"14":{},"15":{}},"component":{}}],["test",{"_index":11,"title":{"2-2":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"15":{}},"component":{}}],["tests/build",{"_index":1082,"title":{},"name":{},"text":{"10":{}},"component":{}}],["text",{"_index":1064,"title":{},"name":{},"text":{"9":{}},"component":{}}],["thank",{"_index":1038,"title":{},"name":{},"text":{"9":{}},"component":{}}],["that’",{"_index":374,"title":{},"name":{},"text":{"2":{}},"component":{}}],["there’",{"_index":1,"title":{},"name":{},"text":{"1":{},"2":{},"6":{},"8":{}},"component":{}}],["third",{"_index":650,"title":{},"name":{},"text":{"4":{}},"component":{}}],["though",{"_index":395,"title":{},"name":{},"text":{"2":{}},"component":{}}],["thread",{"_index":277,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["through",{"_index":1153,"title":{},"name":{},"text":{"14":{}},"component":{}}],["throw",{"_index":301,"title":{},"name":{},"text":{"2":{}},"component":{}}],["thu",{"_index":241,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["time",{"_index":59,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"10":{},"11":{}},"component":{}}],["titl",{"_index":671,"title":{},"name":{},"text":{"4":{}},"component":{}}],["togeth",{"_index":756,"title":{},"name":{},"text":{"5":{}},"component":{}}],["token",{"_index":1041,"title":{},"name":{},"text":{"9":{}},"component":{}}],["tool",{"_index":366,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"11":{},"16":{}},"component":{}}],["toolchain",{"_index":830,"title":{},"name":{},"text":{"7":{},"11":{}},"component":{}}],["toolset",{"_index":530,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{}},"component":{}}],["top",{"_index":158,"title":{},"name":{},"text":{"2":{}},"component":{}}],["tort",{"_index":681,"title":{},"name":{},"text":{"4":{}},"component":{}}],["total",{"_index":316,"title":{},"name":{},"text":{"2":{}},"component":{}}],["trace",{"_index":540,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["traces.json",{"_index":1085,"title":{},"name":{},"text":{"10":{}},"component":{}}],["track",{"_index":955,"title":{},"name":{},"text":{"8":{}},"component":{}}],["transit",{"_index":329,"title":{},"name":{},"text":{"2":{},"6":{},"8":{}},"component":{}}],["transmit",{"_index":646,"title":{},"name":{},"text":{"4":{}},"component":{}}],["treat",{"_index":748,"title":{},"name":{},"text":{"5":{}},"component":{}}],["tri",{"_index":505,"title":{},"name":{},"text":{"2":{},"7":{}},"component":{}}],["triplet",{"_index":1003,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["true",{"_index":272,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["trust",{"_index":117,"title":{},"name":{},"text":{"2":{}},"component":{}}],["tsan",{"_index":539,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["type",{"_index":266,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{}},"component":{}}],["typic",{"_index":198,"title":{},"name":{},"text":{"2":{},"7":{},"8":{}},"component":{}}],["ubsan",{"_index":514,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["ubuntu",{"_index":906,"title":{},"name":{},"text":{"8":{}},"component":{}}],["ubuntu:22.04",{"_index":930,"title":{},"name":{},"text":{"8":{}},"component":{}}],["ultim",{"_index":434,"title":{},"name":{},"text":{"2":{},"14":{}},"component":{}}],["unconvent",{"_index":1057,"title":{},"name":{},"text":{"9":{}},"component":{}}],["undefin",{"_index":274,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"9":{}},"component":{}}],["under",{"_index":759,"title":{},"name":{},"text":{"5":{}},"component":{}}],["understand",{"_index":391,"title":{},"name":{},"text":{"2":{},"5":{},"8":{}},"component":{}}],["union",{"_index":795,"title":{},"name":{},"text":{"6":{}},"component":{}}],["unless",{"_index":212,"title":{},"name":{},"text":{"2":{},"4":{},"8":{}},"component":{}}],["unlik",{"_index":755,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["unnecessari",{"_index":572,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["unrel",{"_index":813,"title":{},"name":{},"text":{"6":{}},"component":{}}],["unset",{"_index":1033,"title":{},"name":{},"text":{"9":{},"13":{}},"component":{}}],["unspecifi",{"_index":986,"title":{},"name":{},"text":{"8":{},"11":{}},"component":{}}],["until",{"_index":217,"title":{},"name":{},"text":{"2":{},"6":{},"11":{}},"component":{}}],["up",{"_index":332,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"9":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["updat",{"_index":419,"title":{},"name":{},"text":{"2":{},"6":{},"7":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["upload",{"_index":700,"title":{},"name":{},"text":{"5":{},"7":{},"10":{}},"component":{}}],["url",{"_index":592,"title":{},"name":{},"text":{"2":{},"7":{},"16":{}},"component":{}}],["us",{"_index":174,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["usag",{"_index":897,"title":{"8-1":{}},"name":{},"text":{},"component":{}}],["user",{"_index":121,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"9":{}},"component":{}}],["usr/loc",{"_index":1174,"title":{},"name":{},"text":{"16":{}},"component":{}}],["usual",{"_index":440,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{}},"component":{}}],["v",{"_index":1050,"title":{},"name":{},"text":{"9":{}},"component":{}}],["v1.0.0",{"_index":1051,"title":{},"name":{},"text":{"9":{}},"component":{}}],["valid",{"_index":283,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"14":{}},"component":{}}],["valu",{"_index":244,"title":{"8-4":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"13":{}},"component":{}}],["variabl",{"_index":729,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["variant",{"_index":473,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"9":{}},"component":{}}],["variant2",{"_index":707,"title":{},"name":{},"text":{"5":{},"6":{}},"component":{}}],["varieti",{"_index":399,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["variou",{"_index":87,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["vcpkg",{"_index":588,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"11":{}},"component":{}}],["vendor",{"_index":881,"title":{},"name":{},"text":{"7":{}},"component":{}}],["verbos",{"_index":1066,"title":{},"name":{},"text":{"9":{}},"component":{}}],["veri",{"_index":221,"title":{},"name":{},"text":{"2":{}},"component":{}}],["version",{"_index":144,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["via",{"_index":989,"title":{},"name":{},"text":{"8":{}},"component":{}}],["viral",{"_index":323,"title":{},"name":{},"text":{"2":{}},"component":{}}],["visual",{"_index":1151,"title":{},"name":{},"text":{"14":{}},"component":{}}],["vue.j",{"_index":166,"title":{},"name":{},"text":{"2":{}},"component":{}}],["want",{"_index":492,"title":{},"name":{},"text":{"2":{},"8":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["warn",{"_index":746,"title":{},"name":{},"text":{"5":{},"7":{},"9":{}},"component":{}}],["warranti",{"_index":666,"title":{},"name":{},"text":{"4":{}},"component":{}}],["way",{"_index":240,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["well",{"_index":360,"title":{},"name":{},"text":{"2":{},"14":{}},"component":{}}],["we’r",{"_index":345,"title":{},"name":{},"text":{"2":{}},"component":{}}],["whenev",{"_index":432,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["whether",{"_index":626,"title":{},"name":{},"text":{"3":{},"4":{},"7":{},"8":{},"11":{},"13":{},"16":{}},"component":{}}],["whitespac",{"_index":1141,"title":{},"name":{},"text":{"14":{}},"component":{}}],["whole",{"_index":660,"title":{},"name":{},"text":{"4":{},"8":{}},"component":{}}],["whose",{"_index":536,"title":{},"name":{},"text":{"2":{},"9":{}},"component":{}}],["wide",{"_index":618,"title":{},"name":{},"text":{"3":{}},"component":{}}],["width:2pxfigur",{"_index":453,"title":{},"name":{},"text":{"2":{}},"component":{}}],["window",{"_index":178,"title":{},"name":{},"text":{"2":{},"16":{}},"component":{}}],["within",{"_index":455,"title":{},"name":{},"text":{"2":{}},"component":{}}],["without",{"_index":207,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"8":{}},"component":{}}],["won’t",{"_index":378,"title":{},"name":{},"text":{"2":{}},"component":{}}],["word",{"_index":215,"title":{},"name":{},"text":{"2":{}},"component":{}}],["work",{"_index":5,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"7":{},"8":{},"9":{}},"component":{}}],["workflow",{"_index":23,"title":{"5":{},"7":{},"2-6":{},"2-17":{}},"name":{"5":{},"7":{}},"text":{"2":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{}},"component":{}}],["workflow@mast",{"_index":704,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["workspac",{"_index":896,"title":{},"name":{},"text":{"7":{}},"component":{}}],["wors",{"_index":233,"title":{},"name":{},"text":{"2":{}},"component":{}}],["write",{"_index":153,"title":{},"name":{},"text":{"2":{},"3":{},"6":{},"8":{}},"component":{}}],["written",{"_index":375,"title":{},"name":{},"text":{"2":{}},"component":{}}],["x64",{"_index":264,"title":{},"name":{},"text":{"2":{},"13":{},"16":{}},"component":{}}],["x86",{"_index":263,"title":{},"name":{},"text":{"2":{},"8":{},"11":{},"13":{}},"component":{}}],["x86_64",{"_index":1004,"title":{},"name":{},"text":{"8":{}},"component":{}}],["x86}}32{{else}}64{{/if",{"_index":945,"title":{},"name":{},"text":{"8":{}},"component":{}}],["yaml",{"_index":556,"title":{},"name":{},"text":{"2":{},"8":{}},"component":{}}],["year",{"_index":373,"title":{},"name":{},"text":{"2":{}},"component":{}}],["you'v",{"_index":923,"title":{},"name":{},"text":{"8":{}},"component":{}}],["you’r",{"_index":932,"title":{},"name":{},"text":{"8":{}},"component":{}}],["you’v",{"_index":420,"title":{},"name":{},"text":{"2":{}},"component":{}}],["zip",{"_index":1172,"title":{},"name":{},"text":{"16":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"If there’s a platform where one of the actions does not work, feel free to submit a PR with adaptations and tests.","title":"Contribute","component":"cpp-actions","version":"master","name":"contribute","url":"/cpp-actions/contribute.html","titles":[]},"2":{"id":2,"text":"This document describes the design rationale behind the C++ actions. We will start by describing the motivation for the project and the challenges in testing C++ libraries. We will then describe the solution proposed by this project. Continuous Integration (CI) is a development practice that involves automatically testing and integrating code changes into a shared repository multiple times a day. The primary goal of CI is to detect and address integration issues early in the development process by automating the process of building, testing, and integrating code changes. This helps ensure that the codebase remains consistent, reliable, and readily deployable. In the context of open source projects, CI becomes particularly crucial, as early defect detection facilitates the smooth integration of changes from various contributors, enabling a more collaborative and efficient development environment. graph TD A[Code Changes] -->|Commit| B[CI Server] B -->|Automated Build| C[Run Tests] C -->|Test Results| D[Deploy/Integrate] D -->|Deployment Status| E[Notify Team] E -->|Feedback| AFigure 1. Continuous Integration Pipeline Maintaining a robust CI pipeline fosters a culture of reliability and trust in open source projects: Contributors can confidently submit changes. Maintainers can quickly review and integrate contributions. Users can rely on the project to deliver high-quality software. Continuous integration aligns with the collaborative spirit of open source development, allowing projects to embrace change, iterate rapidly, and deliver high-quality software. In the dynamic open source landscape, CI is indispensable, ensuring projects remain agile, reliable, and responsive to the evolving needs of developers and users. Testing C++ libraries is a challenging task: there are various factors to consider such as the different compilers, compiler versions, standard library versions, C++ features, operating systems, and architectures that the library may need to support. These factors make it difficult to write comprehensive tests that cover all possible scenarios. On top of that, each C++ workflow tends to have longer compile times due to the language’s nature. When compared to projects like Vue.js and NumPy, huge projects that primarily focus on JavaScript and Python, the differences become evident. Vue.js and NumPy can use simple CI setups to test their main workflows with a Windows job and a Linux job, where each of these jobs takes approximately 1 minute and 30 seconds: graph LR A[Matrix] -->|Windows| C1[Tests] A[Matrix] -->|Linux| C2[Tests] C1 --> D[Results] C2 --> D[Results] D --> F[Deploy/Integrate] D --> G[Notify Team]Figure 2. A typical CI workflow for a JavaScript or Python project Although the environment can always affect how the code behaves, these languages are at such a level of abstraction that projects can get away without testing their main workflows on all possible versions of Windows, Linux, and macOS. After this point, their level of abstraction allows them to rely on diminishing returns unless counter-evidence is provided. In other words: the library is innocent until proven guilty. When testing a C++ library, however, the situation is very different. A large C++ project that works flawlessly with one compiler will almost certainly fail to build with a different compiler version and environment. C++ is a systems programming language where code is interacting directly with the hardware and OS libraries. This makes the code more sensitive to the environment and a C++ library is guilty until proven innocent. To make matters worse, C++ developers can’t test these libraries locally in all possible environments for practical reasons. Some environments are proprietary, some are not available for free, and some are not available for all platforms. This means developers are often relying on the CI pipeline as the only way to ensure these libraries work in all reasonable environments. Thus, a typical C++ workflow would include a matrix describing a combination of factors such as: Factor Values Compiler GCC, Clang, MSVC, MinGW, clang-cl, Apple Clang Compiler Version GCC 4, GCC 5, GCC 6, …​, Clang 4, Clang 5, …​, MSVC 2017, MSVC 2019, …​ Standard Library libstdc++, libc++, MSVC 2017 C++ Standard C++11, C++14, C++17, C++20, …​, latest Operating System Windows, Linux, macOS Architecture x86, x64, ARM Build Type Debug, Release Linking Static / Dynamic Address Sanitizer true / false Undefined Behavior Sanitizer true / false Memory Sanitizer true / false Thread Sanitizer true / false ... true / false Optional Dependency A true / false Optional Dependency B true / false ... ... Optional Feature A true / false Optional Feature B true / false ... ... It’s easy to see that not all combinations of factors are valid or relevant: A compiler factor can only match a version of the same compiler Most compilers (except Clang) should only be tested with its corresponding standard library implementation Each compiler will match a specific operating system ... However, in this simple example, after filtering out invalid or irrelevant combinations of factors, the CI pipeline would still need to run 866,304 jobs. This is a combinatorial explosion. Throwing more hardware, time, or money at the problem cannot solve the problem. Filtering out a few extra invalid or irrelevant combinations of factors is also not enough. Even if we get to a small combination of factors, the lack of a systematic approach to reducing these combinations will keep us from testing all the combinations we need. The solution must be able to handle the combinatorial explosion in a systematic manner so that the total number of tests only grows linearly with the number of tests, redundancy is minimized, and all relevant combinations are tested. This difficulty to test C++ libraries has a viral effect with enormous implications to the C++ ecosystem: Libraries don’t properly test and support all platforms they claim to support Transitively, this support also becomes broken for any projects depending on the library Users end up avoiding dependencies altogether, so they can reliably support the platforms they need With some notable exceptions, this is currently the case with most small standalone libraries one can find on GitHub. These are libraries that could be very useful otherwise, so avoiding dependencies altogether is not a reasonable solution to the problem. We will never get anywhere meaningful if we’re not able to stand on the shoulders of giants. One common alternative C++ developers use to come up with reasonable CI workflows for their projects is to copy/paste the CI configuration from other projects. This is a very common practice, but it’s not a stable solution for the problem: First, the workflow being copied is often not testing all relevant environments or the relevant cases are different for the library being tested. In this case, the CI workflow ends up relying on luck, but this doesn’t work well for C++ projects due to its sensitivity to the environment. Second, copy/pasting and adapting workflows doesn’t scale well. C++ workflows tend to be complex, best practices are constantly being developed, and new tools and compiler versions are being released. For instance, if the main workflow pattern changes once a month and the developer is maintaining this pattern for 20 small projects, this means the developer will need to adapt the pattern 240 times a year: that’s one commit that needs to be written, tested and merged every business day. In practice, most projects just won’t catch up with the changes and best practices. C++ requires customization, which makes replicating patterns costly. While the workflows for other languages are often the very same commands to test the library, C++ projects are very different from each other. CI workflows are never the same procedure: dependencies need to be installed from different sources and integrated differently depending on the environment. Copy/pasting cannot be easily automated and the pattern needs to be adapted and retested. There’s also a conflict in how CI workflow patterns handle edge cases in individual projects. These patterns often include logic to handle edge cases for which other developers copying the pattern don’t understand the motivation. For instance, workflow patterns might include extra steps required by a less common compiler. Developers often accumulate the logic they don’t understand even though it’s not relevant to their tests or remove the logic they don’t understand even though it’s relevant to their tests. This project aims to address the challenges in testing C++ libraries by providing a collection of GitHub actions that are specifically designed to test C++ libraries in a variety of environments. GitHub actions were chosen as the platform for these tools because they are easy to use and are well-integrated with GitHub, where most open source projects are hosted. Instead of providing a single action that attempts to test a C++ project, the C++-actions provide a collection of actions that can be combined to create a comprehensive CI pipeline for testing C++ libraries. Users can select the actions that are most relevant to their project and combine them to create a customized CI pipeline that meets their needs. Each action includes features to improve the efficiency and reliability of the CI pipeline, such as caching, parallelization, and cross-compilation. The actions can be composed in reused in new or existing C++ projects. New projects can use a combination of all actions to focus on writing high-quality code and delivering great software to your users. Actions include best practices are have a stable API, so they can be easily reused in existing projects and users can inherit the best practices from the actions by simply updating their version. If you’ve ever read the documentation of a C++ library, you’ve probably seen a requirements section such as the following: The library requires a compiler supporting at least C++11. The library has been tested with the following compilers: clang >=3.8 gcc >=4.8 msvc >=14.1 In other words, the requirements of the library, or its contract, is defined in terms of compiler and feature requirements. Ensuring the library works whenever these requirements are met is the responsibility of the library, and this is what should be ultimately tested. The C++ Matrix Action is designed to automate the generation of a comprehensive test matrix for your C++ libraries given their requirements. It simplifies the process of defining the contract of what platforms your library supports and testing your project across a proper selected subset of relevant compiler versions and platforms. This means the usual CI workflow for a C++ library would be: graph LR R[Requirements] -->|Contract| A[Matrix] A[Matrix] -->|Environment 1| B1[Install Dependencies] A[Matrix] -->|Environment 2| B2[Install Dependencies] A[Matrix] -->|...| B3[Install Dependencies] B1 --> C1[Tests] B2 --> C2[Tests] B3 --> C3[Tests] C1 --> D[Reports] C2 --> D[Reports] C3 --> D[Reports] D --> F[Deploy/Integrate] D --> G[Notify Team] style A fill:#cccccc,stroke:#000000,stroke-width:2pxFigure 3. A typical C++ Actions workflow When a new version of a compiler is released within the range of supported versions, the CI pipeline will automatically test the new version. Best practices are constantly being developed, and these best practices can be inherited by simply updating the version of the action being used. Although this solves part of the problem, we still need to solve the combinatorial explosion of factors. The C++ Matrix Action handles this with requirement factors that can be used to create a fractional factorial experiment design and ensure all relevant factor combinations are tested in a systematic manner. The main problem with C++ projects is the combinatorial explosion of factors. Formally, we have a Factorial Experiment for which we need a Fractional Factorial Design to reduce the number of tests to a manageable number. As with any fractional factorial design, we need feedback on the relevance of each factor to explore the Sparsity-of-effects principle. In other words, we need procedurally know which combinations of factors aggregate most information and which combinations of factors are irrelevant. An automated search for the best fractional factorial design is not desirable, since the relevance of factors is not and cannot be stochastic. Instead, we provide categories of factors that can be used to define the requirements of a library: Latest factors, Variant factors, Combinatorial factors, and Combined factors. For instance, let’s assume we define the following requirements for a library: The library requires a compiler supporting at least C++17. The library should be tested with the following compilers: gcc >=4.8 clang >=3.8 msvc >=14.1 The C++ Matrix Action will generate matrix entries for all versions of GCC above 4.8 that support C++17. Let’s say it generates entries for GCC 7, GCC 8, GCC 9, GCC 10, GCC 11, GCC 12, GCC 13. Here’s how each type of factor will affect the matrix: Factor Effect Latest Factor Now suppose we define the \"latest\" factor gcc Coverage. This mean the entry \"GCC 13\" will be duplicated. The action will generate the original entry \"GCC 13\" and a new entry \"GCC 13 (Coverage)\" with the \"coverage\" key set to true. The \"coverage\" key will be set to false in all other entries. This is useful when we want to test the latest version of a compiler with a specific feature and know repeating the test with other combinations of compilers has no significant benefit. Variant Factor For variant factors, suppose we define the \"variant\" factor gcc Asan Shared. These variant factors don’t duplicate entries. Instead, these factors are included in existing intermediary compiler entries. In this case, the entries \"GCC 12\" and \"GCC 11\" will be replaced by the \"GCC 12 (Asan)\" and \"GCC 11 (Shared)\" entries. This is useful when we need to ensure a factor works at least once in the matrix, but testing it with all combinations of factors has diminishing returns and it doesn’t affect usual library behavior to justify duplicating an entry. Combinatorial Factor Finally, for combinatorial factors, suppose we define the \"combinatorial\" factor gcc Standalone to test a version of the library without dependencies. These combinatorial factors will generate a new entry in the matrix for each combination of factors. Although the matrix provides this option, it’s not recommended to use this type of factor unless it’s absolutely necessary for 2 reasons: first, it will contribute to a combinatorial explosion of factors, which is precisely what we’re trying to avoid; second, the same result can be achieved by including extra steps in the workflow. These extra steps can then be enabled or disabled by other factors with much better precision and allows the job to reuse the environment. This kind of factor is only useful when there is a reasonably small number of jobs, and we want to execute them in parallel. Combined Factor Combined factors can be used as a shorthand for a combination of factors. They can be included as latest, variant, or combinatorial factors. For instance, the combined factor gcc Asan+Ubsan will generate an entry with the factors Asan and Ubsan set to true. This is useful whenever testing a combination of factors at once is acceptable. Each entry in the matrix generated by the C++ Matrix Action will contain the entry name, the compiler name, its version, and a list of C++ standards. These are the basic fields in each entry. A number of auxiliary flags are defined in each entry to provide easy access to version components (e.g.: major, minor, patch), factors (one boolean value is set for each factor key), and its relative position in the test matrix (e.g.: is-latest, is-main, is-earliest, is-intermediary, has-factors). All these auxiliary flags can be used to filter steps in the workflow. For instance, if there’s a recommended way to install the library, this can be tested in all jobs and alternatives ways to install the library can be tested in a subset of jobs: for instance, skipping this step when the entry is-intermediary. Each matrix entry also contains a number of other fields that can be considered suggestions for that combination of factors: runs-on, container, generator`, b2-toolset, build-type, ccflags, cxxflags, env, install. Factors also influence suggestions: the value of these fields are also impacted if the entry includes a factor whose lowercase version is one of asan, ubsan, msan, tsan, coverage, x86, time-trace. Combined factors also influence the value of these fields. For instance, the factor gcc Asan might set cxxflags to something like -fsanitize=address, while the combined factor gcc Asan+Ubsan might set cxxflags to -fsanitize=address,undefined. All these extra fields should be considered suggestions, since they are not enforced by the action. All these suggestions can be completely ignored by the user, but they can also be customized by the user to fit the needs of the project. Common ways to customize these suggestions include (from the simplest to the most complex): Using the corresponding C++ Matrix Action input to customize the value of these fields (see the action reference) Use GitHub Actions Expressions to generate new values from existing values Use a custom bash step to generate new values from existing values Create a custom script to read the complete matrix and generate a new matrix with the desired values If none of these options is enough for the library requirements, the C++ Matrix Action also prints the complete matrix in YAML format, so it can be copy/pasted into the workflow as a starting point to be customized. The project also includes a number of independent actions that represent common steps in a C++ CI workflow. These include steps for setting up the compiler, installing dependencies, building the project, running tests, and generating reports. Although these actions are meant to integrate well with entries from the C++ Matrix Action, they can also be used independently in any existing project. With these actions, long scripts to test library workflows can be replaced by a few lines of YAML: graph LR subgraph For Each Entry B C D E end R[Requirements] --> A[Matrix] A[Matrix] --> B B[Setup C++] --> C C[Install Dependencies] --> D D[Workflows] --> E E[Reports] -->|success| F[Deploy/Integrate] E -->|failure| H[Notify Team] style A fill:#cccccc,stroke:#000000,stroke-width:2pxFigure 4. CI workflow using the C++ Actions The actions also abstract away the complexity of best practices or setting up environments that represent corner cases without polluting the main workflow with unnecessary details. For instance, workflows with less common compilers might require extra flags in CMake, but these flags are not relevant to the main workflow. The Setup C++ action is used to set up a C++ compiler. Analogous actions are included for individual compilers. These actions are analogous to the well-known actions such as actions/setup-node and actions/setup-python. The main difference is that the C++-actions attempt to replicate the environment most likely to be used by users of the library by trying to find the compiler or install it from the system package manager before downloading the binaries for a specific version. This is useful to increase the value of the specific combinations being tested in the matrix. For instance, if the user is testing a library with GCC 10, the action will first try to find GCC 10 in the system, then install it from the system package manager (gcc-10 in APT), and install the binaries directly only if the previous steps fail. The ensures the GCC version being test is the one most likely to be used by the user. The compiler path and version are returned as outputs, so they can be used in subsequent steps. After setting up the compiler defined by the entry, C++ workflows usually continue by installing dependencies from various sources. A second set of actions are designed to set up these dependencies. These setup-* actions are also analogous to the first set of compiler actions. They attempt to provide simple steps that can be used to set up APT packages, vcpkg packages, Boost modules, or download and install arbitrary packages from a URL. They have the same logic as the compiler actions: they first try to find the package in the system, then in the system package manager, and install the binaries directly only if the previous steps fail. Workflow actions are used to configure, build, test, install, and package the library in a single step. This is a common step in all C++ CI workflows. In particular, the CMake Workflow Action is designed to be used with CMake projects. It’s common for C++ projects to run a complete CMake workflow to test the library and another conditionally enabled CMake workflow step for the integration tests. This way, the integration instructions for the library are always up-to-date. Besides simplifying the workflow, the action allows the user to customize the specific CMake version used for the test. This is useful to ensure libraries don’t break their CMake cmake_minimum_required contract declarations. The action can even extract the minimum CMake version from the CMakeLists.txt file and use it to set up the environment. CMake best practices and features tend to change with new CMake versions. When multiple CMake versions are being tested by different entries and steps, the action also adapts how the inputs should be passed as arguments to CMake account for the features supported by that CMake version. This abstraction can both simplify the workflow while still taking advantage of CMake features not available in all CMake versions and ensuring the library works according to best practices for each version of CMake. A B2 workflow action is also provided for Boost library projects. This action is analogous to the CMake workflow action and is particularly useful for Boost library proposals. Workflows typically end with conditionally enabled steps to analyze the results of the tests. These reports usually include an analysis of compilation time, coverage reports, and extra information about the project relative to the latest commit. This project includes another set of actions to help users generate these reports. Note that these steps are usually conditionally enabled according to a factor in the matrix entry. For instance, a time-trace factor can be created to include something like -ftime-trace in the C++ flags and to conditionally enable the time-trace step in the workflow.","title":"Design Rationale","component":"cpp-actions","version":"master","name":"design","url":"/cpp-actions/design.html","titles":[{"text":"Continuous Integration","hash":"continuous-integration","id":1},{"text":"Challenges in C++ Testing","hash":"challenges_in_cpp_testing","id":2},{"text":"A Small Comparison","hash":"_a_small_comparison","id":3},{"text":"C++ Factors","hash":"_c_factors","id":4},{"text":"Effects on the Ecosystem","hash":"_effects_on_the_ecosystem","id":5},{"text":"Replicating Workflows","hash":"_replicating_workflows","id":6},{"text":"C++ Actions","hash":"cpp_actions","id":7},{"text":"From matrices to requirements","hash":"cpp_actions_matrix","id":8},{"text":"Factors","hash":"cpp_actions_matrix_factors","id":9},{"text":"Matrix entries","hash":"_matrix_entries","id":10},{"text":"Basic fields","hash":"_basic_fields","id":11},{"text":"Auxiliary flags","hash":"_auxiliary_flags","id":12},{"text":"Suggestions","hash":"cpp_actions_matrix_suggestions","id":13},{"text":"Independent Actions","hash":"_independent_actions","id":14},{"text":"Compilers","hash":"_compilers","id":15},{"text":"Packages","hash":"_packages","id":16},{"text":"Workflows","hash":"_workflows","id":17},{"text":"Analysis and Reports","hash":"_analysis_and_reports","id":18}]},"3":{"id":3,"text":"Testing C++ libraries can be a challenging task, as there are various factors to consider such as the different compilers, operating systems, and architectures that the library may need to support. Furthermore, C++ itself is a complex language with a wide range of features, making it difficult to write comprehensive tests that cover all possible scenarios. To address these challenges, this repository provides a collection of GitHub actions that are specifically designed to test C++ libraries in a variety of environments. These actions aim to create a common and resilient set of tools that can be used to test libraries across a wide range of platforms and configurations. By leveraging the power of GitHub Actions, these C++ testing tools can be easily integrated into a development workflow, allowing developers to quickly and efficiently test their libraries with minimal effort. This can help to ensure that the library is functioning correctly and that it is compatible with a wide range of platforms and configurations. Whether you are a seasoned C++ developer or just starting out, these testing tools can help you to streamline your development workflow and ensure that your library is robust and reliable. With a comprehensive set of testing tools at your disposal, you can focus on writing high-quality code and delivering great software to your users.","title":"C++ Actions","component":"cpp-actions","version":"master","name":"index","url":"/cpp-actions/index.html","titles":[]},"4":{"id":4,"text":"Boost Software License - Version 1.0 - August 17th, 2003 Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and accompanying documentation covered by this license (the \"Software\") to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software is furnished to do so, all subject to the following: The copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License","component":"cpp-actions","version":"master","name":"license","url":"/cpp-actions/license.html","titles":[]},"5":{"id":5,"text":"This action runs a complete B2 workflow from Boost source files. If you are developing a Boost library, this is usually the next step in your workflow after setting up a C++ compiler and fetching dependencies with Install Packages. It takes the Boost source directory and runs the usual steps to test the specified modules. This includes compiling b2 if needed and generating a proper user-config.jam file to define the path to the C++ compiler provided by the cxx input. This action is useful for Boost library proposals, where B2 support is mandatory. It assumes the library being tested is in the libs directory of the Boost super-project and that source-dir is the root of the super-project. If your library also supports CMake, the next step in your workflow should usually be CMake Workflow. Otherwise, the next step in your workflow should usually be the generation of reports, with tools such as the Create Flamegraph (when matrix.time-trace) and Create Changelog (usually in another workflow job). You can also include customs steps to upload coverage reports (when matrix.coverage). If your b2 workflow provides CMake installation and configuration scripts, it is also usual to include multiple CMake workflow steps as integration tests for CMake. steps: - name: B2 Workflow uses: alandefreitas/cpp-actions/b2-workflow@master with: source-dir: ${{ steps.boost-clone.outputs.boost-dir }} modules: variant2 toolset: ${{ matrix.b2-toolset }} build-variant: ${{ matrix.build-type }} cxx: ${{ steps.setup-cpp.outputs.cxx || '' }} cxxstd: ${{ matrix.cxxstd }} address-model: ${{ matrix.address-model }} asan: ${{ matrix.asan }} ubsan: ${{ matrix.ubsan }} tsan: ${{ matrix.tsan }} shared: ${{ matrix.shared }} Parameter Description Default source-dir The boost source directory. This path will be used to build and install B2 for the workflow and test the specified modules. . build-dir Changes the build directories for all project roots being built. When this option is specified, all Jamroot files must declare a project name. The build directory for the project root will be computed by concatenating the value of the --build-dir option, the project name specified in Jamroot, and the build dir specified in Jamroot (or bin, if none is specified). The option is primarily useful when building from read-only media, when you can’t modify Jamroot. cxx Path to C++ compiler. If the input is not specified, the action will use the compiler defined by the environment variable CXX. If the environment variable is not specified, the action will use the default compiler as identified by B2. cxxflags Flags to be used with the C++ compiler. If the input is not specified, the action will use the flags defined by the environment variable CXXFLAGS. If the environment variable is not specified, the action will use the default flags as identified by B2. ccflags Flags to be used with the C compiler. If the input is not specified, the action will use the flags defined by the environment variable CFLAGS. If the environment variable is not specified, the action will use the default flags as identified by B2. cxxstd Comma-separated list of standards with which B2 will build and test the program. If the input is not specified, the action will use the standards defined by the environment variable CXXSTD. If the environment variable is not specified, the action will use the default standards as identified by B2. B2 will iteratively build and test the specified modules with multiple standards. shared Determines if the link option should be shared so that it creates shared libraries. If the input is not specified, the action will use the value defined by the environment variable BUILD_SHARED_LIBS. If the environment variable is not specified, the action will use the default value as identified by B2. toolset B2 toolset name. The toolset is somewhat equivalent to a CMake generator. If not specified, the action will use the toolset defined by the environment variable B2_TOOLSET. If the environment variable is not specified, the action will use the default toolset detected by B2. build-variant Custom build variants. If the provided variant is a CMake build-type, the argument is mapped to the equivalent B2 variant: - Release → release - Debug → debug - RelWithDebInfo → release with debug-symbols=on - → lowercase If the input is not specified, the action will use the value defined by the environment variable B2_BUILD_VARIANT. If the environment variable is not specified, the action will use the value from build-type. build-type An alternative to build-variant, for compatibility with CMake workflows. When build-variant is not provided, this input is used to set the build variant. If the input is not specified, the action will use the value defined by the environment variable B2_BUILD_TYPE. If the environment variable is not specified, the action will use the default value as identified by B2. modules The list of modules we should test with B2 in the libs directory of the Boost super-project. The directory libs//test will be provided for each module in the list. ⚠️ This parameter is required. extra-args Extra arguments. warnings-as-errors Treat warnings as errors. address-model Valid B2 list of address models. asan Enable address-sanitizer. ubsan Enable undefined-sanitizer. msan Enable memory-sanitizer. tsan Enable thread-sanitizer. coverage Enable coverage. linkflags Extra linker flags. threading B2 threading option. rtti Enables or disables run-time type information. clean Cleans all targets in the current directory and in any sub-projects. Note that unlike the clean target in make, you can use --clean together with target names to clean specific targets. false clean-all Cleans all targets, no matter where they are defined. In particular, it will clean targets in parent Jamfiles, and targets defined under other project roots. false abbreviate-paths Compresses target paths by abbreviating each component. This option is useful to keep paths from becoming longer than the filesystem supports. See also the B2 documentation section “Target Paths”. true hash Compresses target paths using an MD5 hash. This option is useful to keep paths from becoming longer than the filesystem supports. This option produces shorter paths than --abbreviate-paths does, but at the cost of making them less understandable. See also the B2 documentation section “Target Paths”. false rebuild-all Equivalent to the -a option. Causes all files to be rebuilt. false dry-run Equivalent to the -n option. Do not execute the commands, only print them. false stop-on-error Equivalent to the -q option. Stop at the first error, as opposed to continuing to build targets that don’t depend on the failed ones. false config Equivalent to the --config=filename option. Override all configuration files. site-config Equivalent to the --site-config=filename option. Override the default site-config.jam. user-config Equivalent to the --user-config=filename option. Override the default user-config.jam. When this option is specified, the action will not generate a user-config.jam file with the cxx toolset path. project-config Equivalent to the --project-config=filename option. Override the default project-config.jam. debug-configuration Equivalent to the --debug-configuration option. Produces debug information about the loading of B2 and toolset files. If not specified, the value is inherited from trace-commands. debug-building Equivalent to the --debug-building option. Prints what targets are being built and with what properties. If not specified, the value is inherited from trace-commands. debug-generators Equivalent to the --debug-generators option. Produces debug output from the generator search process. Useful for debugging custom generators. If not specified, the value is inherited from trace-commands. include Additional include paths for C and C++ compilers. define Additional macro definitions for C and C++ compilers. The string should be either SYMBOL or SYMBOL=VALUE. runtime-link Equivalent to the --runtime-link= option. Determines if shared or static version of C and C++ runtimes should be used. jobs Number of jobs to use in parallel builds. If the input is not specified, the action will use the value defined by the environment variable B2_JOBS. If the environment variable is also not specified, the action will use the number of processors available in the system. trace-commands Trace commands executed by the workflow. false","title":"B2 Workflow","component":"cpp-actions","version":"master","name":"b2-workflow","url":"/cpp-actions/actions/b2-workflow.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3}]},"6":{"id":6,"text":"This action clones the Boost source directory, attempting to get it from the cache first. Only the specified modules are cloned and cached. This is usually the next step in your workflow after setting up a C++ compiler with Setup C++ or installing other dependencies with Install Packages. Cloning boost is useful when one wants the always use the latest version of boost in a library or is writing a boost proposal. For other use cases, individual boost modules can be fetched with vcpkg in Install Packages or directly included in a package manager manifest. Besides the explicitly specified list of modules, the action can also scan directories for boost dependencies to implicitly determine what modules should be cloned. The union of the implicitly and explicitly specified modules is cloned. Caching is based only on these dependencies. For a project with about 5 boost dependencies, caching saves about 4 minutes in the workflow. When there’s no cache, the scanning scripting saves us about 3 minutes. After cloning boost modules for your C++ project, the next step in your workflow should usually be CMake Workflow. If you are developing a Boost library, it is also usual for the next step to be the B2 Workflow. steps: - name: Clone Boost.Variant2 uses: alandefreitas/cpp-actions/boost-clone@master id: boost-clone with: branch: master modules: variant2 Parameter Description Default boost-dir The boost directory. The default value assumes boost is in-source. branch Branch of the super-project. master patches Libraries used to patch the boost installation. ⚠️ This parameter is required. modules The boost submodules we need to clone. modules-scan-paths Additional modules subdirectory to scan; can be repeated. modules-exclude-paths Additional modules subdirectory to scan; can be repeated. test scan-modules-dir An independent directory we should scan for boost dependencies to clone. scan-modules-ignore List of modules that should be ignored in scan-modules. cache Cache boost source directory. The cache key will include the boost hash, the modules hash and the patch hashes. When using the cache, the action will not scan for dependencies. This means that if a transitive dependency is updated, the cache will not be invalidated. Note that the cache only includes the source directory and will be reused by other environments. This means binaries should not be included in the boost directory. When testing a boost library, this source directory should be moved to another location before it’s the tests are built. true optimistic-caching If this option is set to true, the cache key will not include the main boost super-project hash in the cache key. The key will only include the hash of direct module dependencies and patches in the cache key. This means that if this option is true and transitive module dependencies are updated, the cache will not be invalidated until transitive dependencies are updated or the current cache expires. On the other hand, if this option is set to false, the cache might be invalidated if unrelated modules in the super-project are updated. false trace-commands Trace commands executed by the workflow. false Output Description boost-dir The absolute path to the boost source files.","title":"Boost Clone","component":"cpp-actions","version":"master","name":"boost-clone","url":"/cpp-actions/actions/boost-clone.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4}]},"7":{"id":7,"text":"This action runs a complete CMake workflow from source files. This is usually the next step in your workflow after setting up a C++ compiler and fetching dependencies with Install Packages. A workflow is composed of the following steps: Configure Build Test Install The action also sets up the environment for the workflow: It validates the CMake version installed in the system, Updates CMake if the library has a different minimum version, Identifies what features the current CMake version supports, and Runs a complete cmake workflow The action will adjusts the parameters as needed according to the features that CMake version supports. For instance, If the CMake version does not support the -S …​ -B …​ syntax, the action will create the build directory and run the configuration step from there. If the specified or default generator is multi-config, CMAKE_CONFIGURATION_TYPES will be used instead of CMAKE_BUILD_TYPE, since the later is ignored by these generators. If the CMake version does not support the cmake --install syntax, the cmake --build --target install will be use instead. If the CMake version does not support multiple targets in the cmake --build syntax, the action will run the build step once for each target. The action also creates GitHub annotations when warnings or errors are emitted at any of these steps. This includes annotations for CMake errors at the configure step and build errors emitted from the compiler at the build step. The action supports CMake presets. If a preset is defined, the action will use the values defined in the preset file for the configure step. The other options will be used to override the values defined in the preset. If the CMake version does not support presets, the action will attempt to parse the preset file and use the values defined in it for inputs that are not defined. The action also supports preset macros in the input values. For instance, if the build-dir is defined as ${sourceDir}/build/${hostSystemName}, the action will replace this value with the actual values of the variables defined in the input options. After running the a complete CMake workflow for your project, the next step in your workflow should usually be the generation of reports, with tools such as the Create Flamegraph (when matrix.time-trace) and Create Changelog (usually in another workflow job). You can also include customs steps to upload coverage reports (when matrix.coverage). If your project provides CMake installation and configuration scripts, it is also usual to include multiple CMake workflow steps as integration tests for CMake. steps: - name: CMake Workflow uses: alandefreitas/cpp-actions/cmake-workflow@master with: cmake-version: '>=3.20' source-dir: tests generator: ${{ matrix.generator }} generator-toolset: ${{ matrix.generator-toolset }} toolchain: ${{ steps.package-install.outputs.vcpkg-toolchain }} build-type: ${{ matrix.build-type }} run-tests: true install-prefix: .local cxxstd: ${{ matrix.cxxstd }} cc: ${{ steps.setup-cpp.outputs.cc }} ccflags: ${{ matrix.ccflags }} cxx: ${{ steps.setup-cpp.outputs.cxx }} cxxflags: ${{ matrix.cxxflags }} shared: ${{ matrix.shared }} extra-args: \"${{ ( !matrix.no-deps && format('-D BOOST_SRC_DIR=\\\"{0}\\\"', steps.boost-clone.outputs.boost-dir)\\ \\ ) || '' }} \\n${{ ( matrix.no-deps && '-D CPP_ACTIONS_NO_DEPS=ON' ) || '' }}\\n\" export-compile-commands: ${{ matrix.time-trace }} package: true package-artifact: ${{ matrix.is-main }} ref-source-dir: . Parameter Description Default cmake-path The cmake executable. cmake cmake-version A semver range string with the cmake versions supported by this workflow. If the existing version in the environment does not satisfy this requirement, the action install the min CMake version that satisfies it. This should usually match the cmake_minimum_required defined in your CMakeLists.txt file. * source-dir Directory for the source files. . url URL to the source code. If this input is defined, the action will download the source code from the URL and use it as the source directory. git-repository Git repository to clone. If this input is defined, the action will shallow clone the repository and use it as the source directory. git-tag Git branch name, tag or commit hash to checkout from the git repository. If this input is defined, the action will checkout this tag from the repository. download-dir Directory where the source code will be downloaded. If the input is not specified, the action will download the source code to the source directory. patches List of patch files or directories to be copied to the source directory. The action will copy the files to the source directory before running the configure step. This is often useful when the source directory comes from a URL or git repository to patch the source files with CMake presets or include build scripts that are not part of the repository. The files will be copied in the order they are defined in the input. If a file is specified, the action will copy the file to the source directory with the same filename. If a directory is specified, the action will copy all files in the directory to the source directory. build-dir Directory for the binaries relative to the source directory. The build directory might come from a preset file or be defined by the user. If no preset file is specified and the user does not define the build directory, the action will use the default build directory. preset Name of the CMake preset to use. If a preset is defined, other options will be used by CMake to override the values defined in the preset. If the CMake version doesn’t support presets, the action will attempt to parse the preset file and use the values defined in it. cc Path to C compiler. If the input is not specified, the action will use the compiler defined by the environment variable CC. The value can be an absolute path or the name of an application to be found it PATH. If the value is a relative path starting with '.', the path is resolved relative to the current working directory. If the environment variable is not specified, the action will use the default compiler as identified by CMake. ccflags Flags to be used with the C compiler. If the input is not specified, the action will use the flags defined by the environment variable CFLAGS. If the environment variable is not specified, the action will use the default flags as identified by CMake. cxx Path to C++ compiler. If the input is not specified, the action will use the compiler defined by the environment variable CXX. The value can be an absolute path or the name of an application to be found it PATH. If the value is a relative path starting with '.', the path is resolved relative to the current working directory. If the environment variable is not specified, the action will use the default compiler as identified by CMake. cxxflags Flags to be used with the C++ compiler. If the input is not specified, the action will use the flags defined by the environment variable CXXFLAGS. If the environment variable is not specified, the action will use the default flags as identified by CMake. cxxstd Comma-separated list of standards with which cmake will build and test the program. If the input is not specified, the action will use the standards defined by the environment variable CXXSTD. If the environment variable is not specified, the action will use the default standards as identified by CMake. Unlike CMake, which can only build with one standard at a time, this action will iteratively build and test with multiple standards. When multiple standards are used, the build directory will be suffixed with the standard number with the exception of the latest standard. shared Determines if add_library should create shared libraries (BUILD_SHARED_LIBS). If the input is not specified, the action will use the value defined by the environment variable BUILD_SHARED_LIBS. If the environment variable is not specified, the action will use the default value as identified by CMake (OFF). toolchain Path to toolchain. If the input is not specified, the action will use the toolchain defined by the environment variable CMAKE_TOOLCHAIN_FILE. If the environment variable is not specified, the action will use the default toolchain as identified by CMake. generator Generator name. If not specified, the action will use the generator defined by the environment variable CMAKE_GENERATOR. If the environment variable is not specified, the action will try to use the default generator for the platform. generator-toolset Toolset specification for the generator, if supported. The option will be applied in the command line as the -T option. If not specified, the action will use the toolset defined by the environment variable CMAKE_GENERATOR_TOOLSET. If the environment variable is not specified, the action will use the default toolset for the generator. generator-architecture Architecture specification for the generator, if supported. The option will be applied in the command line as the -A option. If not specified, the action will use the architecture defined by the environment variable CMAKE_GENERATOR_ARCHITECTURE. If the environment variable is not specified, the action will use the default toolset for the generator. build-type Build type. If not specified, the action will use the build type defined by the environment variable CMAKE_BUILD_TYPE. If the environment variable is not specified, the action will use Release as the build type. If all values are empty, the action will try to use the default generator for the platform. If the generator is multi-config, this values will be applies to the CMAKE_CONFIGURATION_TYPES CMake options instead of CMAKE_BUILD_TYPE. build-target Targets to build instead of the default target. This can be a single target or a list of targets separated by a ,, ; or space. extra-args Extra arguments to cmake configure command. export-compile-commands Set CMAKE_EXPORT_COMPILE_COMMANDS=ON in the configure step. If the input is not specified, the action will use the value defined by the environment variable CMAKE_EXPORT_COMPILE_COMMANDS. If the environment variable is not specified, the action will use the default value as identified by CMake (OFF). install-prefix Path where the library should be installed. If the input is not specified, the action will use the path defined by the environment variable CMAKE_INSTALL_PREFIX. If the environment variable is not specified, the action will use the default path as identified by CMake. jobs Number of jobs to use in parallel builds. If the input is not specified, the action will use the value defined by the environment variable CMAKE_JOBS. If the environment variable is also not specified, the action will use the number of processors available in the system. run-tests Whether we should run tests. If the input is not specified, the action will use the value defined by the environment variable CMAKE_RUN_TESTS. If the environment variable is also not specified, the action will attempt to run tests but will not fail if there are no tests. When the value is true or false, the action will also set the configure-tests-flag to ON or OFF. When the value is undefined, the configure-tests-flag is ignored. configure-tests-flag Specify the flag to be passed to cmake to enable/disable tests in the configuration step. By default this is BUILD_TESTING, which is an option automatically created by the CTest module. If the input contains a \"=\", the action will use the value as is. BUILD_TESTING test-all-cxxstd Whether we should run tests for all C++ standards defined by cxxstd. If the input is not specified, the action will only run the tests with the last value defined in cxxstd. false install Whether we should install the library. The library is only installed once in the install-prefix using the latest standard in cxxstd. If the input is not specified, the action will use the value defined by the environment variable CMAKE_INSTALL. If the environment variable is also not specified, the action will attempt to install the library but will not fail if the library cannot installed. install-all-cxxstd Whether we should install the library for all C++ standards defined by cxxstd. If the input is not specified, the action will only install the library with the last value defined in cxxstd. false package Whether we should run cpack with the specified package-generators after the install step. If the input is not specified, the action will use the value defined by the environment variable CMAKE_PACKAGE. If the environment variable is also not specified, the action will attempt to run cpack but will not fail if cpack cannot be run. false package-all-cxxstd Whether we should run cpack for all C++ standards defined by cxxstd. If the input is not specified, the action will only run cpack with the last value defined in cxxstd. false package-name The name of the package (or application). If not specified, CMake will default to the project name. package-dir The directory in which the packages are generated by cpack. If it is not set then this will default to the build dir determined by CPACK_PACKAGE_DIRECTORY, which may be defined in CMakeLists.txt, a CPack config file or from the cpack command line option -B. If package-dir is set, it overrides the value found in the config file. package-vendor Override or define CPACK_PACKAGE_VENDOR. package-generators A semicolon-separated list of generator names used by cpack. If not specified, the action will use the generators defined by the environment variable CPACK_GENERATOR. If this variable is not set, the action will attempt to generate the package with all CPack generators available to CMake. package-artifact Whether the packages generated with CPack should be stored as action artifacts. If the input is not specified, the action will use the value defined by the environment variable CMAKE_PACKAGE_ARTIFACT. If the environment variable is also not specified, the action will store the packages as artifacts. package-retention-days The number of days to keep the packages generated with CPack as action artifacts. 10 create-annotations Create github annotations for errors and warnings at all steps. If the input is not specified, the action will use the value defined by the environment variable CMAKE_CREATE_ANNOTATIONS. If the environment variable is also not specified, the action will create annotations. ref-source-dir A reference base directory for annotations. For instance, if there is an error in the /home/user/project/src/main.cpp file, the action will create an annotation referring to the repository path src/main.cpp. If the reference source directory is /home/user/project/src, the action will create an annotation referring to main.cpp instead because any annotation filename will be relative to this directory. If no value is provided, the environment variable GITHUB_WORKSPACE will be used as the reference source directory. This means all annotations will be relative to the repository root if actions/checkout has been called without specifying a custom path option. Changing this value is typically useful when the repository being tested is not the workspace directory, in which we need to make annotations relative to some other directory. In most cases, the default option should be enough. trace-commands Trace commands executed by the workflow. false","title":"CMake Workflow","component":"cpp-actions","version":"master","name":"cmake-workflow","url":"/cpp-actions/actions/cmake-workflow.html","titles":[{"text":"Presets","hash":"_presets","id":1},{"text":"Next steps","hash":"_next_steps","id":2},{"text":"Example","hash":"_example","id":3},{"text":"Input Parameters","hash":"_input_parameters","id":4}]},"8":{"id":8,"text":"The C Matrix Action is designed to automate the generation of a comprehensive test matrix for your C libraries given their requirements. It simplifies the process of defining the contract of what platforms your library supports and testing your project across a proper selected subset of revelant compiler versions and platforms. With this action, you can define a set of requirements to test your C++ library. It will then generate a test matrix by combining the specified requirements into a fractional factorial design to ensure all proper combinations are tested in a systematic manner. This approach significantly increases the chances of catching compatibility issues early on and helps in delivering a robust and reliable library to users. The action should be run as extra initial “setup” job in your workflow. The job will run the action and output matrix, which is a JSON string containing the whole matrix. This matrix should be output of your first setup job. In your second build job, you can attribute the entire matrix to the strategy.matrix.include parameter and create your workflow as usual with the parameters from the matrix: jobs: cpp-matrix: runs-on: ubuntu-latest name: Generate Test Matrix outputs: matrix: ${{ steps.cpp-matrix.outputs.matrix }} steps: - name: Generate Test Matrix uses: alandefreitas/cpp-actions/cpp-matrix@master id: cpp-matrix with: standards: '>=11' build: needs: cpp-matrix strategy: fail-fast: false matrix: include: fromJSON(needs.cpp-matrix.outputs.matrix) # use matrix entries name: ${{ matrix.name }} runs-on: ${{ matrix.runs-on }} container: ${{ matrix.container }} steps: - name: Clone library uses: actions/checkout@v3 - name: Setup C++ Compiler uses: alandefreitas/cpp-actions/setup-cpp@master id: setup-cpp with: compiler: ${{ matrix.compiler }} version: ${{ matrix.version }} - name: CMake Workflow uses: ./cmake-workflow with: cc: ${{ steps.setup-cpp.outputs.cc || matrix.cc }} cxx: ${{ steps.setup-cpp.outputs.cxx || matrix.cxx }} cxxstd: ${{ matrix.cxxstd }} cxxflags: ${{ matrix.cxxstd }} # And you've safely tested your C++ library just like that... The input parameters allow factors to be defined for each compiler. These factors can be defined as latest factors (which are duplicated and applied to the latest version of each compiler) or as regular factors (which are injected into intermediary versions of each compiler). See the Factors Section for a better understanding of the motivation for these factor types. The values in each matrix entry include a few categories of keys: the main keys, auxiliary keys, factor keys, and suggestions. The main keys include information such as the compiler name and version. Auxiliary keys include information that is useful for filtering and sorting the matrix, such as information about the relative position of an entry in the matrix. Factor keys include information about the factors that might have been applied to the entry. Suggestions include opinionated recommendations for other parameters of your workflow as a starting point for your test matrix. Some examples of keys including suggestions are runs-on, container, generator`, b2-toolset, build-type, ccflags, cxxflags, env, and install. These suggestions often need to be customized and this could not be different, since there is a myriad of ways in which libraries should be tested. Common ways to customize these are: Ignoring suggestions that are not applicable to your use case Using the corresponding action input to customize the value of these fields (see action input parameters) Use GitHub Actions Expressions to generate new values from existing values Use a custom bash step to generate new values from existing values Create a custom script to read the complete matrix and generate a new matrix with the desired values For instance, if the recommendation of running a workflow in the container ubuntu:22.04 is not appropriate because you’re going to use a container that already has your dependencies, you could set the runs-on input parameter to: - name: Generate Test Matrix # ... with: # ... containers: | gcc: my-ubuntu:22.04-container This would replace the recommendation for ubuntu:22.04 with my-ubuntu:22.04-container for all entries with the compiler gcc. In some cases, you could use a expression directly in the workflow to use a different value for the container: # In your main workflow containers: ${{ matrix.runs-on == 'ubuntu-22.04' && 'my-ubuntu:22.04-container' || matrix.container }} This would replace the recommendation for ubuntu:22.04 with my-ubuntu:22.04-container for all entries. If you’re familiar with GitHub Actions and bash, you can also use a custom bash step to generate new values from existing values or write a complete script to customize the matrix. If none of these options is enough for the library requirements, the action also prints the complete matrix in YAML format, so it can be copy/pasted into the workflow as a starting point to be customized. In many cases, we need to reuse GitHub expressions to generate new values based on existing values in the matrix. For instance, consider an entry in the matrix that has the x86 factor set to true. When using b2, we should set address-model=32 for this entry. Otherwise, we should set address-model=64. With GitHub expressions, we can generate this value based on the x86 factor: b2 address-model={{ matrix.x86 && '32' || '64' }} If this pattern needs to be repeated in many entries, this pattern might become cumbersome. In this case, the action allows the user to define extra values to be injected in each entry of the matrix. These values can be used to generate new values based on existing values in the matrix with handlebars. You could set the following extra values in each entry of the matrix: extra-values: | address-model: {{#if x86}}32{{else}}64{{/if}} # ... run: | b2 address-model={{ matrix.address-model }} Entries are ordered in the matrix according to the following criteria: 1) Latest versions of each compiler 2) Compilers with single versions 3) Oldest versions of each compiler 4) Entries with factors 5) Intermediary versions of each compiler The input parameter generate-summary can be used to generate a summary of the matrix with the entries ordered according to these criteria. The requirement parameters support semver ranges, including range disjunctions. For instance, consider the default compiler range clang >=3.8, which might test your library with too many versions of clang. You could remove intermediary versions of clang with the range clang >=3.8 =10, which ensure old versions are recent versions are covered, while eliminating intermediary versions. Semver ranges can also help when a bug is found in a specific compiler version. Consider someone has reported a bug in GCC 8.1, and you want to keep track of that. The semver range gcc >=4.8 =10 would ensure version GCC8.1 specifically, and not any other version is the range >=8.0.0 =4.8 to gcc >=4.8 =6.0 =11 to only test intermediary GCC versions >=6.0 =11' compilers: 'gcc >=4.8 =9 clang >=3.8 11 msvc >=14 apple-clang * mingw * clang-cl * ' subrange-policy: 'msvc: one-per-minor ' latest-factors: 'msvc ASan gcc Coverage TSan UBSan Fetch-Content clang Fetch-Content ' factors: 'gcc ASan Shared No-Deps msvc Shared x86 clang Time-Trace ASan+UBSan mingw Shared ' force-factors: 'mingw: No-Deps ' extra-values: 'vcpkg-packages: {{#if fetch-content}}fmt{{/if}} address-model: {{#if x86}}32{{else}}64{{/if}} ' Parameter Description Default compilers A list of compilers to be tested. Each compiler can be complemented with its semver version requirements to be tested. When the compiler version requirements are provided, the action will break the requirements into subsets of major versions to be tested. When no version is provided, the '*' semver requirement is assumed. The action can identifies subsets of compiler versions for GCC, Clang, and MSVC. For any other compilers, the version requirements will passthrough to the output. gcc >=4.8 clang >=3.8 msvc >=14 apple-clang * mingw * clang-cl * subrange-policy The policy to be used to break the compiler version requirements into sub-ranges of versions. For instance, if the compiler requirements are gcc >=4.8, the action will typically generate entries that satisfy gcc >=4.8 =5 =6 98 (2011 > 1998). >=11 max-standards The maximum number of standards to be tested with each compiler. For instance, if 'max-standards' is 2 and the compiler supports '11,14,17,20,23' given the in the standard requirements, the standards 20,23 will be tested by this compiler. 2 latest-factors The factors to be tested with the latest versions of each compiler. For each factor in this list, the entry with the latest version of a compiler will be duplicated with an entry that sets this factor to true. Other entries will also include this factor as false. The following factors are considered special: 'asan', 'ubsan', 'msan', 'tsan', and 'coverage'. When these factors are defined in an entry, its 'ccflags', 'cxxflags', and 'linkflags' value are also modified to include the suggested flags for factor. gcc Coverage TSan UBSan factors The factors to be tested with other versions of each compiler. Each factor in this list will be injected into a version of the compiler that is not the latest version. An entry with the latest version of the compiler will be duplicated with this factor if there are no entries left to inject the factor. Other entries will also include this factor as false. gcc Asan Shared msvc Shared x86 clang Time-Trace mingw Shared combinatorial-factors The factors to be tested with all combinations of other factors. When combinatorial factors are defined, for each entry in the matrix, a new entry will be created with the factors in this list set to true. For instance, if the library can be built both in \"Standalone\" mode and with dependencies, the factor 'Standalone' can be added to this list to duplicate all entries. Each copy would include a \"Standalone\" factor set to true or false. Typically, it is advisable to steer clear of combinatorial factors to prevent a combinatorial explosion. It’s usually better to only test the combinations that are expected to be used in practice and include an extra steps in the workflow to test any combinatorial factors. For instance, if the library can be built both in \"Standalone\" mode and with dependencies, its workflow can simply include an extra step to also test the library in \"Standalone\" mode and keep the step to test the library with dependencies. This is usually safer and cheaper than duplicating the entire matrix to test all combinations of these factors and also allows steps to be skipped when the library is not expected to be built in a given mode. For instance, testing a library on Standalone mode might not be necessary when the library is being tested with intermediary compilers. force-factors A multi-line list of factor flags to be injected with each range of compiler version even if the entry doesn’t have the usual requirements to have that factor. Each line has the format: [ ]: For instance, gcc >=13 is equivalent to it being set to * and will apply the build type to all versions of the compiler. When the build type is unspecified, the action will infer the build type from the compiler name and its version. extra-values A multi-line list of key-value pairs to be injected in each entry of the matrix. Each line has the format: : For instance, hash-key: value includes the hash-key with the value value in each entry of the matrix. This means it can later be accessed more easily via the matrix output of the action. The values also support Handlebars expressions, which can be used to generate values based on other values in the entry. For instance, hash-key: {{ compiler }}-{{ version }} would generate a hash-key with the value gcc-11.1 for an entry with the compiler gcc and version 11.1. Previous extra values in the entry can also be accessed via the matrix output of the action. For instance: cache-key: cache-{{ hash-key }}. runs-on A multi-line list of github runner images to be used with each range of compiler version. Each line has the format: [ ]: For instance, gcc >=13.1: ubuntu-latest indicates that the runner image ubuntu-latest should be used to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the runner image to all versions of the compiler. When the runner image is specified, a container is only be suggested for the entries if the container option for that compiler version is also specified. When the runner image is unspecified, the action will infer the runner image and potentially a container from the compiler name and its version. containers A multi-line list of docker containers to be used with each range of compiler version. Each line has the format: [ ]: For instance, gcc >=13.1: ubuntu:22.04 indicates that the docker container ubuntu:22.04 should be used to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the container to all versions of the compiler. When the container is specified for that compiler version and the runs-on option is not, an ubuntu image is suggested for the entry to run the container. When the container is unspecified, the action can still infer a container for the compiler version according to the rules defined in the use-containers option. generators A multi-line list of cmake generators to be used with each range of compiler version. Each line has the format: [ ]: For instance, gcc >=13.1: Ninja indicates that the cmake generator Ninja should be used to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the generator to all versions of the compiler. When the generator is unspecified, the action will infer the generator from the compiler name and its version. generator-toolsets A multi-line list of cmake generator toolsets to be used with each range of compiler version. Each line has the format: [ ]: For instance, clang-cl *: ClangCL indicates that the cmake generator toolset ClangCL should be used to test clang-cl with any version. Omitting is equivalent to it being set to * and will apply the generator to all versions of the compiler. When the generator toolset is unspecified, the action will infer the generator toolset from the compiler name and its version. b2-toolsets A multi-line list of b2 toolsets to be used with each range of compiler version. Each line has the format: [ ]: For instance, gcc >=13.1: gcc indicates that the b2 toolset gcc-13 should be used to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the toolset to all versions of the compiler. When the toolset is unspecified, the action will infer the toolset from the compiler name and its version. ccflags A multi-line list of C compiler flags to be used with each range of compiler version. Each line has the format: [ ]: For instance, gcc >=13.1: -O3 indicates that the C compiler flag -O3 should be used to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the flag to all versions of the compiler. When the flag is unspecified, the action will infer the flag from the compiler name and its version. cxxflags A multi-line list of C compiler flags to be used with each range of compiler version. Each line has the format: `[ ]: ` For instance, `gcc >=13.1: -O3` indicates that the C compiler flag -O3 should be used to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the flag to all versions of the compiler. When the flag is unspecified, the action will infer the flag from the compiler name and its version. install A multi-line list of packages to be installed with each range of compiler version. Each line has the format: [ ]: For instance, gcc >=13.1: build-essential indicates that the package build-essential should be installed to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the package to all versions of the compiler. When the package is unspecified, the action will infer the package from the compiler name and its version. triplets A multi-line list of triplets to be used with each range of compiler version. Each line has the format: [ ]: For instance, gcc >=13.1: x86_64-linux-gnu indicates that the triplet x86_64-linux-gnu should be used to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the triplet to all versions of the compiler. When the triplet is unspecified, the action will infer the triplet from the compiler name and its version. build-types A multi-line list of build types to be used with each range of compiler version. Each line has the format: [ ]: For instance, gcc >=13.1: Release indicates that the build type Release should be used to test gcc with any version in the semver range >=13.1. Omitting is equivalent to it being set to * and will apply the build type to all versions of the compiler. When the build type is unspecified, the action will infer the build type from the compiler name and its version. sanitizer-build-type Determine the default build type to suggest when testing with sanitizers. RelWithDebInfo x86-build-type Determine the default build type to suggest when testing with x86. Release use-containers Determine whether to use containers whenever possible to run the tests. By using containers for all jobs, the workflow can be more stable and reproducible. For instance, without containers an existing workflow cannot start to fail because of a change in the GitHub runner environments. However, this comes at a cost of initial setup time. Some existing workflows can also break when moving to containers because existing assumptions about tools available in the runner environment are no longer valid. When the value is false, the action will still use containers when needed. This may happen because the compiler is not available in the runner image or when there’s a reported conflict between compilers in the runner image. true output-file The file to output the matrix as a JSON string. This is useful when the matrix is too large to be printed in the logs or when the matrix needs to be saved for later use. The file will be saved in the current working directory of the action. matrix.json log-matrix Log the generated matrix as a JSON string. The is useful for debugging purposes and when transitioning to a workflow that uses a hard-coded matrix. true generate-summary Generate summary with the complete matrix. true trace-commands Trace commands executed by the action. false Output Description matrix The test matrix is an array of dictionaries, where each entry represents a combination of compiler version and factors to be tested. Each entry in the test matrix dictionary contains key-value pairs in the following categories: Basic fields: - name: A suggested name for the job testing this entry - compiler: Specifies the name of the compiler to be used for the test configuration. This can be used as input to the setup-cpp action. - version: Specifies the version requirements of the compiler to be used for the test configuration. This can be used as input to the setup-cpp action. - cxxstd: A list of standards that should be tested with this compiler version. This option considers the max-standards latest standards supported by each compiler in its subrange of standards. - latest-cxxstd: The last standard listed in cxxstd as a convenience variable Auxiliary: - major, minor, patch: Specifies the version components of the compiler whenever the whole range includes a single major, minor, or patch. - has_major, has_minor, has_patch: Determines if the corresponding version component of the compiler is available representing all versions in the range. - is-latest: Specifies whether the entry version requirement is the latest version among the test configurations. - is-main: Specifies whether the entry version requirement is the latest version among the test configurations without any factors applied. - is-earliest: Specifies whether the entry version requirement is the earliest version among the test configurations. - is-intermediary: Specifies whether the entry version requirement is neither the earliest nor the latest version among the test configurations. - has-factors: Specifies whether the entry has any factors applied. - is-no-factor-intermediary: Specifies whether the entry is an intermediary version without any factors applied. - is-container: Specifies whether the entry has a container suggested. Factors: - …​: Provides additional factors or attributes associated with the test configuration as defined by the factors inputs. These usually include variant build configurations spread among the entries, such as asan, coverage, and shared libraries. For instance, if the Asan factor is applied to an entry, the entry will define the asan key with the value true and all other entries will define the asan key with the value false. Suggestions: - runs-on: A suggested github runner image name for the job testing this entry - container: A suggested docker container for the job testing this entry - cxx: The usual name of the C++ compiler executable. If using the setup-cpp action, its output should be used instead. - cc: The usual name of the C compiler executable. If using the setup-cpp action, its output should be used instead. - b2-toolset: The usual name of the toolset to be used in a b2 workflow. - generator: A CMake generator recommended to run the CMake workflow. - build-type: A build type recommended to test this entry. This is usually Release, unless some special factor that requires Debug is defined. - ccflags: The recommended C flags to be used by this entry. It reflects the values of special factors, such as sanitizers, coverage, and time-trace. - cxxflags: The recommended C++ flags to be used by this entry. It reflects the values of special factors, such as sanitizers, coverage, and time-trace. - env: A dictionary of environment variables to be set for this entry. - install: The recommended packages to be installed before running the workflow. This includes packages such as build-essential for ubuntu containers and lcov for coverage entries.","title":"C++ Matrix","component":"cpp-actions","version":"master","name":"cpp-matrix","url":"/cpp-actions/actions/cpp-matrix.html","titles":[{"text":"Usage","hash":"_usage","id":1},{"text":"Factors","hash":"_factors","id":2},{"text":"Matrix entries","hash":"_matrix_entries","id":3},{"text":"Extra values in entries","hash":"_extra_values_in_entries","id":4},{"text":"Ordering entries","hash":"_ordering_entries","id":5},{"text":"Semver ranges","hash":"_semver_ranges","id":6},{"text":"Dynamic matrices","hash":"_dynamic_matrices","id":7},{"text":"Patching Node on old containers","hash":"_patching_node_on_old_containers","id":8},{"text":"Next steps","hash":"_next_steps","id":9},{"text":"Example","hash":"_example","id":10},{"text":"Input Parameters","hash":"_input_parameters","id":11},{"text":"Outputs","hash":"_outputs","id":12}]},"9":{"id":9,"text":"This action creates an initial Changelog from the commit history. This is usually the included in your workflow after building and testing your library with CMake Workflow in another job with the complete matrix. The commits considered go from the latest commit up to a commit containing a version commit pattern specified by version-pattern. The result can be used as the initial body for an automated release, a CHANGELOG.md file, or a job summary. Each commit is parsed as a loose variant of a conventional commit in the following format: [optional scope]: [optional body] [optional footer(s)] The body and footer are always ignored. If no type is indicated, the description goes to an initial \"other\" category in the message. If no scope is indicated, the description goes to an initial \"general\" scope in the type messages. Breaking changes are indicated. This action uses the local commit history to generate the notes. Ensure the fetch-depth option is set when cloning your repository in CI. If this option is unset, the checkout action will perform a shallow clone and the Changelog will only include the latest commit. - uses: actions/checkout@v3 with: fetch-depth: 100 This parameter can also be used as a limit on the number of commits the action should consider. steps: - name: Changelog uses: alandefreitas/cpp-actions/create-changelog@master with: output-path: CHANGELOG.md thank-non-regular: ${{ startsWith(github.ref, 'refs/tags/') }} github-token: ${{ secrets.GITHUB_TOKEN }} link-commits: ${{ github.ref_name == 'develop' }} Parameter Description Default source-dir The source directory from whose commits will be analyzed. . version-pattern A regex pattern used to identify if a commit is a version delimiter. When a commit has a message that matches this pattern, the list of commits considered in the notes is complete. For instance, assuming the pattern '(Bump|Set)\\s+version', when we find a commit subject such as 'Bump version to 1.0.0', the list of commits considered in the notes is complete. This constraint does not apply to the current and latest commit. (Bump|Set)\\s+version tag-pattern A regex pattern used to identify if a commit is a tagged delimiter. When a commit has the same hash has the commit associated with a tag whose name matches this pattern, the list of commits considered in the notes is complete. For instance, assuming the pattern 'v.\\..\\..*', when we find a commit with the same hash as the commit associated with the tag 'v1.0.0', the list of commits considered in the notes is complete. This tag is then associated as the parent version of the current release, and this information is included at the end of the changelog. This constraint does not apply to the current and latest commit. v.\\..\\..* output-path The path where the changelog will be stored. Relative paths are resolved from the source directory. CHANGELOG.md limit The limit on the number of commits considered in the Changelog. If the limit is set to 0 or undefined, all commits are considered. 0 thank-non-regular Thank non-regular contributors. The action will attempt to identify non-regular contributors by analyzing the commit history and the GitHub token provided. Non-regular contributors are contributors that do not have a are not part of the repository’s collaborators and have a small number of commits. The changelog will include a thank you message to these contributors, including a tag to their GitHub profile. When the Changelog is used in a release, this tag will usually be used by GitHub to notify these contributors of the new release with their contribution and the thank you message. true check-unconventional Check for commits that do not follow the conventional commit format. If one of the new commits in a PR does not follow the conventional commit format, the action will create a warning so that the user can fix the commit message. This helps ensure all commit messages can be used in the changelog so that it’s consistent and that the release notes are clear and concise. true link-commits Link commit ids in the changelog to the repository commit. For instance, if the changelog includes a commit id such as '471aec5', instead of including \"#471aec5\" next to the commit message, it will include the full version with the link: #471aec5 This is usually unnecessary because GitHub flavored markdown automatically links commits id in text to the commits in the same repository. Thus, including explicit links would often make the output more verbose and remove any extra GitHub functionality, such as pop ups associated with these ids. However, when the outputs is only going to be used as an action summary or in any other context outside GitHub, these automatic links do not exist and it’s often a good idea to explicitly include them to allow the reader to navigate to these repository commits. false github-token Github token to identify information about the project. This is currently used to: - Fetch the commit history to compare with the proposed changes and create a full changelog including the changes proposed in a PR and the changes that are already in the main branch. - Fetch the list of collaborators to identify non-regular contributors. The reason we need to fetch the commit history is because the checkout action only fetches the latest commit so the information about existing commits is not readily available to the workflow. The value for this token is usually set as the value of secrets.GITHUB_TOKEN. Although the action does not require this token to work, it will be limited in the number of requests it can make to the GitHub API and might be forced to work with limited information. update-summary When set to true, this action will update the workflow summary with the current changelog. true trace-commands Trace commands executed by the workflow. false","title":"Create Changelog","component":"cpp-actions","version":"master","name":"create-changelog","url":"/cpp-actions/actions/create-changelog.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2}]},"10":{"id":10,"text":"This action merges time-trace files generated by Clang and generates a FlameGraph. This is usually the next step in your workflow after building and testing your library with CMake Workflow. To generate the files, build the project with Clang and the -ftime-trace flag. For every object file, there will be a corresponding json file with details about build time. Each file in the build-dir will be combined into a single output file that contains all traces. The combined time-trace is used to generate a report and then converted to an image with FlameGraph. The combined time-trace files are uploaded to artifacts. It contains the svg file generated with FlameGraph, which you can open directly in the browser. It also contains a json file you can open with: https://www.speedscope.app/ (https://github.com/jlfwong/speedscope), or chrome://tracing/ A simple analysis is performed while combining the trace files and a report in markdown format is also generated. This report is saved to 'inputs.report-path' and also included with the artifacts. steps: - name: FlameGraph uses: alandefreitas/cpp-actions/flamegraph@master with: source-dir: tests build-dir: tests/build github_token: ${{ secrets.GITHUB_TOKEN }} Parameter Description Default source-dir The source directory used to generate time-traces. Relative paths in the report will be relative to this directory. . build-dir The directory with the time-traces. This should usually be your build directory. . output-path The path where the combined traces will be stored. If this is a relative path, it will be made relative to the build-dir. combined-traces.json report-path The path where the report will be stored. If this is a relative path, it will be made relative to the build-dir. time-trace-report.md generate-svg Generate SVG file with the output. true generate-report Generate a small report with ClangBuildAnalyzer. true update-summary Update action summary with the SVG file. true github_token An imgur client ID to upload the SVG flamegraph. See https://api.imgur.com/. upload-artifact Upload combined traces as artifact. true trace-commands Trace commands executed by the workflow. false Output Description traces-path The absolute path to combined traces. svg-path The absolute path to svg file.","title":"Create Flamegraph","component":"cpp-actions","version":"master","name":"flamegraph","url":"/cpp-actions/actions/flamegraph.html","titles":[{"text":"Example","hash":"_example","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2},{"text":"Outputs","hash":"_outputs","id":3}]},"11":{"id":11,"text":"This action installs dependencies from multiple package managers for a workflow. This is usually the next step in your workflow after setting up a C++ compiler with Setup C++. The action currently supports installing packages with apt-get and vcpkg. A number of auxiliary options are available to customize the behavior of both apt-get and vcpkg. If vcpkg dependencies are required, vcpkg will be installed and related paths are returned from the action. Both vcpkg and its compiled dependencies are cached. When your library depends on vcpkg for dependencies, it’s important to run the Setup C++ action before this step because vcpkg packages are built from source and this allows us to use the compiler set up in the previous step. After setting up the dependencies for your C++ project, the next step in your workflow should usually be CMake Workflow. Alternatively, if your libraries depends on Boost, the next step in your workflow should usually be Boost Clone, which allows the workflow to only download the required subset of Boost libraries required by the project. steps: - name: Install packages uses: alandefreitas/cpp-actions/package-install@master id: package-install with: vcpkg: ${{ matrix.vcpkg-packages }} vcpkg-triplet: ${{ matrix.triplet }} apt-get: ${{ matrix.install }} apt-get-ignore-missing: ${{ matrix.is-container }} cc: ${{ steps.setup-cpp.outputs.cc }} ccflags: ${{ matrix.ccflags }} cxx: ${{ steps.setup-cpp.outputs.cxx }} cxxflags: ${{ matrix.cxxflags }} Parameter Description Default vcpkg List of packages we should install with vcpkg. If any package is included in this list, vcpkg will be installed and the vcpkg toolchain file will be returned. Individual packages can define a custom triplet by appending : to the package name. apt-get List of packages we should install with apt-get. Additional options are provided to customize the behavior of apt-get. cxx C++ compiler to be used by vcpkg. If the compiler is not specified, the value will be retrieved from the environment variable CXX. Setting the compiler is particularly important when the compiler being tested is different from the default compiler used by vcpkg. cxxflags C++ flags used by vcpkg. If the flags are not specified, the value will be retrieved from the environment variable CXXFLAGS. cc C compiler used by vcpkg. If the compiler is not specified, the value will be retrieved from the environment variable CC. ccflags C flags used by vcpkg. If the flags are not specified, the value will be retrieved from the environment variable CFLAGS. vcpkg-triplet The triplet used by vcpkg to install packages. If no triplet is specified, a default triplet will be inferred from the platform. Individual packages can override this value by specifying a triplet in the package name. vcpkg-dir The directory where vcpkg should be cloned and installed. If the directory is unspecified, the runner tool cache is used. vcpkg-branch vcpkg branch we should use. This is usually the master branch. master vcpkg-cache Whether we should cache vcpkg and its built dependencies. This is useful when you want to speed up your workflow by caching vcpkg and its built dependencies for next workflows. You can disable this option when you want to always build vcpkg and its dependencies from scratch or want to save cache storage. true vcpkg-force-install Whether we should force install vcpkg and even when no vcpkg packages are listed. This is useful when you want to use vcpkg in manifest mode. false apt-get-retries Number of times we should retry when apt-get fails. This option is useful when apt-get fails due to a temporary network issue. When calling apt-get to install packages, this passes the -o Acquire::Retries option to apt-get. For other commands, the command will be called multiple times until it succeeds or the number of retries is exhausted. Each retry will be separated by a delay with an exponential backoff. 5 apt-get-sources List of sources for apt-get. Sources are installed with apt-add-repository. apt-get-source-keys List of source keys for apt-get. Source keys are installed with apt-key. apt-get-ignore-missing Whether apt-get should ignore missing packages. This attempts to install packages one by one and passes the --ignore-missing option to apt-get. false apt-get-add-architecture Argument to pass to dpkg to add an architecture. This is useful when installing packages that require a different architecture than the default one. If this string is not empty, it will be passed to dpkg with the --add-architecture flag. Common values for this parameter are: amd64 (64-bit x86), i386 (32-bit x86), armhf (ARM Hard Float), arm64 (ARM 64-bit), and ppc64el (PowerPC 64-bit Little Endian). This parameter can also be a list of architectures. apt-get-bulk-install This option determines if we should call apt-get once for each package (false) or if we should call apt-get once for all packages (true). This option is useful when installing a large number of packages, since it can speed up the installation process. However, installing libraries individually provides more better information in the logs, which can be useful for debugging. false trace-commands Trace commands executed by the action. false Output Description vcpkg-toolchain vcpkg toolchain file This output value can be used to configure CMake to use vcpkg. vcpkg-executable vcpkg executable file","title":"Install Packages","component":"cpp-actions","version":"master","name":"package-install","url":"/cpp-actions/actions/package-install.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4}]},"12":{"id":12,"text":"Set up a specific version of a Clang compiler and add it to the PATH. In most workflows, this is used as an auxiliary action for the setup-cpp action. This allows us to test a C++ library with any Clang version, and not only the versions circumstantially provided by apt-get. This action uses a number of alternatives to find or install Clang: The Clang path provided to 'path' Any other version of Clang it can find in the system Any other version of Clang available from APT A version of Clang from our own binary releases In most workflows, this is used as an auxiliary action for the Setup C++ action, which already calls this action if necessary. After setting up the proper C++ compiler for a matrix entry, the next step in your workflow should usually be Install Packages. Parameter Description Default version Version range or exact version of Clang to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. * path The clang or clang++ executable. We attempt to find Clang at this path first. clang++ check-latest By default, when Clang is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum Clang version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the clang executable. cxx The absolute path to the clang++ executable. dir The absolute path to the Clang directory containing the executable. version The installed Clang version. Useful when given a version range as input. version-major The installed Clang version major. Useful when given a version range as input. version-minor The installed Clang version minor. Useful when given a version range as input. version-patch The installed Clang version patch. Useful when given a version range as input.","title":"Setup Clang","component":"cpp-actions","version":"master","name":"setup-clang","url":"/cpp-actions/actions/setup-clang.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2},{"text":"Outputs","hash":"_outputs","id":3}]},"13":{"id":13,"text":"Set up a specific version of a CMake compiler and add it to the PATH. This action will also set-up any dependencies required by CMake. In most workflows, this is used as an auxiliary action for the CMake Workflow action, which already calls this action if necessary. Parameter Description Default version Version range or exact version of CMake to use, using SemVer’s version range syntax. Reads from cmake-file input if unset. By default, it uses any version available in the environment. >=3.0.2 architecture The target architecture (x86, x64). By default, this value is inferred. cmake-file File containing the CMake version to use in a cmake_minimum_required command. Example: A CMakeLists.txt file containing a call to cmake_minimum_required.\". CMakeLists.txt path Path to the cmake executable. The action attempts to find cmake at this path first. cmake cmake-path The cmake executable. We attempt to find cmake at this path first. This option is available for backwards compatibility and has priority over path. cache Used to specify whether the CMake installation should be cached in the case CMake needs to be downloaded. As binaries are provided for all versions of CMake, this option is deprecated and will be removed in a future release. true check-latest By default, when CMake is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum CMake version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description path The absolute path to the CMake executable. dir The absolute path to the CMake directory. version The installed CMake version. Useful when given a version range as input. version-major The installed CMake version major. Useful when given a version range as input. version-minor The installed CMake version minor. Useful when given a version range as input. version-patch The installed CMake version patch. Useful when given a version range as input. cache-hit A boolean value to indicate a cache entry was found supports-path-to-build Whether CMake supports the -B syntax supports-parallel-build Whether CMake supports the -j syntax supports-build-multiple-targets Whether CMake supports the --target with multiple targets supports-cmake-install Whether CMake supports the cmake --install","title":"Setup CMake","component":"cpp-actions","version":"master","name":"setup-cmake","url":"/cpp-actions/actions/setup-cmake.html","titles":[{"text":"Input Parameters","hash":"_input_parameters","id":1},{"text":"Outputs","hash":"_outputs","id":2}]},"14":{"id":14,"text":"Set up a C++ compiler and add it to the PATH. This is usually the first step in your workflow after consuming a matrix generated by C++ Matrix. The compiler parameter can be used to provide a compiler name or a compiler name with its version, separated by whitespace or a -. Examples valid names are gcc, g++, clang, gcc-10, g++ 10, clang 9.2. Note that strings like 10 and 9.2 are semver requirements and not semver versions. For instance, 10 represents the requirement equivalent to >=10.0.0 =9.2.0 <9.3.0. If the compiler parameter does not include a version requirement, the version parameter can be used to provide a version semver string in the npm format with the compiler requirements. If the compiler is GCC or Clang, this action routes to the appropriate Setup GCC or Setup Clang actions. If the compiler is MSVC, this action will setup the developer command prompt for Microsoft Visual C\\\\. If the compiler is MinGW, this action will look for g++ and gcc in the directories listed in the PATH environment variable. Any other compilers are passed through. If the compiler is GCC or Clang, the outputs include the paths to the compilers as well as the compiler version ultimately setup by the action. After setting up the proper C++ compiler for a matrix entry, the next step in your workflow should usually be Install Packages. steps: - name: Setup C++ uses: alandefreitas/cpp-actions/setup-cpp@master id: setup-cpp with: compiler: ${{ matrix.compiler }} version: ${{ matrix.version }} Parameter Description Default compiler Compiler name. If the compiler contains a version, it overrides 'version'. * version Version range or exact version of GCC to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. * path The compiler executable. We attempt to find the compiler at this path first. check-latest By default, when the compiler is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum GCC version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the C compiler executable. cxx The absolute path to the C++ compiler executable. bindir The absolute path to the directory containing the executable. dir The absolute path to the directory containing the installation. version The installed compiler version. Useful when given a version range as input. version-major The installed compiler version major. Useful when given a version range as input. version-minor The installed compiler version minor. Useful when given a version range as input. version-patch The installed compiler version patch. Useful when given a version range as input.","title":"Setup C++","component":"cpp-actions","version":"master","name":"setup-cpp","url":"/cpp-actions/actions/setup-cpp.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4}]},"15":{"id":15,"text":"Set up a specific version of a GCC compiler and add it to the PATH. In most workflows, this is used as an auxiliary action for the setup-cpp action. This allows us to test a C++ library with any GCC version, and not only the versions circumstantially provided by apt-get. This action uses a number of alternatives to find or install GCC: The GCC path provided to 'path' Any other version of GCC it can find in the system Any other version of GCC available from APT A version of GCC from our own binary releases The action will not attempt to install GCC from source files, which is the only officially supported method but impossible to run in CI because the machines would take hours to do that. If a version of GCC is not available by any other methods above, the GCC binaries for a given platform can be built locally with a script provided in this repository and added to our binary release. In most workflows, this is used as an auxiliary action for the Setup C++ action, which already calls this action if necessary. After setting up the proper C++ compiler for a matrix entry, the next step in your workflow should usually be Install Packages. Parameter Description Default version Version range or exact version of GCC to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. * path Path to the gcc or g++ executable. We attempt to find GCC at this path first. check-latest By default, when GCC is not available, this action will install the minimum version in the version spec. This ensures the code respects its contract in terms of what minimum GCC version is supported. Set this option if you want the action to check for the latest available version that satisfies the version spec instead. false update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false Output Description cc The absolute path to the gcc executable. cxx The absolute path to the g++ executable. dir The absolute path to the GCC directory containing the executable. version The installed GCC version. Useful when given a version range as input. version-major The installed GCC version major. Useful when given a version range as input. version-minor The installed GCC version minor. Useful when given a version range as input. version-patch The installed GCC version patch. Useful when given a version range as input.","title":"Setup GCC","component":"cpp-actions","version":"master","name":"setup-gcc","url":"/cpp-actions/actions/setup-gcc.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Input Parameters","hash":"_input_parameters","id":2},{"text":"Outputs","hash":"_outputs","id":3}]},"16":{"id":16,"text":"Set up a specific version of a program and add it to the PATH. This action is inspired in the cmake command find_program and the setup-python action. This allows us to find a certain version of program in the host environment and, if it cannot be found, fallback to basic patterns to download and install it. This action uses a number of alternatives to find or install a program: The program path hints provided to 'path' Any other version of the program it can find in the system Any other version of the program available from APT A version of the program from a link to binary releases In most workflows, this is used in conjunction to the Setup C++ and Install Packages actions to find or install extra programs necessary for the workflow that are not easily available from package managers or could already be available in the environment. This action also serves as a common repository for the logic to find and install programs used by other actions. After setting up the dependencies for your C++ project, the next step in your workflow should usually be CMake Workflow. steps: - name: Setup Doxygen uses: alandefreitas/cpp-actions/setup-program@master id: setup-doxygen with: name: doxygen version: '>=1.9' url: 'https://github.com/doxygen/doxygen/releases/download/Release_1_9_7/doxygen-1.9.7.{{ os }}${{ ( runner.os == ''Windows'' && ''.x64'' ) || '''' }}.bin.${{ ( runner.os == ''Windows'' && ''zip'' ) || ''tar.gz'' }} ' install-prefix: ${{ ( runner.os == 'Linux' && '/usr/local' ) || '' }} check-latest: true update-environment: true fail-on-error: ${{ runner.os != 'macOS' }} Parameter Description Default name The name of the executable we should look for. This parameter can also include a list of names to look for. ⚠️ This parameter is required. version Version range or exact version of the program to use, using SemVer’s version range syntax. By default, it uses any version available in the environment. If a version is provided, any executable found will be run with the --version option and the result will be parsed to look for a semver version, which will be considered the version we found. * path Specify directories and paths to search in addition to the default locations. The paths can be separated by ':' or ';'. check-latest Set this option if you want the action to check for the latest available version that satisfies the version spec. false url The URL to download the program binaries when it is not available in the environment. To simplify the download, the URL can contain the following placeholders: - {{name}}: The program name. - {{version}}: The version of the program to download. (coerced from the version input) - {{version-major}}: The major version of the program to download. (coerced from the version input) - {{version-minor}}: The minor version of the program to download. (coerced from the version input) - {{version-patch}}: The patch version of the program to download. (coerced from the version input) - {{platform}}: The platform name. (process.platform) - {{os}}: The operating system name. (process.platform converted to 'windows', 'macos', or 'linux') - {{arch}}: The architecture name. (process.arch). install-prefix The directory where the tool should be installed if it’s not available in the environment. By default, the tool will be installed in the hosttools cache directory. update-environment Set this option if you want the action to update environment variables. true trace-commands Trace commands executed by the workflow. false fail-on-error Fail if the program is not found. true Output Description path The absolute path to the program executable. dir The absolute path to the directory containing the executable. version The installed program version. Useful when given a version range as input. version-major The installed program version major. Useful when given a version range as input. version-minor The installed program version minor. Useful when given a version range as input. version-patch The installed program version patch. Useful when given a version range as input. found Whether the program was found.","title":"Setup Program","component":"cpp-actions","version":"master","name":"setup-program","url":"/cpp-actions/actions/setup-program.html","titles":[{"text":"Next steps","hash":"_next_steps","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Input Parameters","hash":"_input_parameters","id":3},{"text":"Outputs","hash":"_outputs","id":4}]}},"components":{},"componentVersions":{"cpp-actions/master":{"displayVersion":"master","title":"C++ Actions","version":"master","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/develop":{"displayVersion":"develop","title":"C++ Actions","version":"develop","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/develop/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/develop/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/develop/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/develop/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/develop/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/develop/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/develop/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/develop/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/develop/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/develop/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/develop/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/develop/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/develop/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/develop/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/develop/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/develop/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.8.6":{"displayVersion":"v1.8.6","title":"C++ Actions","version":"v1.8.6","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.8.6/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/v1.8.6/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.8.6/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.8.6/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.8.6/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.8.6/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.8.6/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.8.6/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.8.6/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.8.6/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.8.6/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.8.6/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.8.6/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.8.6/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.8.6/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.8.6/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.8.5":{"displayVersion":"v1.8.5","title":"C++ Actions","version":"v1.8.5","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.8.5/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/v1.8.5/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.8.5/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.8.5/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.8.5/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.8.5/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.8.5/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.8.5/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.8.5/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.8.5/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.8.5/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.8.5/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.8.5/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.8.5/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.8.5/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.8.5/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.8.4":{"displayVersion":"v1.8.4","title":"C++ Actions","version":"v1.8.4","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.8.4/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/v1.8.4/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.8.4/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.8.4/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.8.4/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.8.4/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.8.4/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.8.4/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.8.4/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.8.4/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.8.4/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.8.4/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.8.4/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.8.4/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.8.4/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.8.4/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.8.3":{"displayVersion":"v1.8.3","title":"C++ Actions","version":"v1.8.3","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.8.3/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/v1.8.3/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.8.3/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.8.3/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.8.3/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.8.3/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.8.3/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.8.3/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.8.3/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.8.3/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.8.3/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.8.3/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.8.3/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.8.3/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.8.3/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.8.3/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.8.2":{"displayVersion":"v1.8.2","title":"C++ Actions","version":"v1.8.2","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.8.2/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/v1.8.2/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.8.2/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.8.2/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.8.2/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.8.2/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.8.2/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.8.2/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.8.2/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.8.2/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.8.2/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.8.2/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.8.2/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.8.2/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.8.2/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.8.2/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.8.1":{"displayVersion":"v1.8.1","title":"C++ Actions","version":"v1.8.1","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.8.1/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/v1.8.1/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.8.1/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.8.1/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.8.1/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.8.1/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.8.1/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.8.1/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.8.1/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.8.1/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.8.1/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.8.1/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.8.1/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.8.1/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.8.1/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.8.1/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.8.0":{"displayVersion":"v1.8.0","title":"C++ Actions","version":"v1.8.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.8.0/index.html","navigation":[{"items":[{"content":"Design Rationale","url":"/cpp-actions/v1.8.0/design.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.8.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.8.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.8.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.8.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.8.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.8.0/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.8.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.8.0/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.8.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.8.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Reports","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.8.0/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.8.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.8.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.8.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.7.0":{"displayVersion":"v1.7.0","title":"C++ Actions","version":"v1.7.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.7.0/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.7.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.7.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.7.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.7.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.7.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.7.0/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.7.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.7.0/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.7.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.7.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.7.0/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.7.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.7.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.7.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.6.2":{"displayVersion":"v1.6.2","title":"C++ Actions","version":"v1.6.2","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.6.2/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.6.2/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.6.2/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.6.2/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.6.2/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.6.2/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.6.2/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.6.2/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.6.2/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.6.2/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.6.2/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.6.2/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.6.2/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.6.2/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.6.2/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.6.1":{"displayVersion":"v1.6.1","title":"C++ Actions","version":"v1.6.1","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.6.1/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.6.1/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.6.1/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.6.1/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.6.1/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.6.1/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.6.1/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.6.1/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.6.1/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.6.1/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.6.1/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.6.1/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.6.1/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.6.1/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.6.1/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.6.0":{"displayVersion":"v1.6.0","title":"C++ Actions","version":"v1.6.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.6.0/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.6.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.6.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.6.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.6.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.6.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.6.0/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.6.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.6.0/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.6.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.6.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.6.0/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.6.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.6.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.6.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.5.0":{"displayVersion":"v1.5.0","title":"C++ Actions","version":"v1.5.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.5.0/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.5.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.5.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.5.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.5.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.5.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.5.0/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.5.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup Program Action","url":"/cpp-actions/v1.5.0/actions/setup-program.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.5.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.5.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.5.0/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.5.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.5.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.5.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.4.1":{"displayVersion":"v1.4.1","title":"C++ Actions","version":"v1.4.1","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.4.1/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.4.1/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.4.1/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.4.1/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.4.1/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Install Packages Action","url":"/cpp-actions/v1.4.1/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.4.1/actions/boost-clone.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.4.1/actions/setup-cmake.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.4.1/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.4.1/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.4.1/actions/flamegraph.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.4.1/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.4.1/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.4.1/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.4.0":{"displayVersion":"v1.4.0","title":"C++ Actions","version":"v1.4.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.4.0/index.html","navigation":[{"items":[{"content":"C++ Matrix Action","url":"/cpp-actions/v1.4.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.4.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.4.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.4.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/v1.4.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/v1.4.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.4.0/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.4.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.4.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/v1.4.0/actions/create-changelog.html","urlType":"internal"},{"content":"Create Flamegraph Action","url":"/cpp-actions/v1.4.0/actions/flamegraph.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.4.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.4.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.3.0":{"displayVersion":"v1.3.0","title":"C++ Actions","version":"v1.3.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.3.0/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/v1.3.0/index.html","urlType":"internal"},{"content":"C++ Matrix Action","url":"/cpp-actions/v1.3.0/actions/cpp-matrix.html","urlType":"internal"},{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.3.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.3.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.3.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/v1.3.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/v1.3.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.3.0/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.3.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.3.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/v1.3.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.3.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.3.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.2.1":{"displayVersion":"v1.2.1","title":"C++ Actions","version":"v1.2.1","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.2.1/index.html","navigation":[{"items":[{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.2.1/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.2.1/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.2.1/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/v1.2.1/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/v1.2.1/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.2.1/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.2.1/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.2.1/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/v1.2.1/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.2.1/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.2.1/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.2.0":{"displayVersion":"v1.2.0","title":"C++ Actions","version":"v1.2.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.2.0/index.html","navigation":[{"items":[{"content":"Compilers","items":[{"content":"Setup C++ Action","url":"/cpp-actions/v1.2.0/actions/setup-cpp.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.2.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Setup Clang Action","url":"/cpp-actions/v1.2.0/actions/setup-clang.html","urlType":"internal"}]},{"content":"Tools","items":[{"content":"Setup CMake Action","url":"/cpp-actions/v1.2.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Install Packages Action","url":"/cpp-actions/v1.2.0/actions/package-install.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.2.0/actions/boost-clone.html","urlType":"internal"}]},{"content":"Workflows","items":[{"content":"CMake Workflow Action","url":"/cpp-actions/v1.2.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.2.0/actions/b2-workflow.html","urlType":"internal"}]},{"content":"Project","items":[{"content":"Create Changelog Action","url":"/cpp-actions/v1.2.0/actions/create-changelog.html","urlType":"internal"}]},{"content":"Contribute","url":"/cpp-actions/v1.2.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.2.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.1.0":{"displayVersion":"v1.1.0","title":"C++ Actions","version":"v1.1.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.1.0/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/v1.1.0/index.html","urlType":"internal"},{"content":"Install dependencies Action","url":"/cpp-actions/v1.1.0/actions/package-install.html","urlType":"internal"},{"content":"CMake Workflow Action","url":"/cpp-actions/v1.1.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.1.0/actions/boost-clone.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.1.0/actions/b2-workflow.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.1.0/actions/create-changelog.html","urlType":"internal"},{"content":"Setup CMake Action","url":"/cpp-actions/v1.1.0/actions/setup-cmake.html","urlType":"internal"},{"content":"Setup GCC Action","url":"/cpp-actions/v1.1.0/actions/setup-gcc.html","urlType":"internal"},{"content":"Contribute","url":"/cpp-actions/v1.1.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.1.0/license.html","urlType":"internal"}],"root":true,"order":0}]},"cpp-actions/v1.0.0":{"displayVersion":"v1.0.0","title":"C++ Actions","version":"v1.0.0","name":"cpp-actions","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"C++ Actions","site-url":"https://alandefreitas.github.io/cpp-actions/","source-language":"asciidoc@","table-caption":false},"sourcemap":false,"extensions":[{},{}]},"url":"/cpp-actions/v1.0.0/index.html","navigation":[{"items":[{"content":"Home","url":"/cpp-actions/v1.0.0/index.html","urlType":"internal"},{"content":"Install dependencies Action","url":"/cpp-actions/v1.0.0/actions/package-install.html","urlType":"internal"},{"content":"CMake Workflow Action","url":"/cpp-actions/v1.0.0/actions/cmake-workflow.html","urlType":"internal"},{"content":"Boost Clone Action","url":"/cpp-actions/v1.0.0/actions/boost-clone.html","urlType":"internal"},{"content":"B2 Workflow Action","url":"/cpp-actions/v1.0.0/actions/b2-workflow.html","urlType":"internal"},{"content":"Create Changelog Action","url":"/cpp-actions/v1.0.0/actions/create-changelog.html","urlType":"internal"},{"content":"Contribute","url":"/cpp-actions/v1.0.0/contribute.html","urlType":"internal"},{"content":"License","url":"/cpp-actions/v1.0.0/license.html","urlType":"internal"}],"root":true,"order":0}]}}}})